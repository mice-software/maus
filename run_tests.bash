#!/bin/bash
set -e

if [ -z "${MAUS_ROOT_DIR}" ]; then  # see if the variable exists yet
    echo "ERROR: \$MAUS_ROOT_DIR not set"
    exit 1;
fi

echo "Your current directory is:"
pwd
echo
echo "Your MAUS_ROOT_DIR is:"
echo ${MAUS_ROOT_DIR}
echo
echo "These should agree"

<<<<<<< TREE
# To run lcov:-
# (a) Uncomment lines below
# (b) Uncomment some CCFLAGS in SConstruct

#if which lcov >& /dev/null; then 
#    echo Clearing lcov
#    lcov -q -b ${MAUS_ROOT_DIR} --directory src --zerocounters -q
#fi
nosetests -v --with-coverage build
#if which lcov >& /dev/null; then 
#    echo Building lcov output
#    lcov  -q -b ${MAUS_ROOT_DIR} --directory src --capture --output-file maus.info
#    genhtml -o doc/coverage/ maus.info
#fi

=======
if [ $maus_lcov ]; then
    if [ $maus_lcov -ne "0" ]; then # if set, request coverage stats for cpp using lcov
        if which lcov >& /dev/null; then # check for lcov existence
            echo Clearing lcov
            lcov -q -b ${MAUS_ROOT_DIR} --directory src --zerocounters -q
        else
            echo ERROR: lcov not found - despite environment variable set
            exit 1
        fi
    fi
fi
nosetests --with-coverage -v build
if [ $maus_lcov ]; then
    if [ $maus_lcov -ne "0" ]; then
        echo Building lcov output
        lcov  -q -b ${MAUS_ROOT_DIR} --directory src --capture --output-file maus.info
        genhtml -o doc/coverage/ maus.info
    fi
fi
>>>>>>> MERGE-SOURCE
# generated by: find bin -type f -executable | grep -v \~
#bin/load_test.py
#bin/simulate_mice.py
