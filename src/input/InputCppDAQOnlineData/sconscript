import time
import os

from SCons.Script.SConscript import SConsEnvironment

def fail(project):
    fail_path = os.path.split(project)[-1]
    fail_path = os.path.join('$MAUS_ROOT_DIR', 'tmp', fail_path+'_failed_build')
    open(os.path.expandvars(fail_path), 'w').close()
    time.sleep(1)

# get environment and project
Import('env', 'project', 'conf')
local_env = env.Clone()
local_env.Append(LIBS=['MDMonitor'])

# Return("my_variable") should return a value - but doesn't appear to work
# instead I set a flag in .sconf_temp/ to indicate a subproject failed
if (not conf.CheckCXXHeader('MDmonitoring.hh')):
    print """
MDmonitoring.hh file required for online operation not found.
InputCppDAQOnlineData module will not be built.
"""
    fail(project)
elif (not conf.CheckLib('MDMonitor')):
    print """
I could not link against MDMonitor library required for online operation. Module
to read online socket will not be built.
"""
    fail(project)
else:
    env.jDev.build_project(local_env, project, ['src/input/InputCppDAQData'])

