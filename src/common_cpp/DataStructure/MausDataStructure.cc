//
// File generated by rootcint at Thu May  3 13:59:45 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIcr67dIMAUSdImaus_mergedIsrcdIcommon_cppdIDataStructuredIdIMausDataStructure
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MausDataStructure.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace CLHEP {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CLHEP::Hep3Vector Hep3Vector;
      #else
      class Hep3Vector  {
         public:
         //friend XX;
         double dx; //
         double dy; //
         double dz; //
      };
      #endif
      } 
      namespace MAUS {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MAUS::Hit< ::MAUS::SciFiChannelId > HitlEMAUScLcLSciFiChannelIdgR;
      #else
      class HitlEMAUScLcLSciFiChannelIdgR  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~HitlEMAUScLcLSciFiChannelIdgR() throw() {};
         int _track_id; //
         int _particle_id; //
         double _energy; //
         double _charge; //
         double _time; //
         double _energy_deposited; //
         ::CLHEP::Hep3Vector _position; //
         ::CLHEP::Hep3Vector _momentum; //
         ::MAUS::SciFiChannelId* _channel_id; //
      };
      #endif
      } 
      namespace MAUS {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MAUS::Hit< ::MAUS::TOFChannelId > HitlEMAUScLcLTOFChannelIdgR;
      #else
      class HitlEMAUScLcLTOFChannelIdgR  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~HitlEMAUScLcLTOFChannelIdgR() throw() {};
         int _track_id; //
         int _particle_id; //
         double _energy; //
         double _charge; //
         double _time; //
         double _energy_deposited; //
         ::CLHEP::Hep3Vector _position; //
         ::CLHEP::Hep3Vector _momentum; //
         ::MAUS::TOFChannelId* _channel_id; //
      };
      #endif
      } 
      namespace MAUS {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MAUS::Hit< ::MAUS::SpecialVirtualChannelId > HitlEMAUScLcLSpecialVirtualChannelIdgR;
      #else
      class HitlEMAUScLcLSpecialVirtualChannelIdgR  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~HitlEMAUScLcLSpecialVirtualChannelIdgR() throw() {};
         int _track_id; //
         int _particle_id; //
         double _energy; //
         double _charge; //
         double _time; //
         double _energy_deposited; //
         ::CLHEP::Hep3Vector _position; //
         ::CLHEP::Hep3Vector _momentum; //
         ::MAUS::SpecialVirtualChannelId* _channel_id; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CLHEPcLcLHep3Vector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CLHEPcLcLHep3Vector_Dictionary();
   static void *new_CLHEPcLcLHep3Vector(void *p = 0);
   static void *newArray_CLHEPcLcLHep3Vector(Long_t size, void *p);
   static void delete_CLHEPcLcLHep3Vector(void *p);
   static void deleteArray_CLHEPcLcLHep3Vector(void *p);
   static void destruct_CLHEPcLcLHep3Vector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CLHEP::Hep3Vector*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CLHEP::Hep3Vector) == sizeof(::ROOT::Shadow::CLHEP::Hep3Vector));
      ::CLHEP::Hep3Vector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CLHEP::Hep3Vector),0);
      static ::ROOT::TGenericClassInfo 
         instance("CLHEP::Hep3Vector", "/home/cr67/MAUS/maus_merge/third_party/install/include/CLHEP/Vector/ThreeVector.h", 41,
                  typeid(::CLHEP::Hep3Vector), DefineBehavior(ptr, ptr),
                  &CLHEPcLcLHep3Vector_ShowMembers, &CLHEPcLcLHep3Vector_Dictionary, isa_proxy, 4,
                  sizeof(::CLHEP::Hep3Vector) );
      instance.SetNew(&new_CLHEPcLcLHep3Vector);
      instance.SetNewArray(&newArray_CLHEPcLcLHep3Vector);
      instance.SetDelete(&delete_CLHEPcLcLHep3Vector);
      instance.SetDeleteArray(&deleteArray_CLHEPcLcLHep3Vector);
      instance.SetDestructor(&destruct_CLHEPcLcLHep3Vector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CLHEP::Hep3Vector*)
   {
      return GenerateInitInstanceLocal((::CLHEP::Hep3Vector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CLHEP::Hep3Vector*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CLHEPcLcLHep3Vector_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CLHEP::Hep3Vector*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLPrimary_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLPrimary(void *p = 0);
   static void *newArray_MAUScLcLPrimary(Long_t size, void *p);
   static void delete_MAUScLcLPrimary(void *p);
   static void deleteArray_MAUScLcLPrimary(void *p);
   static void destruct_MAUScLcLPrimary(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Primary*)
   {
      ::MAUS::Primary *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Primary >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Primary", ::MAUS::Primary::Class_Version(), "/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Primary.hh", 32,
                  typeid(::MAUS::Primary), DefineBehavior(ptr, ptr),
                  &::MAUS::Primary::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Primary) );
      instance.SetNew(&new_MAUScLcLPrimary);
      instance.SetNewArray(&newArray_MAUScLcLPrimary);
      instance.SetDelete(&delete_MAUScLcLPrimary);
      instance.SetDeleteArray(&deleteArray_MAUScLcLPrimary);
      instance.SetDestructor(&destruct_MAUScLcLPrimary);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Primary*)
   {
      return GenerateInitInstanceLocal((::MAUS::Primary*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Primary*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLSciFiEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLSciFiEvent(void *p = 0);
   static void *newArray_MAUScLcLSciFiEvent(Long_t size, void *p);
   static void delete_MAUScLcLSciFiEvent(void *p);
   static void deleteArray_MAUScLcLSciFiEvent(void *p);
   static void destruct_MAUScLcLSciFiEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::SciFiEvent*)
   {
      ::MAUS::SciFiEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::SciFiEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::SciFiEvent", ::MAUS::SciFiEvent::Class_Version(), "/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/SciFiEvent.hh", 28,
                  typeid(::MAUS::SciFiEvent), DefineBehavior(ptr, ptr),
                  &::MAUS::SciFiEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::SciFiEvent) );
      instance.SetNew(&new_MAUScLcLSciFiEvent);
      instance.SetNewArray(&newArray_MAUScLcLSciFiEvent);
      instance.SetDelete(&delete_MAUScLcLSciFiEvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLSciFiEvent);
      instance.SetDestructor(&destruct_MAUScLcLSciFiEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::SciFiEvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::SciFiEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::SciFiEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLPmt0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLPmt0(void *p = 0);
   static void *newArray_MAUScLcLPmt0(Long_t size, void *p);
   static void delete_MAUScLcLPmt0(void *p);
   static void deleteArray_MAUScLcLPmt0(void *p);
   static void destruct_MAUScLcLPmt0(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Pmt0*)
   {
      ::MAUS::Pmt0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Pmt0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Pmt0", ::MAUS::Pmt0::Class_Version(), "/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Pmt0.hh", 35,
                  typeid(::MAUS::Pmt0), DefineBehavior(ptr, ptr),
                  &::MAUS::Pmt0::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Pmt0) );
      instance.SetNew(&new_MAUScLcLPmt0);
      instance.SetNewArray(&newArray_MAUScLcLPmt0);
      instance.SetDelete(&delete_MAUScLcLPmt0);
      instance.SetDeleteArray(&deleteArray_MAUScLcLPmt0);
      instance.SetDestructor(&destruct_MAUScLcLPmt0);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Pmt0*)
   {
      return GenerateInitInstanceLocal((::MAUS::Pmt0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Pmt0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLSpecialVirtualChannelId_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLSpecialVirtualChannelId(void *p = 0);
   static void *newArray_MAUScLcLSpecialVirtualChannelId(Long_t size, void *p);
   static void delete_MAUScLcLSpecialVirtualChannelId(void *p);
   static void deleteArray_MAUScLcLSpecialVirtualChannelId(void *p);
   static void destruct_MAUScLcLSpecialVirtualChannelId(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::SpecialVirtualChannelId*)
   {
      ::MAUS::SpecialVirtualChannelId *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::SpecialVirtualChannelId >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::SpecialVirtualChannelId", ::MAUS::SpecialVirtualChannelId::Class_Version(), "/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/SpecialVirtualChannelId.hh", 26,
                  typeid(::MAUS::SpecialVirtualChannelId), DefineBehavior(ptr, ptr),
                  &::MAUS::SpecialVirtualChannelId::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::SpecialVirtualChannelId) );
      instance.SetNew(&new_MAUScLcLSpecialVirtualChannelId);
      instance.SetNewArray(&newArray_MAUScLcLSpecialVirtualChannelId);
      instance.SetDelete(&delete_MAUScLcLSpecialVirtualChannelId);
      instance.SetDeleteArray(&deleteArray_MAUScLcLSpecialVirtualChannelId);
      instance.SetDestructor(&destruct_MAUScLcLSpecialVirtualChannelId);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::SpecialVirtualChannelId*)
   {
      return GenerateInitInstanceLocal((::MAUS::SpecialVirtualChannelId*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::SpecialVirtualChannelId*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLV1724_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLV1724(void *p = 0);
   static void *newArray_MAUScLcLV1724(Long_t size, void *p);
   static void delete_MAUScLcLV1724(void *p);
   static void deleteArray_MAUScLcLV1724(void *p);
   static void destruct_MAUScLcLV1724(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::V1724*)
   {
      ::MAUS::V1724 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::V1724 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::V1724", ::MAUS::V1724::Class_Version(), "./src/common_cpp/DataStructure/V1724.hh", 43,
                  typeid(::MAUS::V1724), DefineBehavior(ptr, ptr),
                  &::MAUS::V1724::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::V1724) );
      instance.SetNew(&new_MAUScLcLV1724);
      instance.SetNewArray(&newArray_MAUScLcLV1724);
      instance.SetDelete(&delete_MAUScLcLV1724);
      instance.SetDeleteArray(&deleteArray_MAUScLcLV1724);
      instance.SetDestructor(&destruct_MAUScLcLV1724);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::V1724*)
   {
      return GenerateInitInstanceLocal((::MAUS::V1724*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::V1724*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLKLDaq_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLKLDaq(void *p = 0);
   static void *newArray_MAUScLcLKLDaq(Long_t size, void *p);
   static void delete_MAUScLcLKLDaq(void *p);
   static void deleteArray_MAUScLcLKLDaq(void *p);
   static void destruct_MAUScLcLKLDaq(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::KLDaq*)
   {
      ::MAUS::KLDaq *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::KLDaq >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::KLDaq", ::MAUS::KLDaq::Class_Version(), "./src/common_cpp/DataStructure/KLDaq.hh", 33,
                  typeid(::MAUS::KLDaq), DefineBehavior(ptr, ptr),
                  &::MAUS::KLDaq::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::KLDaq) );
      instance.SetNew(&new_MAUScLcLKLDaq);
      instance.SetNewArray(&newArray_MAUScLcLKLDaq);
      instance.SetDelete(&delete_MAUScLcLKLDaq);
      instance.SetDeleteArray(&deleteArray_MAUScLcLKLDaq);
      instance.SetDestructor(&destruct_MAUScLcLKLDaq);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::KLDaq*)
   {
      return GenerateInitInstanceLocal((::MAUS::KLDaq*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::KLDaq*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLV1290_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLV1290(void *p = 0);
   static void *newArray_MAUScLcLV1290(Long_t size, void *p);
   static void delete_MAUScLcLV1290(void *p);
   static void deleteArray_MAUScLcLV1290(void *p);
   static void destruct_MAUScLcLV1290(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::V1290*)
   {
      ::MAUS::V1290 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::V1290 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::V1290", ::MAUS::V1290::Class_Version(), "./src/common_cpp/DataStructure/V1290.hh", 42,
                  typeid(::MAUS::V1290), DefineBehavior(ptr, ptr),
                  &::MAUS::V1290::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::V1290) );
      instance.SetNew(&new_MAUScLcLV1290);
      instance.SetNewArray(&newArray_MAUScLcLV1290);
      instance.SetDelete(&delete_MAUScLcLV1290);
      instance.SetDeleteArray(&deleteArray_MAUScLcLV1290);
      instance.SetDestructor(&destruct_MAUScLcLV1290);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::V1290*)
   {
      return GenerateInitInstanceLocal((::MAUS::V1290*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::V1290*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTrigger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTrigger(void *p = 0);
   static void *newArray_MAUScLcLTrigger(Long_t size, void *p);
   static void delete_MAUScLcLTrigger(void *p);
   static void deleteArray_MAUScLcLTrigger(void *p);
   static void destruct_MAUScLcLTrigger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Trigger*)
   {
      ::MAUS::Trigger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Trigger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Trigger", ::MAUS::Trigger::Class_Version(), "./src/common_cpp/DataStructure/Trigger.hh", 33,
                  typeid(::MAUS::Trigger), DefineBehavior(ptr, ptr),
                  &::MAUS::Trigger::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Trigger) );
      instance.SetNew(&new_MAUScLcLTrigger);
      instance.SetNewArray(&newArray_MAUScLcLTrigger);
      instance.SetDelete(&delete_MAUScLcLTrigger);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTrigger);
      instance.SetDestructor(&destruct_MAUScLcLTrigger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Trigger*)
   {
      return GenerateInitInstanceLocal((::MAUS::Trigger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Trigger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFDaq_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFDaq(void *p = 0);
   static void *newArray_MAUScLcLTOFDaq(Long_t size, void *p);
   static void delete_MAUScLcLTOFDaq(void *p);
   static void deleteArray_MAUScLcLTOFDaq(void *p);
   static void destruct_MAUScLcLTOFDaq(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFDaq*)
   {
      ::MAUS::TOFDaq *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFDaq >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFDaq", ::MAUS::TOFDaq::Class_Version(), "./src/common_cpp/DataStructure/TOFDaq.hh", 36,
                  typeid(::MAUS::TOFDaq), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFDaq::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFDaq) );
      instance.SetNew(&new_MAUScLcLTOFDaq);
      instance.SetNewArray(&newArray_MAUScLcLTOFDaq);
      instance.SetDelete(&delete_MAUScLcLTOFDaq);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFDaq);
      instance.SetDestructor(&destruct_MAUScLcLTOFDaq);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFDaq*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFDaq*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFDaq*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLChannels_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLChannels(void *p = 0);
   static void *newArray_MAUScLcLChannels(Long_t size, void *p);
   static void delete_MAUScLcLChannels(void *p);
   static void deleteArray_MAUScLcLChannels(void *p);
   static void destruct_MAUScLcLChannels(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Channels*)
   {
      ::MAUS::Channels *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Channels >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Channels", ::MAUS::Channels::Class_Version(), "./src/common_cpp/DataStructure/Channels.hh", 60,
                  typeid(::MAUS::Channels), DefineBehavior(ptr, ptr),
                  &::MAUS::Channels::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Channels) );
      instance.SetNew(&new_MAUScLcLChannels);
      instance.SetNewArray(&newArray_MAUScLcLChannels);
      instance.SetDelete(&delete_MAUScLcLChannels);
      instance.SetDeleteArray(&deleteArray_MAUScLcLChannels);
      instance.SetDestructor(&destruct_MAUScLcLChannels);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Channels*)
   {
      return GenerateInitInstanceLocal((::MAUS::Channels*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Channels*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLV830_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLV830(void *p = 0);
   static void *newArray_MAUScLcLV830(Long_t size, void *p);
   static void delete_MAUScLcLV830(void *p);
   static void deleteArray_MAUScLcLV830(void *p);
   static void destruct_MAUScLcLV830(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::V830*)
   {
      ::MAUS::V830 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::V830 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::V830", ::MAUS::V830::Class_Version(), "./src/common_cpp/DataStructure/V830.hh", 35,
                  typeid(::MAUS::V830), DefineBehavior(ptr, ptr),
                  &::MAUS::V830::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::V830) );
      instance.SetNew(&new_MAUScLcLV830);
      instance.SetNewArray(&newArray_MAUScLcLV830);
      instance.SetDelete(&delete_MAUScLcLV830);
      instance.SetDeleteArray(&deleteArray_MAUScLcLV830);
      instance.SetDestructor(&destruct_MAUScLcLV830);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::V830*)
   {
      return GenerateInitInstanceLocal((::MAUS::V830*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::V830*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLV1731_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLV1731(void *p = 0);
   static void *newArray_MAUScLcLV1731(Long_t size, void *p);
   static void delete_MAUScLcLV1731(void *p);
   static void deleteArray_MAUScLcLV1731(void *p);
   static void destruct_MAUScLcLV1731(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::V1731*)
   {
      ::MAUS::V1731 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::V1731 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::V1731", ::MAUS::V1731::Class_Version(), "./src/common_cpp/DataStructure/V1731.hh", 50,
                  typeid(::MAUS::V1731), DefineBehavior(ptr, ptr),
                  &::MAUS::V1731::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::V1731) );
      instance.SetNew(&new_MAUScLcLV1731);
      instance.SetNewArray(&newArray_MAUScLcLV1731);
      instance.SetDelete(&delete_MAUScLcLV1731);
      instance.SetDeleteArray(&deleteArray_MAUScLcLV1731);
      instance.SetDestructor(&destruct_MAUScLcLV1731);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::V1731*)
   {
      return GenerateInitInstanceLocal((::MAUS::V1731*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::V1731*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLCkovDaq_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLCkovDaq(void *p = 0);
   static void *newArray_MAUScLcLCkovDaq(Long_t size, void *p);
   static void delete_MAUScLcLCkovDaq(void *p);
   static void deleteArray_MAUScLcLCkovDaq(void *p);
   static void destruct_MAUScLcLCkovDaq(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::CkovDaq*)
   {
      ::MAUS::CkovDaq *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::CkovDaq >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::CkovDaq", ::MAUS::CkovDaq::Class_Version(), "./src/common_cpp/DataStructure/CkovDaq.hh", 33,
                  typeid(::MAUS::CkovDaq), DefineBehavior(ptr, ptr),
                  &::MAUS::CkovDaq::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::CkovDaq) );
      instance.SetNew(&new_MAUScLcLCkovDaq);
      instance.SetNewArray(&newArray_MAUScLcLCkovDaq);
      instance.SetDelete(&delete_MAUScLcLCkovDaq);
      instance.SetDeleteArray(&deleteArray_MAUScLcLCkovDaq);
      instance.SetDestructor(&destruct_MAUScLcLCkovDaq);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::CkovDaq*)
   {
      return GenerateInitInstanceLocal((::MAUS::CkovDaq*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::CkovDaq*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLUnknown_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLUnknown(void *p = 0);
   static void *newArray_MAUScLcLUnknown(Long_t size, void *p);
   static void delete_MAUScLcLUnknown(void *p);
   static void deleteArray_MAUScLcLUnknown(void *p);
   static void destruct_MAUScLcLUnknown(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Unknown*)
   {
      ::MAUS::Unknown *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Unknown >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Unknown", ::MAUS::Unknown::Class_Version(), "./src/common_cpp/DataStructure/Unknown.hh", 33,
                  typeid(::MAUS::Unknown), DefineBehavior(ptr, ptr),
                  &::MAUS::Unknown::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Unknown) );
      instance.SetNew(&new_MAUScLcLUnknown);
      instance.SetNewArray(&newArray_MAUScLcLUnknown);
      instance.SetDelete(&delete_MAUScLcLUnknown);
      instance.SetDeleteArray(&deleteArray_MAUScLcLUnknown);
      instance.SetDestructor(&destruct_MAUScLcLUnknown);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Unknown*)
   {
      return GenerateInitInstanceLocal((::MAUS::Unknown*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Unknown*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTriggerRequest_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTriggerRequest(void *p = 0);
   static void *newArray_MAUScLcLTriggerRequest(Long_t size, void *p);
   static void delete_MAUScLcLTriggerRequest(void *p);
   static void deleteArray_MAUScLcLTriggerRequest(void *p);
   static void destruct_MAUScLcLTriggerRequest(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TriggerRequest*)
   {
      ::MAUS::TriggerRequest *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TriggerRequest >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TriggerRequest", ::MAUS::TriggerRequest::Class_Version(), "./src/common_cpp/DataStructure/TriggerRequest.hh", 33,
                  typeid(::MAUS::TriggerRequest), DefineBehavior(ptr, ptr),
                  &::MAUS::TriggerRequest::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TriggerRequest) );
      instance.SetNew(&new_MAUScLcLTriggerRequest);
      instance.SetNewArray(&newArray_MAUScLcLTriggerRequest);
      instance.SetDelete(&delete_MAUScLcLTriggerRequest);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTriggerRequest);
      instance.SetDestructor(&destruct_MAUScLcLTriggerRequest);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TriggerRequest*)
   {
      return GenerateInitInstanceLocal((::MAUS::TriggerRequest*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TriggerRequest*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTag_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTag(void *p = 0);
   static void *newArray_MAUScLcLTag(Long_t size, void *p);
   static void delete_MAUScLcLTag(void *p);
   static void deleteArray_MAUScLcLTag(void *p);
   static void destruct_MAUScLcLTag(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Tag*)
   {
      ::MAUS::Tag *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Tag >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Tag", ::MAUS::Tag::Class_Version(), "./src/common_cpp/DataStructure/Tag.hh", 33,
                  typeid(::MAUS::Tag), DefineBehavior(ptr, ptr),
                  &::MAUS::Tag::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Tag) );
      instance.SetNew(&new_MAUScLcLTag);
      instance.SetNewArray(&newArray_MAUScLcLTag);
      instance.SetDelete(&delete_MAUScLcLTag);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTag);
      instance.SetDestructor(&destruct_MAUScLcLTag);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Tag*)
   {
      return GenerateInitInstanceLocal((::MAUS::Tag*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Tag*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLDAQData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLDAQData(void *p = 0);
   static void *newArray_MAUScLcLDAQData(Long_t size, void *p);
   static void delete_MAUScLcLDAQData(void *p);
   static void deleteArray_MAUScLcLDAQData(void *p);
   static void destruct_MAUScLcLDAQData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::DAQData*)
   {
      ::MAUS::DAQData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::DAQData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::DAQData", ::MAUS::DAQData::Class_Version(), "./src/common_cpp/DataStructure/DAQData.hh", 57,
                  typeid(::MAUS::DAQData), DefineBehavior(ptr, ptr),
                  &::MAUS::DAQData::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::DAQData) );
      instance.SetNew(&new_MAUScLcLDAQData);
      instance.SetNewArray(&newArray_MAUScLcLDAQData);
      instance.SetDelete(&delete_MAUScLcLDAQData);
      instance.SetDeleteArray(&deleteArray_MAUScLcLDAQData);
      instance.SetDestructor(&destruct_MAUScLcLDAQData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::DAQData*)
   {
      return GenerateInitInstanceLocal((::MAUS::DAQData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::DAQData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLEMRSpillData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLEMRSpillData(void *p = 0);
   static void *newArray_MAUScLcLEMRSpillData(Long_t size, void *p);
   static void delete_MAUScLcLEMRSpillData(void *p);
   static void deleteArray_MAUScLcLEMRSpillData(void *p);
   static void destruct_MAUScLcLEMRSpillData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::EMRSpillData*)
   {
      ::MAUS::EMRSpillData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::EMRSpillData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::EMRSpillData", ::MAUS::EMRSpillData::Class_Version(), "./src/common_cpp/DataStructure/EMRSpillData.hh", 25,
                  typeid(::MAUS::EMRSpillData), DefineBehavior(ptr, ptr),
                  &::MAUS::EMRSpillData::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::EMRSpillData) );
      instance.SetNew(&new_MAUScLcLEMRSpillData);
      instance.SetNewArray(&newArray_MAUScLcLEMRSpillData);
      instance.SetDelete(&delete_MAUScLcLEMRSpillData);
      instance.SetDeleteArray(&deleteArray_MAUScLcLEMRSpillData);
      instance.SetDestructor(&destruct_MAUScLcLEMRSpillData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::EMRSpillData*)
   {
      return GenerateInitInstanceLocal((::MAUS::EMRSpillData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::EMRSpillData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLScalars_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLScalars(void *p = 0);
   static void *newArray_MAUScLcLScalars(Long_t size, void *p);
   static void delete_MAUScLcLScalars(void *p);
   static void deleteArray_MAUScLcLScalars(void *p);
   static void destruct_MAUScLcLScalars(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Scalars*)
   {
      ::MAUS::Scalars *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Scalars >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Scalars", ::MAUS::Scalars::Class_Version(), "./src/common_cpp/DataStructure/Scalars.hh", 26,
                  typeid(::MAUS::Scalars), DefineBehavior(ptr, ptr),
                  &::MAUS::Scalars::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Scalars) );
      instance.SetNew(&new_MAUScLcLScalars);
      instance.SetNewArray(&newArray_MAUScLcLScalars);
      instance.SetDelete(&delete_MAUScLcLScalars);
      instance.SetDeleteArray(&deleteArray_MAUScLcLScalars);
      instance.SetDestructor(&destruct_MAUScLcLScalars);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Scalars*)
   {
      return GenerateInitInstanceLocal((::MAUS::Scalars*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Scalars*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFChannelId_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFChannelId(void *p = 0);
   static void *newArray_MAUScLcLTOFChannelId(Long_t size, void *p);
   static void delete_MAUScLcLTOFChannelId(void *p);
   static void deleteArray_MAUScLcLTOFChannelId(void *p);
   static void destruct_MAUScLcLTOFChannelId(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFChannelId*)
   {
      ::MAUS::TOFChannelId *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFChannelId >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFChannelId", ::MAUS::TOFChannelId::Class_Version(), "./src/common_cpp/DataStructure/TOFChannelId.hh", 26,
                  typeid(::MAUS::TOFChannelId), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFChannelId::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFChannelId) );
      instance.SetNew(&new_MAUScLcLTOFChannelId);
      instance.SetNewArray(&newArray_MAUScLcLTOFChannelId);
      instance.SetDelete(&delete_MAUScLcLTOFChannelId);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFChannelId);
      instance.SetDestructor(&destruct_MAUScLcLTOFChannelId);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFChannelId*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFChannelId*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFChannelId*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLSciFiChannelId_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLSciFiChannelId(void *p = 0);
   static void *newArray_MAUScLcLSciFiChannelId(Long_t size, void *p);
   static void delete_MAUScLcLSciFiChannelId(void *p);
   static void deleteArray_MAUScLcLSciFiChannelId(void *p);
   static void destruct_MAUScLcLSciFiChannelId(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::SciFiChannelId*)
   {
      ::MAUS::SciFiChannelId *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::SciFiChannelId >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::SciFiChannelId", ::MAUS::SciFiChannelId::Class_Version(), "./src/common_cpp/DataStructure/SciFiChannelId.hh", 26,
                  typeid(::MAUS::SciFiChannelId), DefineBehavior(ptr, ptr),
                  &::MAUS::SciFiChannelId::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::SciFiChannelId) );
      instance.SetNew(&new_MAUScLcLSciFiChannelId);
      instance.SetNewArray(&newArray_MAUScLcLSciFiChannelId);
      instance.SetDelete(&delete_MAUScLcLSciFiChannelId);
      instance.SetDeleteArray(&deleteArray_MAUScLcLSciFiChannelId);
      instance.SetDestructor(&destruct_MAUScLcLSciFiChannelId);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::SciFiChannelId*)
   {
      return GenerateInitInstanceLocal((::MAUS::SciFiChannelId*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::SciFiChannelId*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLHitlEMAUScLcLSciFiChannelIdgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MAUScLcLHitlEMAUScLcLSciFiChannelIdgR_Dictionary();
   static void *new_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void *p = 0);
   static void *newArray_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(Long_t size, void *p);
   static void delete_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void *p);
   static void deleteArray_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void *p);
   static void destruct_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Hit<MAUS::SciFiChannelId>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MAUS::Hit<MAUS::SciFiChannelId>) == sizeof(::ROOT::Shadow::MAUS::HitlEMAUScLcLSciFiChannelIdgR));
      ::MAUS::Hit<MAUS::SciFiChannelId> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Hit<MAUS::SciFiChannelId> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Hit<MAUS::SciFiChannelId>", ::MAUS::Hit<MAUS::SciFiChannelId>::Class_Version(), "./src/common_cpp/DataStructure/Hit.hh", 48,
                  typeid(::MAUS::Hit<MAUS::SciFiChannelId>), DefineBehavior(ptr, ptr),
                  &MAUScLcLHitlEMAUScLcLSciFiChannelIdgR_Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Hit<MAUS::SciFiChannelId>) );
      instance.SetNew(&new_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR);
      instance.SetNewArray(&newArray_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR);
      instance.SetDelete(&delete_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR);
      instance.SetDeleteArray(&deleteArray_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR);
      instance.SetDestructor(&destruct_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Hit<MAUS::SciFiChannelId>*)
   {
      return GenerateInitInstanceLocal((::MAUS::Hit<MAUS::SciFiChannelId>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SciFiChannelId>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MAUScLcLHitlEMAUScLcLSciFiChannelIdgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SciFiChannelId>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLHitlEMAUScLcLTOFChannelIdgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MAUScLcLHitlEMAUScLcLTOFChannelIdgR_Dictionary();
   static void *new_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(void *p = 0);
   static void *newArray_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(Long_t size, void *p);
   static void delete_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(void *p);
   static void deleteArray_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(void *p);
   static void destruct_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Hit<MAUS::TOFChannelId>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MAUS::Hit<MAUS::TOFChannelId>) == sizeof(::ROOT::Shadow::MAUS::HitlEMAUScLcLTOFChannelIdgR));
      ::MAUS::Hit<MAUS::TOFChannelId> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Hit<MAUS::TOFChannelId> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Hit<MAUS::TOFChannelId>", ::MAUS::Hit<MAUS::TOFChannelId>::Class_Version(), "./src/common_cpp/DataStructure/Hit.hh", 48,
                  typeid(::MAUS::Hit<MAUS::TOFChannelId>), DefineBehavior(ptr, ptr),
                  &MAUScLcLHitlEMAUScLcLTOFChannelIdgR_Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Hit<MAUS::TOFChannelId>) );
      instance.SetNew(&new_MAUScLcLHitlEMAUScLcLTOFChannelIdgR);
      instance.SetNewArray(&newArray_MAUScLcLHitlEMAUScLcLTOFChannelIdgR);
      instance.SetDelete(&delete_MAUScLcLHitlEMAUScLcLTOFChannelIdgR);
      instance.SetDeleteArray(&deleteArray_MAUScLcLHitlEMAUScLcLTOFChannelIdgR);
      instance.SetDestructor(&destruct_MAUScLcLHitlEMAUScLcLTOFChannelIdgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Hit<MAUS::TOFChannelId>*)
   {
      return GenerateInitInstanceLocal((::MAUS::Hit<MAUS::TOFChannelId>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::TOFChannelId>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MAUScLcLHitlEMAUScLcLTOFChannelIdgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::TOFChannelId>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR_Dictionary();
   static void *new_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void *p = 0);
   static void *newArray_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(Long_t size, void *p);
   static void delete_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void *p);
   static void deleteArray_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void *p);
   static void destruct_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MAUS::Hit<MAUS::SpecialVirtualChannelId>) == sizeof(::ROOT::Shadow::MAUS::HitlEMAUScLcLSpecialVirtualChannelIdgR));
      ::MAUS::Hit<MAUS::SpecialVirtualChannelId> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Hit<MAUS::SpecialVirtualChannelId> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Hit<MAUS::SpecialVirtualChannelId>", ::MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class_Version(), "./src/common_cpp/DataStructure/Hit.hh", 48,
                  typeid(::MAUS::Hit<MAUS::SpecialVirtualChannelId>), DefineBehavior(ptr, ptr),
                  &MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR_Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Hit<MAUS::SpecialVirtualChannelId>) );
      instance.SetNew(&new_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR);
      instance.SetNewArray(&newArray_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR);
      instance.SetDelete(&delete_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR);
      instance.SetDeleteArray(&deleteArray_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR);
      instance.SetDestructor(&destruct_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)
   {
      return GenerateInitInstanceLocal((::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTrack(void *p = 0);
   static void *newArray_MAUScLcLTrack(Long_t size, void *p);
   static void delete_MAUScLcLTrack(void *p);
   static void deleteArray_MAUScLcLTrack(void *p);
   static void destruct_MAUScLcLTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Track*)
   {
      ::MAUS::Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Track", ::MAUS::Track::Class_Version(), "/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Track.hh", 39,
                  typeid(::MAUS::Track), DefineBehavior(ptr, ptr),
                  &::MAUS::Track::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Track) );
      instance.SetNew(&new_MAUScLcLTrack);
      instance.SetNewArray(&newArray_MAUScLcLTrack);
      instance.SetDelete(&delete_MAUScLcLTrack);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTrack);
      instance.SetDestructor(&destruct_MAUScLcLTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Track*)
   {
      return GenerateInitInstanceLocal((::MAUS::Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLVirtualHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLVirtualHit(void *p = 0);
   static void *newArray_MAUScLcLVirtualHit(Long_t size, void *p);
   static void delete_MAUScLcLVirtualHit(void *p);
   static void deleteArray_MAUScLcLVirtualHit(void *p);
   static void destruct_MAUScLcLVirtualHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::VirtualHit*)
   {
      ::MAUS::VirtualHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::VirtualHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::VirtualHit", ::MAUS::VirtualHit::Class_Version(), "/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/VirtualHit.hh", 39,
                  typeid(::MAUS::VirtualHit), DefineBehavior(ptr, ptr),
                  &::MAUS::VirtualHit::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::VirtualHit) );
      instance.SetNew(&new_MAUScLcLVirtualHit);
      instance.SetNewArray(&newArray_MAUScLcLVirtualHit);
      instance.SetDelete(&delete_MAUScLcLVirtualHit);
      instance.SetDeleteArray(&deleteArray_MAUScLcLVirtualHit);
      instance.SetDestructor(&destruct_MAUScLcLVirtualHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::VirtualHit*)
   {
      return GenerateInitInstanceLocal((::MAUS::VirtualHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::VirtualHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLMCEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLMCEvent(void *p = 0);
   static void *newArray_MAUScLcLMCEvent(Long_t size, void *p);
   static void delete_MAUScLcLMCEvent(void *p);
   static void deleteArray_MAUScLcLMCEvent(void *p);
   static void destruct_MAUScLcLMCEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::MCEvent*)
   {
      ::MAUS::MCEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::MCEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::MCEvent", ::MAUS::MCEvent::Class_Version(), "./src/common_cpp/DataStructure/MCEvent.hh", 55,
                  typeid(::MAUS::MCEvent), DefineBehavior(ptr, ptr),
                  &::MAUS::MCEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::MCEvent) );
      instance.SetNew(&new_MAUScLcLMCEvent);
      instance.SetNewArray(&newArray_MAUScLcLMCEvent);
      instance.SetDelete(&delete_MAUScLcLMCEvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLMCEvent);
      instance.SetDestructor(&destruct_MAUScLcLMCEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::MCEvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::MCEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::MCEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFDigit(void *p = 0);
   static void *newArray_MAUScLcLTOFDigit(Long_t size, void *p);
   static void delete_MAUScLcLTOFDigit(void *p);
   static void deleteArray_MAUScLcLTOFDigit(void *p);
   static void destruct_MAUScLcLTOFDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFDigit*)
   {
      ::MAUS::TOFDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFDigit", ::MAUS::TOFDigit::Class_Version(), "./src/common_cpp/DataStructure/TOFDigit.hh", 46,
                  typeid(::MAUS::TOFDigit), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFDigit::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFDigit) );
      instance.SetNew(&new_MAUScLcLTOFDigit);
      instance.SetNewArray(&newArray_MAUScLcLTOFDigit);
      instance.SetDelete(&delete_MAUScLcLTOFDigit);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFDigit);
      instance.SetDestructor(&destruct_MAUScLcLTOFDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFDigit*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFEventDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFEventDigit(void *p = 0);
   static void *newArray_MAUScLcLTOFEventDigit(Long_t size, void *p);
   static void delete_MAUScLcLTOFEventDigit(void *p);
   static void deleteArray_MAUScLcLTOFEventDigit(void *p);
   static void destruct_MAUScLcLTOFEventDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFEventDigit*)
   {
      ::MAUS::TOFEventDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFEventDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFEventDigit", ::MAUS::TOFEventDigit::Class_Version(), "./src/common_cpp/DataStructure/TOFEventDigit.hh", 37,
                  typeid(::MAUS::TOFEventDigit), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFEventDigit::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFEventDigit) );
      instance.SetNew(&new_MAUScLcLTOFEventDigit);
      instance.SetNewArray(&newArray_MAUScLcLTOFEventDigit);
      instance.SetDelete(&delete_MAUScLcLTOFEventDigit);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFEventDigit);
      instance.SetDestructor(&destruct_MAUScLcLTOFEventDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFEventDigit*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFEventDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFEventDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLPmt1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLPmt1(void *p = 0);
   static void *newArray_MAUScLcLPmt1(Long_t size, void *p);
   static void delete_MAUScLcLPmt1(void *p);
   static void deleteArray_MAUScLcLPmt1(void *p);
   static void destruct_MAUScLcLPmt1(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Pmt1*)
   {
      ::MAUS::Pmt1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Pmt1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Pmt1", ::MAUS::Pmt1::Class_Version(), "./src/common_cpp/DataStructure/Pmt1.hh", 35,
                  typeid(::MAUS::Pmt1), DefineBehavior(ptr, ptr),
                  &::MAUS::Pmt1::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Pmt1) );
      instance.SetNew(&new_MAUScLcLPmt1);
      instance.SetNewArray(&newArray_MAUScLcLPmt1);
      instance.SetDelete(&delete_MAUScLcLPmt1);
      instance.SetDeleteArray(&deleteArray_MAUScLcLPmt1);
      instance.SetDestructor(&destruct_MAUScLcLPmt1);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Pmt1*)
   {
      return GenerateInitInstanceLocal((::MAUS::Pmt1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Pmt1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFSlabHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFSlabHit(void *p = 0);
   static void *newArray_MAUScLcLTOFSlabHit(Long_t size, void *p);
   static void delete_MAUScLcLTOFSlabHit(void *p);
   static void deleteArray_MAUScLcLTOFSlabHit(void *p);
   static void destruct_MAUScLcLTOFSlabHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFSlabHit*)
   {
      ::MAUS::TOFSlabHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFSlabHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFSlabHit", ::MAUS::TOFSlabHit::Class_Version(), "./src/common_cpp/DataStructure/TOFSlabHit.hh", 43,
                  typeid(::MAUS::TOFSlabHit), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFSlabHit::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFSlabHit) );
      instance.SetNew(&new_MAUScLcLTOFSlabHit);
      instance.SetNewArray(&newArray_MAUScLcLTOFSlabHit);
      instance.SetDelete(&delete_MAUScLcLTOFSlabHit);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFSlabHit);
      instance.SetDestructor(&destruct_MAUScLcLTOFSlabHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFSlabHit*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFSlabHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFSlabHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFEventSlabHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFEventSlabHit(void *p = 0);
   static void *newArray_MAUScLcLTOFEventSlabHit(Long_t size, void *p);
   static void delete_MAUScLcLTOFEventSlabHit(void *p);
   static void deleteArray_MAUScLcLTOFEventSlabHit(void *p);
   static void destruct_MAUScLcLTOFEventSlabHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFEventSlabHit*)
   {
      ::MAUS::TOFEventSlabHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFEventSlabHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFEventSlabHit", ::MAUS::TOFEventSlabHit::Class_Version(), "./src/common_cpp/DataStructure/TOFEventSlabHit.hh", 37,
                  typeid(::MAUS::TOFEventSlabHit), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFEventSlabHit::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFEventSlabHit) );
      instance.SetNew(&new_MAUScLcLTOFEventSlabHit);
      instance.SetNewArray(&newArray_MAUScLcLTOFEventSlabHit);
      instance.SetDelete(&delete_MAUScLcLTOFEventSlabHit);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFEventSlabHit);
      instance.SetDestructor(&destruct_MAUScLcLTOFEventSlabHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFEventSlabHit*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFEventSlabHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFEventSlabHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFSpacePoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFSpacePoint(void *p = 0);
   static void *newArray_MAUScLcLTOFSpacePoint(Long_t size, void *p);
   static void delete_MAUScLcLTOFSpacePoint(void *p);
   static void deleteArray_MAUScLcLTOFSpacePoint(void *p);
   static void destruct_MAUScLcLTOFSpacePoint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFSpacePoint*)
   {
      ::MAUS::TOFSpacePoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFSpacePoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFSpacePoint", ::MAUS::TOFSpacePoint::Class_Version(), "./src/common_cpp/DataStructure/TOFSpacePoint.hh", 40,
                  typeid(::MAUS::TOFSpacePoint), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFSpacePoint::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFSpacePoint) );
      instance.SetNew(&new_MAUScLcLTOFSpacePoint);
      instance.SetNewArray(&newArray_MAUScLcLTOFSpacePoint);
      instance.SetDelete(&delete_MAUScLcLTOFSpacePoint);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFSpacePoint);
      instance.SetDestructor(&destruct_MAUScLcLTOFSpacePoint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFSpacePoint*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFSpacePoint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFSpacePoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFEventSpacePoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFEventSpacePoint(void *p = 0);
   static void *newArray_MAUScLcLTOFEventSpacePoint(Long_t size, void *p);
   static void delete_MAUScLcLTOFEventSpacePoint(void *p);
   static void deleteArray_MAUScLcLTOFEventSpacePoint(void *p);
   static void destruct_MAUScLcLTOFEventSpacePoint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFEventSpacePoint*)
   {
      ::MAUS::TOFEventSpacePoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFEventSpacePoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFEventSpacePoint", ::MAUS::TOFEventSpacePoint::Class_Version(), "./src/common_cpp/DataStructure/TOFEventSpacePoint.hh", 39,
                  typeid(::MAUS::TOFEventSpacePoint), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFEventSpacePoint::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFEventSpacePoint) );
      instance.SetNew(&new_MAUScLcLTOFEventSpacePoint);
      instance.SetNewArray(&newArray_MAUScLcLTOFEventSpacePoint);
      instance.SetDelete(&delete_MAUScLcLTOFEventSpacePoint);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFEventSpacePoint);
      instance.SetDestructor(&destruct_MAUScLcLTOFEventSpacePoint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFEventSpacePoint*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFEventSpacePoint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFEventSpacePoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTOFEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTOFEvent(void *p = 0);
   static void *newArray_MAUScLcLTOFEvent(Long_t size, void *p);
   static void delete_MAUScLcLTOFEvent(void *p);
   static void deleteArray_MAUScLcLTOFEvent(void *p);
   static void destruct_MAUScLcLTOFEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TOFEvent*)
   {
      ::MAUS::TOFEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TOFEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TOFEvent", ::MAUS::TOFEvent::Class_Version(), "./src/common_cpp/DataStructure/TOFEvent.hh", 34,
                  typeid(::MAUS::TOFEvent), DefineBehavior(ptr, ptr),
                  &::MAUS::TOFEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TOFEvent) );
      instance.SetNew(&new_MAUScLcLTOFEvent);
      instance.SetNewArray(&newArray_MAUScLcLTOFEvent);
      instance.SetDelete(&delete_MAUScLcLTOFEvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTOFEvent);
      instance.SetDestructor(&destruct_MAUScLcLTOFEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TOFEvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::TOFEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TOFEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLCkovA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLCkovA(void *p = 0);
   static void *newArray_MAUScLcLCkovA(Long_t size, void *p);
   static void delete_MAUScLcLCkovA(void *p);
   static void deleteArray_MAUScLcLCkovA(void *p);
   static void destruct_MAUScLcLCkovA(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::CkovA*)
   {
      ::MAUS::CkovA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::CkovA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::CkovA", ::MAUS::CkovA::Class_Version(), "./src/common_cpp/DataStructure/CkovA.hh", 44,
                  typeid(::MAUS::CkovA), DefineBehavior(ptr, ptr),
                  &::MAUS::CkovA::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::CkovA) );
      instance.SetNew(&new_MAUScLcLCkovA);
      instance.SetNewArray(&newArray_MAUScLcLCkovA);
      instance.SetDelete(&delete_MAUScLcLCkovA);
      instance.SetDeleteArray(&deleteArray_MAUScLcLCkovA);
      instance.SetDestructor(&destruct_MAUScLcLCkovA);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::CkovA*)
   {
      return GenerateInitInstanceLocal((::MAUS::CkovA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::CkovA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLCkovB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLCkovB(void *p = 0);
   static void *newArray_MAUScLcLCkovB(Long_t size, void *p);
   static void delete_MAUScLcLCkovB(void *p);
   static void deleteArray_MAUScLcLCkovB(void *p);
   static void destruct_MAUScLcLCkovB(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::CkovB*)
   {
      ::MAUS::CkovB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::CkovB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::CkovB", ::MAUS::CkovB::Class_Version(), "./src/common_cpp/DataStructure/CkovB.hh", 44,
                  typeid(::MAUS::CkovB), DefineBehavior(ptr, ptr),
                  &::MAUS::CkovB::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::CkovB) );
      instance.SetNew(&new_MAUScLcLCkovB);
      instance.SetNewArray(&newArray_MAUScLcLCkovB);
      instance.SetDelete(&delete_MAUScLcLCkovB);
      instance.SetDeleteArray(&deleteArray_MAUScLcLCkovB);
      instance.SetDestructor(&destruct_MAUScLcLCkovB);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::CkovB*)
   {
      return GenerateInitInstanceLocal((::MAUS::CkovB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::CkovB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLCkovDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLCkovDigit(void *p = 0);
   static void *newArray_MAUScLcLCkovDigit(Long_t size, void *p);
   static void delete_MAUScLcLCkovDigit(void *p);
   static void deleteArray_MAUScLcLCkovDigit(void *p);
   static void destruct_MAUScLcLCkovDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::CkovDigit*)
   {
      ::MAUS::CkovDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::CkovDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::CkovDigit", ::MAUS::CkovDigit::Class_Version(), "./src/common_cpp/DataStructure/CkovDigit.hh", 32,
                  typeid(::MAUS::CkovDigit), DefineBehavior(ptr, ptr),
                  &::MAUS::CkovDigit::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::CkovDigit) );
      instance.SetNew(&new_MAUScLcLCkovDigit);
      instance.SetNewArray(&newArray_MAUScLcLCkovDigit);
      instance.SetDelete(&delete_MAUScLcLCkovDigit);
      instance.SetDeleteArray(&deleteArray_MAUScLcLCkovDigit);
      instance.SetDestructor(&destruct_MAUScLcLCkovDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::CkovDigit*)
   {
      return GenerateInitInstanceLocal((::MAUS::CkovDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::CkovDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLCkovEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLCkovEvent(void *p = 0);
   static void *newArray_MAUScLcLCkovEvent(Long_t size, void *p);
   static void delete_MAUScLcLCkovEvent(void *p);
   static void deleteArray_MAUScLcLCkovEvent(void *p);
   static void destruct_MAUScLcLCkovEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::CkovEvent*)
   {
      ::MAUS::CkovEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::CkovEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::CkovEvent", ::MAUS::CkovEvent::Class_Version(), "./src/common_cpp/DataStructure/CkovEvent.hh", 33,
                  typeid(::MAUS::CkovEvent), DefineBehavior(ptr, ptr),
                  &::MAUS::CkovEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::CkovEvent) );
      instance.SetNew(&new_MAUScLcLCkovEvent);
      instance.SetNewArray(&newArray_MAUScLcLCkovEvent);
      instance.SetDelete(&delete_MAUScLcLCkovEvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLCkovEvent);
      instance.SetDestructor(&destruct_MAUScLcLCkovEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::CkovEvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::CkovEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::CkovEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLKLEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLKLEvent(void *p = 0);
   static void *newArray_MAUScLcLKLEvent(Long_t size, void *p);
   static void delete_MAUScLcLKLEvent(void *p);
   static void deleteArray_MAUScLcLKLEvent(void *p);
   static void destruct_MAUScLcLKLEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::KLEvent*)
   {
      ::MAUS::KLEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::KLEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::KLEvent", ::MAUS::KLEvent::Class_Version(), "./src/common_cpp/DataStructure/KLEvent.hh", 28,
                  typeid(::MAUS::KLEvent), DefineBehavior(ptr, ptr),
                  &::MAUS::KLEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::KLEvent) );
      instance.SetNew(&new_MAUScLcLKLEvent);
      instance.SetNewArray(&newArray_MAUScLcLKLEvent);
      instance.SetDelete(&delete_MAUScLcLKLEvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLKLEvent);
      instance.SetDestructor(&destruct_MAUScLcLKLEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::KLEvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::KLEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::KLEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLEMREvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLEMREvent(void *p = 0);
   static void *newArray_MAUScLcLEMREvent(Long_t size, void *p);
   static void delete_MAUScLcLEMREvent(void *p);
   static void deleteArray_MAUScLcLEMREvent(void *p);
   static void destruct_MAUScLcLEMREvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::EMREvent*)
   {
      ::MAUS::EMREvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::EMREvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::EMREvent", ::MAUS::EMREvent::Class_Version(), "./src/common_cpp/DataStructure/EMREvent.hh", 28,
                  typeid(::MAUS::EMREvent), DefineBehavior(ptr, ptr),
                  &::MAUS::EMREvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::EMREvent) );
      instance.SetNew(&new_MAUScLcLEMREvent);
      instance.SetNewArray(&newArray_MAUScLcLEMREvent);
      instance.SetDelete(&delete_MAUScLcLEMREvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLEMREvent);
      instance.SetDestructor(&destruct_MAUScLcLEMREvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::EMREvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::EMREvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::EMREvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLTriggerEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLTriggerEvent(void *p = 0);
   static void *newArray_MAUScLcLTriggerEvent(Long_t size, void *p);
   static void delete_MAUScLcLTriggerEvent(void *p);
   static void deleteArray_MAUScLcLTriggerEvent(void *p);
   static void destruct_MAUScLcLTriggerEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::TriggerEvent*)
   {
      ::MAUS::TriggerEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::TriggerEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::TriggerEvent", ::MAUS::TriggerEvent::Class_Version(), "./src/common_cpp/DataStructure/TriggerEvent.hh", 28,
                  typeid(::MAUS::TriggerEvent), DefineBehavior(ptr, ptr),
                  &::MAUS::TriggerEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::TriggerEvent) );
      instance.SetNew(&new_MAUScLcLTriggerEvent);
      instance.SetNewArray(&newArray_MAUScLcLTriggerEvent);
      instance.SetDelete(&delete_MAUScLcLTriggerEvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLTriggerEvent);
      instance.SetDestructor(&destruct_MAUScLcLTriggerEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::TriggerEvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::TriggerEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::TriggerEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLGlobalEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLGlobalEvent(void *p = 0);
   static void *newArray_MAUScLcLGlobalEvent(Long_t size, void *p);
   static void delete_MAUScLcLGlobalEvent(void *p);
   static void deleteArray_MAUScLcLGlobalEvent(void *p);
   static void destruct_MAUScLcLGlobalEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::GlobalEvent*)
   {
      ::MAUS::GlobalEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::GlobalEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::GlobalEvent", ::MAUS::GlobalEvent::Class_Version(), "./src/common_cpp/DataStructure/GlobalEvent.hh", 28,
                  typeid(::MAUS::GlobalEvent), DefineBehavior(ptr, ptr),
                  &::MAUS::GlobalEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::GlobalEvent) );
      instance.SetNew(&new_MAUScLcLGlobalEvent);
      instance.SetNewArray(&newArray_MAUScLcLGlobalEvent);
      instance.SetDelete(&delete_MAUScLcLGlobalEvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLGlobalEvent);
      instance.SetDestructor(&destruct_MAUScLcLGlobalEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::GlobalEvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::GlobalEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::GlobalEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLReconEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLReconEvent(void *p = 0);
   static void *newArray_MAUScLcLReconEvent(Long_t size, void *p);
   static void delete_MAUScLcLReconEvent(void *p);
   static void deleteArray_MAUScLcLReconEvent(void *p);
   static void destruct_MAUScLcLReconEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::ReconEvent*)
   {
      ::MAUS::ReconEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::ReconEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::ReconEvent", ::MAUS::ReconEvent::Class_Version(), "./src/common_cpp/DataStructure/ReconEvent.hh", 41,
                  typeid(::MAUS::ReconEvent), DefineBehavior(ptr, ptr),
                  &::MAUS::ReconEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::ReconEvent) );
      instance.SetNew(&new_MAUScLcLReconEvent);
      instance.SetNewArray(&newArray_MAUScLcLReconEvent);
      instance.SetDelete(&delete_MAUScLcLReconEvent);
      instance.SetDeleteArray(&deleteArray_MAUScLcLReconEvent);
      instance.SetDestructor(&destruct_MAUScLcLReconEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::ReconEvent*)
   {
      return GenerateInitInstanceLocal((::MAUS::ReconEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::ReconEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLSpill_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLSpill(void *p = 0);
   static void *newArray_MAUScLcLSpill(Long_t size, void *p);
   static void delete_MAUScLcLSpill(void *p);
   static void deleteArray_MAUScLcLSpill(void *p);
   static void destruct_MAUScLcLSpill(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Spill*)
   {
      ::MAUS::Spill *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Spill >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Spill", ::MAUS::Spill::Class_Version(), "./src/common_cpp/DataStructure/Spill.hh", 42,
                  typeid(::MAUS::Spill), DefineBehavior(ptr, ptr),
                  &::MAUS::Spill::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Spill) );
      instance.SetNew(&new_MAUScLcLSpill);
      instance.SetNewArray(&newArray_MAUScLcLSpill);
      instance.SetDelete(&delete_MAUScLcLSpill);
      instance.SetDeleteArray(&deleteArray_MAUScLcLSpill);
      instance.SetDestructor(&destruct_MAUScLcLSpill);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Spill*)
   {
      return GenerateInitInstanceLocal((::MAUS::Spill*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Spill*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLData(void *p = 0);
   static void *newArray_MAUScLcLData(Long_t size, void *p);
   static void delete_MAUScLcLData(void *p);
   static void deleteArray_MAUScLcLData(void *p);
   static void destruct_MAUScLcLData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Data*)
   {
      ::MAUS::Data *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Data >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Data", ::MAUS::Data::Class_Version(), "/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Data.hh", 32,
                  typeid(::MAUS::Data), DefineBehavior(ptr, ptr),
                  &::MAUS::Data::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Data) );
      instance.SetNew(&new_MAUScLcLData);
      instance.SetNewArray(&newArray_MAUScLcLData);
      instance.SetDelete(&delete_MAUScLcLData);
      instance.SetDeleteArray(&deleteArray_MAUScLcLData);
      instance.SetDestructor(&destruct_MAUScLcLData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Data*)
   {
      return GenerateInitInstanceLocal((::MAUS::Data*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Data*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MAUScLcLStep_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAUScLcLStep(void *p = 0);
   static void *newArray_MAUScLcLStep(Long_t size, void *p);
   static void delete_MAUScLcLStep(void *p);
   static void deleteArray_MAUScLcLStep(void *p);
   static void destruct_MAUScLcLStep(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MAUS::Step*)
   {
      ::MAUS::Step *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAUS::Step >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAUS::Step", ::MAUS::Step::Class_Version(), "/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Step.hh", 34,
                  typeid(::MAUS::Step), DefineBehavior(ptr, ptr),
                  &::MAUS::Step::Dictionary, isa_proxy, 4,
                  sizeof(::MAUS::Step) );
      instance.SetNew(&new_MAUScLcLStep);
      instance.SetNewArray(&newArray_MAUScLcLStep);
      instance.SetDelete(&delete_MAUScLcLStep);
      instance.SetDeleteArray(&deleteArray_MAUScLcLStep);
      instance.SetDestructor(&destruct_MAUScLcLStep);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MAUS::Step*)
   {
      return GenerateInitInstanceLocal((::MAUS::Step*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAUS::Step*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace MAUS {
//______________________________________________________________________________
TClass *Primary::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Primary::Class_Name()
{
   return "MAUS::Primary";
}

//______________________________________________________________________________
const char *Primary::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Primary*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Primary::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Primary*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Primary::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Primary*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Primary::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Primary*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *SciFiEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SciFiEvent::Class_Name()
{
   return "MAUS::SciFiEvent";
}

//______________________________________________________________________________
const char *SciFiEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SciFiEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SciFiEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SciFiEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SciFiEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SciFiEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SciFiEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SciFiEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Pmt0::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Pmt0::Class_Name()
{
   return "MAUS::Pmt0";
}

//______________________________________________________________________________
const char *Pmt0::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Pmt0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Pmt0::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Pmt0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Pmt0::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Pmt0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Pmt0::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Pmt0*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *SpecialVirtualChannelId::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SpecialVirtualChannelId::Class_Name()
{
   return "MAUS::SpecialVirtualChannelId";
}

//______________________________________________________________________________
const char *SpecialVirtualChannelId::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SpecialVirtualChannelId*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SpecialVirtualChannelId::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SpecialVirtualChannelId*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SpecialVirtualChannelId::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SpecialVirtualChannelId*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SpecialVirtualChannelId::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SpecialVirtualChannelId*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *V1724::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *V1724::Class_Name()
{
   return "MAUS::V1724";
}

//______________________________________________________________________________
const char *V1724::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1724*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int V1724::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1724*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void V1724::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1724*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *V1724::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1724*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *KLDaq::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *KLDaq::Class_Name()
{
   return "MAUS::KLDaq";
}

//______________________________________________________________________________
const char *KLDaq::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::KLDaq*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KLDaq::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::KLDaq*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KLDaq::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::KLDaq*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KLDaq::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::KLDaq*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *V1290::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *V1290::Class_Name()
{
   return "MAUS::V1290";
}

//______________________________________________________________________________
const char *V1290::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1290*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int V1290::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1290*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void V1290::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1290*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *V1290::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1290*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Trigger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Trigger::Class_Name()
{
   return "MAUS::Trigger";
}

//______________________________________________________________________________
const char *Trigger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Trigger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Trigger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Trigger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Trigger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Trigger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Trigger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Trigger*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFDaq::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFDaq::Class_Name()
{
   return "MAUS::TOFDaq";
}

//______________________________________________________________________________
const char *TOFDaq::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFDaq*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFDaq::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFDaq*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFDaq::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFDaq*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFDaq::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFDaq*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Channels::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Channels::Class_Name()
{
   return "MAUS::Channels";
}

//______________________________________________________________________________
const char *Channels::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Channels*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Channels::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Channels*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Channels::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Channels*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Channels::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Channels*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *V830::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *V830::Class_Name()
{
   return "MAUS::V830";
}

//______________________________________________________________________________
const char *V830::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V830*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int V830::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V830*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void V830::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V830*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *V830::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V830*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *V1731::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *V1731::Class_Name()
{
   return "MAUS::V1731";
}

//______________________________________________________________________________
const char *V1731::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1731*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int V1731::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1731*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void V1731::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1731*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *V1731::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::V1731*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *CkovDaq::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CkovDaq::Class_Name()
{
   return "MAUS::CkovDaq";
}

//______________________________________________________________________________
const char *CkovDaq::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovDaq*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CkovDaq::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovDaq*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CkovDaq::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovDaq*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CkovDaq::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovDaq*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Unknown::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unknown::Class_Name()
{
   return "MAUS::Unknown";
}

//______________________________________________________________________________
const char *Unknown::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Unknown*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unknown::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Unknown*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unknown::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Unknown*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unknown::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Unknown*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TriggerRequest::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TriggerRequest::Class_Name()
{
   return "MAUS::TriggerRequest";
}

//______________________________________________________________________________
const char *TriggerRequest::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TriggerRequest*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TriggerRequest::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TriggerRequest*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TriggerRequest::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TriggerRequest*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TriggerRequest::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TriggerRequest*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Tag::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Tag::Class_Name()
{
   return "MAUS::Tag";
}

//______________________________________________________________________________
const char *Tag::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Tag*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tag::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Tag*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tag::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Tag*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tag::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Tag*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *DAQData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DAQData::Class_Name()
{
   return "MAUS::DAQData";
}

//______________________________________________________________________________
const char *DAQData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::DAQData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DAQData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::DAQData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DAQData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::DAQData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DAQData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::DAQData*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *EMRSpillData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EMRSpillData::Class_Name()
{
   return "MAUS::EMRSpillData";
}

//______________________________________________________________________________
const char *EMRSpillData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::EMRSpillData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EMRSpillData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::EMRSpillData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EMRSpillData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::EMRSpillData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EMRSpillData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::EMRSpillData*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Scalars::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Scalars::Class_Name()
{
   return "MAUS::Scalars";
}

//______________________________________________________________________________
const char *Scalars::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Scalars*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Scalars::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Scalars*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Scalars::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Scalars*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Scalars::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Scalars*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFChannelId::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFChannelId::Class_Name()
{
   return "MAUS::TOFChannelId";
}

//______________________________________________________________________________
const char *TOFChannelId::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFChannelId*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFChannelId::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFChannelId*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFChannelId::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFChannelId*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFChannelId::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFChannelId*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *SciFiChannelId::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SciFiChannelId::Class_Name()
{
   return "MAUS::SciFiChannelId";
}

//______________________________________________________________________________
const char *SciFiChannelId::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SciFiChannelId*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SciFiChannelId::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SciFiChannelId*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SciFiChannelId::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SciFiChannelId*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SciFiChannelId::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::SciFiChannelId*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
template <> TClass *Hit<MAUS::SciFiChannelId>::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
template <> const char *Hit<MAUS::SciFiChannelId>::Class_Name()
{
   return "MAUS::Hit<MAUS::SciFiChannelId>";
}

//______________________________________________________________________________
template <> const char *Hit<MAUS::SciFiChannelId>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SciFiChannelId>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int Hit<MAUS::SciFiChannelId>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SciFiChannelId>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void Hit<MAUS::SciFiChannelId>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SciFiChannelId>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *Hit<MAUS::SciFiChannelId>::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SciFiChannelId>*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
template <> TClass *Hit<MAUS::TOFChannelId>::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
template <> const char *Hit<MAUS::TOFChannelId>::Class_Name()
{
   return "MAUS::Hit<MAUS::TOFChannelId>";
}

//______________________________________________________________________________
template <> const char *Hit<MAUS::TOFChannelId>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::TOFChannelId>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int Hit<MAUS::TOFChannelId>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::TOFChannelId>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void Hit<MAUS::TOFChannelId>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::TOFChannelId>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *Hit<MAUS::TOFChannelId>::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::TOFChannelId>*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
template <> TClass *Hit<MAUS::SpecialVirtualChannelId>::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
template <> const char *Hit<MAUS::SpecialVirtualChannelId>::Class_Name()
{
   return "MAUS::Hit<MAUS::SpecialVirtualChannelId>";
}

//______________________________________________________________________________
template <> const char *Hit<MAUS::SpecialVirtualChannelId>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int Hit<MAUS::SpecialVirtualChannelId>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void Hit<MAUS::SpecialVirtualChannelId>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *Hit<MAUS::SpecialVirtualChannelId>::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Track::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Track::Class_Name()
{
   return "MAUS::Track";
}

//______________________________________________________________________________
const char *Track::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Track::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Track::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Track::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Track*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *VirtualHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *VirtualHit::Class_Name()
{
   return "MAUS::VirtualHit";
}

//______________________________________________________________________________
const char *VirtualHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::VirtualHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VirtualHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::VirtualHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VirtualHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::VirtualHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VirtualHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::VirtualHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *MCEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MCEvent::Class_Name()
{
   return "MAUS::MCEvent";
}

//______________________________________________________________________________
const char *MCEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::MCEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::MCEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::MCEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::MCEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFDigit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFDigit::Class_Name()
{
   return "MAUS::TOFDigit";
}

//______________________________________________________________________________
const char *TOFDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFDigit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFDigit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFEventDigit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFEventDigit::Class_Name()
{
   return "MAUS::TOFEventDigit";
}

//______________________________________________________________________________
const char *TOFEventDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFEventDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFEventDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFEventDigit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventDigit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Pmt1::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Pmt1::Class_Name()
{
   return "MAUS::Pmt1";
}

//______________________________________________________________________________
const char *Pmt1::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Pmt1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Pmt1::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Pmt1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Pmt1::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Pmt1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Pmt1::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Pmt1*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFSlabHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFSlabHit::Class_Name()
{
   return "MAUS::TOFSlabHit";
}

//______________________________________________________________________________
const char *TOFSlabHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFSlabHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFSlabHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFSlabHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFSlabHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFSlabHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFSlabHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFSlabHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFEventSlabHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFEventSlabHit::Class_Name()
{
   return "MAUS::TOFEventSlabHit";
}

//______________________________________________________________________________
const char *TOFEventSlabHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventSlabHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFEventSlabHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventSlabHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFEventSlabHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventSlabHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFEventSlabHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventSlabHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFSpacePoint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFSpacePoint::Class_Name()
{
   return "MAUS::TOFSpacePoint";
}

//______________________________________________________________________________
const char *TOFSpacePoint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFSpacePoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFSpacePoint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFSpacePoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFSpacePoint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFSpacePoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFSpacePoint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFSpacePoint*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFEventSpacePoint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFEventSpacePoint::Class_Name()
{
   return "MAUS::TOFEventSpacePoint";
}

//______________________________________________________________________________
const char *TOFEventSpacePoint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventSpacePoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFEventSpacePoint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventSpacePoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFEventSpacePoint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventSpacePoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFEventSpacePoint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEventSpacePoint*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TOFEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TOFEvent::Class_Name()
{
   return "MAUS::TOFEvent";
}

//______________________________________________________________________________
const char *TOFEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TOFEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *CkovA::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CkovA::Class_Name()
{
   return "MAUS::CkovA";
}

//______________________________________________________________________________
const char *CkovA::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CkovA::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CkovA::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CkovA::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovA*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *CkovB::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CkovB::Class_Name()
{
   return "MAUS::CkovB";
}

//______________________________________________________________________________
const char *CkovB::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CkovB::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CkovB::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CkovB::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovB*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *CkovDigit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CkovDigit::Class_Name()
{
   return "MAUS::CkovDigit";
}

//______________________________________________________________________________
const char *CkovDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CkovDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CkovDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CkovDigit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovDigit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *CkovEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CkovEvent::Class_Name()
{
   return "MAUS::CkovEvent";
}

//______________________________________________________________________________
const char *CkovEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CkovEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CkovEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CkovEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::CkovEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *KLEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *KLEvent::Class_Name()
{
   return "MAUS::KLEvent";
}

//______________________________________________________________________________
const char *KLEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::KLEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KLEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::KLEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KLEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::KLEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KLEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::KLEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *EMREvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EMREvent::Class_Name()
{
   return "MAUS::EMREvent";
}

//______________________________________________________________________________
const char *EMREvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::EMREvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EMREvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::EMREvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EMREvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::EMREvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EMREvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::EMREvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *TriggerEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TriggerEvent::Class_Name()
{
   return "MAUS::TriggerEvent";
}

//______________________________________________________________________________
const char *TriggerEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TriggerEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TriggerEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TriggerEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TriggerEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TriggerEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TriggerEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::TriggerEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *GlobalEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GlobalEvent::Class_Name()
{
   return "MAUS::GlobalEvent";
}

//______________________________________________________________________________
const char *GlobalEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::GlobalEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GlobalEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::GlobalEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GlobalEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::GlobalEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GlobalEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::GlobalEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *ReconEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ReconEvent::Class_Name()
{
   return "MAUS::ReconEvent";
}

//______________________________________________________________________________
const char *ReconEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::ReconEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ReconEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::ReconEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ReconEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::ReconEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ReconEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::ReconEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Spill::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Spill::Class_Name()
{
   return "MAUS::Spill";
}

//______________________________________________________________________________
const char *Spill::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Spill*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Spill::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Spill*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Spill::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Spill*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Spill::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Spill*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Data::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Data::Class_Name()
{
   return "MAUS::Data";
}

//______________________________________________________________________________
const char *Data::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Data*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Data::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Data*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Data::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Data*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Data::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Data*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
TClass *Step::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Step::Class_Name()
{
   return "MAUS::Step";
}

//______________________________________________________________________________
const char *Step::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Step*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Step::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Step*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Step::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Step*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Step::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Step*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MAUS
      namespace MAUS {
//______________________________________________________________________________
void Data::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Data.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Data::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Data::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Data::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Data.
      TClass *R__cl = ::MAUS::Data::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_spill", &_spill);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Data : new ::MAUS::Data;
   }
   static void *newArray_MAUScLcLData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Data[nElements] : new ::MAUS::Data[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLData(void *p) {
      delete ((::MAUS::Data*)p);
   }
   static void deleteArray_MAUScLcLData(void *p) {
      delete [] ((::MAUS::Data*)p);
   }
   static void destruct_MAUScLcLData(void *p) {
      typedef ::MAUS::Data current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Data

//______________________________________________________________________________
namespace ROOT {
   void CLHEPcLcLHep3Vector_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CLHEP::Hep3Vector.
      typedef ::ROOT::Shadow::CLHEP::Hep3Vector ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::CLHEP::Hep3Vector*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dx", &sobj->dx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dy", &sobj->dy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz", &sobj->dz);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CLHEPcLcLHep3Vector(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CLHEP::Hep3Vector : new ::CLHEP::Hep3Vector;
   }
   static void *newArray_CLHEPcLcLHep3Vector(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CLHEP::Hep3Vector[nElements] : new ::CLHEP::Hep3Vector[nElements];
   }
   // Wrapper around operator delete
   static void delete_CLHEPcLcLHep3Vector(void *p) {
      delete ((::CLHEP::Hep3Vector*)p);
   }
   static void deleteArray_CLHEPcLcLHep3Vector(void *p) {
      delete [] ((::CLHEP::Hep3Vector*)p);
   }
   static void destruct_CLHEPcLcLHep3Vector(void *p) {
      typedef ::CLHEP::Hep3Vector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CLHEP::Hep3Vector

      namespace MAUS {
//______________________________________________________________________________
void Spill::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Spill.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Spill::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Spill::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Spill::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Spill.
      TClass *R__cl = ::MAUS::Spill::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_daq", &_daq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_scalars", &_scalars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_emr", &_emr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_mc", &_mc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_recon", &_recon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_spill_number", &_spill_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_run_number", &_run_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_daq_event_type", (void*)&_daq_event_type);
      R__insp.InspectMember("string", (void*)&_daq_event_type, "_daq_event_type.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_errors", (void*)&_errors);
      R__insp.InspectMember("map<std::string,std::string>", (void*)&_errors, "_errors.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLSpill(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Spill : new ::MAUS::Spill;
   }
   static void *newArray_MAUScLcLSpill(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Spill[nElements] : new ::MAUS::Spill[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLSpill(void *p) {
      delete ((::MAUS::Spill*)p);
   }
   static void deleteArray_MAUScLcLSpill(void *p) {
      delete [] ((::MAUS::Spill*)p);
   }
   static void destruct_MAUScLcLSpill(void *p) {
      typedef ::MAUS::Spill current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Spill

      namespace MAUS {
//______________________________________________________________________________
void Scalars::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Scalars.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Scalars::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Scalars::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Scalars::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Scalars.
      TClass *R__cl = ::MAUS::Scalars::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLScalars(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Scalars : new ::MAUS::Scalars;
   }
   static void *newArray_MAUScLcLScalars(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Scalars[nElements] : new ::MAUS::Scalars[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLScalars(void *p) {
      delete ((::MAUS::Scalars*)p);
   }
   static void deleteArray_MAUScLcLScalars(void *p) {
      delete [] ((::MAUS::Scalars*)p);
   }
   static void destruct_MAUScLcLScalars(void *p) {
      typedef ::MAUS::Scalars current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Scalars

      namespace MAUS {
//______________________________________________________________________________
void EMRSpillData::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::EMRSpillData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::EMRSpillData::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::EMRSpillData::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void EMRSpillData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::EMRSpillData.
      TClass *R__cl = ::MAUS::EMRSpillData::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLEMRSpillData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::EMRSpillData : new ::MAUS::EMRSpillData;
   }
   static void *newArray_MAUScLcLEMRSpillData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::EMRSpillData[nElements] : new ::MAUS::EMRSpillData[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLEMRSpillData(void *p) {
      delete ((::MAUS::EMRSpillData*)p);
   }
   static void deleteArray_MAUScLcLEMRSpillData(void *p) {
      delete [] ((::MAUS::EMRSpillData*)p);
   }
   static void destruct_MAUScLcLEMRSpillData(void *p) {
      typedef ::MAUS::EMRSpillData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::EMRSpillData

      namespace MAUS {
//______________________________________________________________________________
void DAQData::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::DAQData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::DAQData::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::DAQData::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void DAQData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::DAQData.
      TClass *R__cl = ::MAUS::DAQData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V830", &_V830);
      R__insp.InspectMember(_V830, "_V830.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_request", (void*)&_trigger_request);
      R__insp.InspectMember("MAUS::TriggerRequestArray", (void*)&_trigger_request, "_trigger_request.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof1", (void*)&_tof1);
      R__insp.InspectMember("MAUS::TOF1DaqArray", (void*)&_tof1, "_tof1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ckov", (void*)&_ckov);
      R__insp.InspectMember("MAUS::CkovArray", (void*)&_ckov, "_ckov.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof2", (void*)&_tof2);
      R__insp.InspectMember("MAUS::TOF2DaqArray", (void*)&_tof2, "_tof2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_unknown", (void*)&_unknown);
      R__insp.InspectMember("MAUS::UnknownArray", (void*)&_unknown, "_unknown.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_kl", (void*)&_kl);
      R__insp.InspectMember("MAUS::KLArray", (void*)&_kl, "_kl.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tag", (void*)&_tag);
      R__insp.InspectMember("MAUS::TagArray", (void*)&_tag, "_tag.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof0", (void*)&_tof0);
      R__insp.InspectMember("MAUS::TOF0DaqArray", (void*)&_tof0, "_tof0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger", (void*)&_trigger);
      R__insp.InspectMember("MAUS::TriggerArray", (void*)&_trigger, "_trigger.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLDAQData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::DAQData : new ::MAUS::DAQData;
   }
   static void *newArray_MAUScLcLDAQData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::DAQData[nElements] : new ::MAUS::DAQData[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLDAQData(void *p) {
      delete ((::MAUS::DAQData*)p);
   }
   static void deleteArray_MAUScLcLDAQData(void *p) {
      delete [] ((::MAUS::DAQData*)p);
   }
   static void destruct_MAUScLcLDAQData(void *p) {
      typedef ::MAUS::DAQData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::DAQData

      namespace MAUS {
//______________________________________________________________________________
void ReconEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::ReconEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::ReconEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::ReconEvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void ReconEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::ReconEvent.
      TClass *R__cl = ::MAUS::ReconEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_tof_event", &_tof_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_scifi_event", &_scifi_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_ckov_event", &_ckov_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_kl_event", &_kl_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_emr_event", &_emr_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_trigger_event", &_trigger_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_global_event", &_global_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLReconEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::ReconEvent : new ::MAUS::ReconEvent;
   }
   static void *newArray_MAUScLcLReconEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::ReconEvent[nElements] : new ::MAUS::ReconEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLReconEvent(void *p) {
      delete ((::MAUS::ReconEvent*)p);
   }
   static void deleteArray_MAUScLcLReconEvent(void *p) {
      delete [] ((::MAUS::ReconEvent*)p);
   }
   static void destruct_MAUScLcLReconEvent(void *p) {
      typedef ::MAUS::ReconEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::ReconEvent

      namespace MAUS {
//______________________________________________________________________________
void TOFEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFEvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFEvent.
      TClass *R__cl = ::MAUS::TOFEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof_slab_hits", &_tof_slab_hits);
      R__insp.InspectMember(_tof_slab_hits, "_tof_slab_hits.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof_space_points", &_tof_space_points);
      R__insp.InspectMember(_tof_space_points, "_tof_space_points.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof_digits", &_tof_digits);
      R__insp.InspectMember(_tof_digits, "_tof_digits.");
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFEvent : new ::MAUS::TOFEvent;
   }
   static void *newArray_MAUScLcLTOFEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFEvent[nElements] : new ::MAUS::TOFEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFEvent(void *p) {
      delete ((::MAUS::TOFEvent*)p);
   }
   static void deleteArray_MAUScLcLTOFEvent(void *p) {
      delete [] ((::MAUS::TOFEvent*)p);
   }
   static void destruct_MAUScLcLTOFEvent(void *p) {
      typedef ::MAUS::TOFEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFEvent

      namespace MAUS {
//______________________________________________________________________________
void SciFiEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::SciFiEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::SciFiEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::SciFiEvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void SciFiEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::SciFiEvent.
      TClass *R__cl = ::MAUS::SciFiEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLSciFiEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::SciFiEvent : new ::MAUS::SciFiEvent;
   }
   static void *newArray_MAUScLcLSciFiEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::SciFiEvent[nElements] : new ::MAUS::SciFiEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLSciFiEvent(void *p) {
      delete ((::MAUS::SciFiEvent*)p);
   }
   static void deleteArray_MAUScLcLSciFiEvent(void *p) {
      delete [] ((::MAUS::SciFiEvent*)p);
   }
   static void destruct_MAUScLcLSciFiEvent(void *p) {
      typedef ::MAUS::SciFiEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::SciFiEvent

      namespace MAUS {
//______________________________________________________________________________
void EMREvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::EMREvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::EMREvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::EMREvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void EMREvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::EMREvent.
      TClass *R__cl = ::MAUS::EMREvent::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLEMREvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::EMREvent : new ::MAUS::EMREvent;
   }
   static void *newArray_MAUScLcLEMREvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::EMREvent[nElements] : new ::MAUS::EMREvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLEMREvent(void *p) {
      delete ((::MAUS::EMREvent*)p);
   }
   static void deleteArray_MAUScLcLEMREvent(void *p) {
      delete [] ((::MAUS::EMREvent*)p);
   }
   static void destruct_MAUScLcLEMREvent(void *p) {
      typedef ::MAUS::EMREvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::EMREvent

      namespace MAUS {
//______________________________________________________________________________
void KLEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::KLEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::KLEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::KLEvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void KLEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::KLEvent.
      TClass *R__cl = ::MAUS::KLEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLKLEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::KLEvent : new ::MAUS::KLEvent;
   }
   static void *newArray_MAUScLcLKLEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::KLEvent[nElements] : new ::MAUS::KLEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLKLEvent(void *p) {
      delete ((::MAUS::KLEvent*)p);
   }
   static void deleteArray_MAUScLcLKLEvent(void *p) {
      delete [] ((::MAUS::KLEvent*)p);
   }
   static void destruct_MAUScLcLKLEvent(void *p) {
      typedef ::MAUS::KLEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::KLEvent

      namespace MAUS {
//______________________________________________________________________________
void TriggerEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TriggerEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TriggerEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TriggerEvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TriggerEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TriggerEvent.
      TClass *R__cl = ::MAUS::TriggerEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTriggerEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TriggerEvent : new ::MAUS::TriggerEvent;
   }
   static void *newArray_MAUScLcLTriggerEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TriggerEvent[nElements] : new ::MAUS::TriggerEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTriggerEvent(void *p) {
      delete ((::MAUS::TriggerEvent*)p);
   }
   static void deleteArray_MAUScLcLTriggerEvent(void *p) {
      delete [] ((::MAUS::TriggerEvent*)p);
   }
   static void destruct_MAUScLcLTriggerEvent(void *p) {
      typedef ::MAUS::TriggerEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TriggerEvent

      namespace MAUS {
//______________________________________________________________________________
void GlobalEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::GlobalEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::GlobalEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::GlobalEvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void GlobalEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::GlobalEvent.
      TClass *R__cl = ::MAUS::GlobalEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLGlobalEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::GlobalEvent : new ::MAUS::GlobalEvent;
   }
   static void *newArray_MAUScLcLGlobalEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::GlobalEvent[nElements] : new ::MAUS::GlobalEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLGlobalEvent(void *p) {
      delete ((::MAUS::GlobalEvent*)p);
   }
   static void deleteArray_MAUScLcLGlobalEvent(void *p) {
      delete [] ((::MAUS::GlobalEvent*)p);
   }
   static void destruct_MAUScLcLGlobalEvent(void *p) {
      typedef ::MAUS::GlobalEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::GlobalEvent

      namespace MAUS {
//______________________________________________________________________________
void MCEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::MCEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::MCEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::MCEvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void MCEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::MCEvent.
      TClass *R__cl = ::MAUS::MCEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_primary", &_primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_virtuals", &_virtuals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_sci_fi_hits", &_sci_fi_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_tof_hits", &_tof_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_special_virtual_hits", &_special_virtual_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_tracks", &_tracks);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLMCEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::MCEvent : new ::MAUS::MCEvent;
   }
   static void *newArray_MAUScLcLMCEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::MCEvent[nElements] : new ::MAUS::MCEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLMCEvent(void *p) {
      delete ((::MAUS::MCEvent*)p);
   }
   static void deleteArray_MAUScLcLMCEvent(void *p) {
      delete [] ((::MAUS::MCEvent*)p);
   }
   static void destruct_MAUScLcLMCEvent(void *p) {
      typedef ::MAUS::MCEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::MCEvent

      namespace MAUS {
//______________________________________________________________________________
void VirtualHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::VirtualHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::VirtualHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::VirtualHit::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void VirtualHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::VirtualHit.
      TClass *R__cl = ::MAUS::VirtualHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_station_id", &_station_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_particle_id", &_particle_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_track_id", &_track_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_mass", &_mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_proper_time", &_proper_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_path_length", &_path_length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position", (void*)&_position);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_position, "_position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_momentum", (void*)&_momentum);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_momentum, "_momentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_b_field", (void*)&_b_field);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_b_field, "_b_field.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_e_field", (void*)&_e_field);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_e_field, "_e_field.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLVirtualHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::VirtualHit : new ::MAUS::VirtualHit;
   }
   static void *newArray_MAUScLcLVirtualHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::VirtualHit[nElements] : new ::MAUS::VirtualHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLVirtualHit(void *p) {
      delete ((::MAUS::VirtualHit*)p);
   }
   static void deleteArray_MAUScLcLVirtualHit(void *p) {
      delete [] ((::MAUS::VirtualHit*)p);
   }
   static void destruct_MAUScLcLVirtualHit(void *p) {
      typedef ::MAUS::VirtualHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::VirtualHit

      namespace MAUS {
//______________________________________________________________________________
void Primary::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Primary.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Primary::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Primary::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Primary::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Primary.
      TClass *R__cl = ::MAUS::Primary::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_seed", &_seed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_particle_id", &_particle_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy", &_energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position", (void*)&_position);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_position, "_position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_momentum", (void*)&_momentum);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_momentum, "_momentum.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLPrimary(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Primary : new ::MAUS::Primary;
   }
   static void *newArray_MAUScLcLPrimary(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Primary[nElements] : new ::MAUS::Primary[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLPrimary(void *p) {
      delete ((::MAUS::Primary*)p);
   }
   static void deleteArray_MAUScLcLPrimary(void *p) {
      delete [] ((::MAUS::Primary*)p);
   }
   static void destruct_MAUScLcLPrimary(void *p) {
      typedef ::MAUS::Primary current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Primary

      namespace MAUS {
//______________________________________________________________________________
void Step::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Step.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Step::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Step::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Step::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Step.
      TClass *R__cl = ::MAUS::Step::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position", (void*)&_position);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_position, "_position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_momentum", (void*)&_momentum);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_momentum, "_momentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_proper_time", &_proper_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_path_length", &_path_length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy", &_energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy_deposited", &_energy_deposited);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLStep(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Step : new ::MAUS::Step;
   }
   static void *newArray_MAUScLcLStep(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Step[nElements] : new ::MAUS::Step[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLStep(void *p) {
      delete ((::MAUS::Step*)p);
   }
   static void deleteArray_MAUScLcLStep(void *p) {
      delete [] ((::MAUS::Step*)p);
   }
   static void destruct_MAUScLcLStep(void *p) {
      typedef ::MAUS::Step current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Step

      namespace MAUS {
//______________________________________________________________________________
void Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Track::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Track.
      TClass *R__cl = ::MAUS::Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_steps", &_steps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_initial_position", (void*)&_initial_position);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_initial_position, "_initial_position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_final_position", (void*)&_final_position);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_final_position, "_final_position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_initial_momentum", (void*)&_initial_momentum);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_initial_momentum, "_initial_momentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_final_momentum", (void*)&_final_momentum);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&_final_momentum, "_final_momentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_particle_id", &_particle_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_track_id", &_track_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_parent_track_id", &_parent_track_id);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTrack(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Track : new ::MAUS::Track;
   }
   static void *newArray_MAUScLcLTrack(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Track[nElements] : new ::MAUS::Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTrack(void *p) {
      delete ((::MAUS::Track*)p);
   }
   static void deleteArray_MAUScLcLTrack(void *p) {
      delete [] ((::MAUS::Track*)p);
   }
   static void destruct_MAUScLcLTrack(void *p) {
      typedef ::MAUS::Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Track

      namespace MAUS {
//______________________________________________________________________________
template <> void Hit<MAUS::SciFiChannelId>::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Hit<MAUS::SciFiChannelId>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Hit<MAUS::SciFiChannelId>::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Hit<MAUS::SciFiChannelId>::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
namespace ROOT {
   void MAUScLcLHitlEMAUScLcLSciFiChannelIdgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MAUS::Hit<MAUS::SciFiChannelId>.
      typedef ::ROOT::Shadow::MAUS::HitlEMAUScLcLSciFiChannelIdgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SciFiChannelId>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_track_id", &sobj->_track_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_particle_id", &sobj->_particle_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy", &sobj->_energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &sobj->_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &sobj->_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy_deposited", &sobj->_energy_deposited);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position", (void*)&sobj->_position);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&sobj->_position, "_position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_momentum", (void*)&sobj->_momentum);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&sobj->_momentum, "_momentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_channel_id", &sobj->_channel_id);
   }

}

      namespace MAUS {
template <> void Hit<MAUS::SciFiChannelId>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOT::MAUScLcLHitlEMAUScLcLSciFiChannelIdgR_ShowMembers(this, R__insp);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Hit<MAUS::SciFiChannelId> : new ::MAUS::Hit<MAUS::SciFiChannelId>;
   }
   static void *newArray_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Hit<MAUS::SciFiChannelId>[nElements] : new ::MAUS::Hit<MAUS::SciFiChannelId>[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void *p) {
      delete ((::MAUS::Hit<MAUS::SciFiChannelId>*)p);
   }
   static void deleteArray_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void *p) {
      delete [] ((::MAUS::Hit<MAUS::SciFiChannelId>*)p);
   }
   static void destruct_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void *p) {
      typedef ::MAUS::Hit<MAUS::SciFiChannelId> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Hit<MAUS::SciFiChannelId>

      namespace MAUS {
//______________________________________________________________________________
void SciFiChannelId::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::SciFiChannelId.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::SciFiChannelId::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::SciFiChannelId::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void SciFiChannelId::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::SciFiChannelId.
      TClass *R__cl = ::MAUS::SciFiChannelId::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_fiber", &_fiber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_station", &_station);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tracker", &_tracker);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_plane", &_plane);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLSciFiChannelId(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::SciFiChannelId : new ::MAUS::SciFiChannelId;
   }
   static void *newArray_MAUScLcLSciFiChannelId(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::SciFiChannelId[nElements] : new ::MAUS::SciFiChannelId[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLSciFiChannelId(void *p) {
      delete ((::MAUS::SciFiChannelId*)p);
   }
   static void deleteArray_MAUScLcLSciFiChannelId(void *p) {
      delete [] ((::MAUS::SciFiChannelId*)p);
   }
   static void destruct_MAUScLcLSciFiChannelId(void *p) {
      typedef ::MAUS::SciFiChannelId current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::SciFiChannelId

      namespace MAUS {
//______________________________________________________________________________
template <> void Hit<MAUS::TOFChannelId>::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Hit<MAUS::TOFChannelId>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Hit<MAUS::TOFChannelId>::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Hit<MAUS::TOFChannelId>::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
namespace ROOT {
   void MAUScLcLHitlEMAUScLcLTOFChannelIdgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MAUS::Hit<MAUS::TOFChannelId>.
      typedef ::ROOT::Shadow::MAUS::HitlEMAUScLcLTOFChannelIdgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::TOFChannelId>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_track_id", &sobj->_track_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_particle_id", &sobj->_particle_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy", &sobj->_energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &sobj->_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &sobj->_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy_deposited", &sobj->_energy_deposited);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position", (void*)&sobj->_position);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&sobj->_position, "_position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_momentum", (void*)&sobj->_momentum);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&sobj->_momentum, "_momentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_channel_id", &sobj->_channel_id);
   }

}

      namespace MAUS {
template <> void Hit<MAUS::TOFChannelId>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOT::MAUScLcLHitlEMAUScLcLTOFChannelIdgR_ShowMembers(this, R__insp);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Hit<MAUS::TOFChannelId> : new ::MAUS::Hit<MAUS::TOFChannelId>;
   }
   static void *newArray_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Hit<MAUS::TOFChannelId>[nElements] : new ::MAUS::Hit<MAUS::TOFChannelId>[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(void *p) {
      delete ((::MAUS::Hit<MAUS::TOFChannelId>*)p);
   }
   static void deleteArray_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(void *p) {
      delete [] ((::MAUS::Hit<MAUS::TOFChannelId>*)p);
   }
   static void destruct_MAUScLcLHitlEMAUScLcLTOFChannelIdgR(void *p) {
      typedef ::MAUS::Hit<MAUS::TOFChannelId> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Hit<MAUS::TOFChannelId>

      namespace MAUS {
//______________________________________________________________________________
void TOFChannelId::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFChannelId.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFChannelId::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFChannelId::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFChannelId::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFChannelId.
      TClass *R__cl = ::MAUS::TOFChannelId::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_slab", &_slab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_plane", &_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_station", &_station);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFChannelId(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFChannelId : new ::MAUS::TOFChannelId;
   }
   static void *newArray_MAUScLcLTOFChannelId(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFChannelId[nElements] : new ::MAUS::TOFChannelId[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFChannelId(void *p) {
      delete ((::MAUS::TOFChannelId*)p);
   }
   static void deleteArray_MAUScLcLTOFChannelId(void *p) {
      delete [] ((::MAUS::TOFChannelId*)p);
   }
   static void destruct_MAUScLcLTOFChannelId(void *p) {
      typedef ::MAUS::TOFChannelId current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFChannelId

      namespace MAUS {
//______________________________________________________________________________
template <> void Hit<MAUS::SpecialVirtualChannelId>::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Hit<MAUS::SpecialVirtualChannelId>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
namespace ROOT {
   void MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MAUS::Hit<MAUS::SpecialVirtualChannelId>.
      typedef ::ROOT::Shadow::MAUS::HitlEMAUScLcLSpecialVirtualChannelIdgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_track_id", &sobj->_track_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_particle_id", &sobj->_particle_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy", &sobj->_energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &sobj->_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &sobj->_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy_deposited", &sobj->_energy_deposited);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position", (void*)&sobj->_position);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&sobj->_position, "_position.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_momentum", (void*)&sobj->_momentum);
      R__insp.InspectMember("MAUS::ThreeVector", (void*)&sobj->_momentum, "_momentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_channel_id", &sobj->_channel_id);
   }

}

      namespace MAUS {
template <> void Hit<MAUS::SpecialVirtualChannelId>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOT::MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR_ShowMembers(this, R__insp);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Hit<MAUS::SpecialVirtualChannelId> : new ::MAUS::Hit<MAUS::SpecialVirtualChannelId>;
   }
   static void *newArray_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Hit<MAUS::SpecialVirtualChannelId>[nElements] : new ::MAUS::Hit<MAUS::SpecialVirtualChannelId>[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void *p) {
      delete ((::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)p);
   }
   static void deleteArray_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void *p) {
      delete [] ((::MAUS::Hit<MAUS::SpecialVirtualChannelId>*)p);
   }
   static void destruct_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void *p) {
      typedef ::MAUS::Hit<MAUS::SpecialVirtualChannelId> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Hit<MAUS::SpecialVirtualChannelId>

      namespace MAUS {
//______________________________________________________________________________
void SpecialVirtualChannelId::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::SpecialVirtualChannelId.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::SpecialVirtualChannelId::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::SpecialVirtualChannelId::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void SpecialVirtualChannelId::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::SpecialVirtualChannelId.
      TClass *R__cl = ::MAUS::SpecialVirtualChannelId::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_station", &_station);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLSpecialVirtualChannelId(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::SpecialVirtualChannelId : new ::MAUS::SpecialVirtualChannelId;
   }
   static void *newArray_MAUScLcLSpecialVirtualChannelId(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::SpecialVirtualChannelId[nElements] : new ::MAUS::SpecialVirtualChannelId[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLSpecialVirtualChannelId(void *p) {
      delete ((::MAUS::SpecialVirtualChannelId*)p);
   }
   static void deleteArray_MAUScLcLSpecialVirtualChannelId(void *p) {
      delete [] ((::MAUS::SpecialVirtualChannelId*)p);
   }
   static void destruct_MAUScLcLSpecialVirtualChannelId(void *p) {
      typedef ::MAUS::SpecialVirtualChannelId current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::SpecialVirtualChannelId

      namespace MAUS {
//______________________________________________________________________________
void V1290::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::V1290.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::V1290::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::V1290::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void V1290::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::V1290.
      TClass *R__cl = ::MAUS::V1290::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_bunch_id", &_bunch_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ldc_id", &_ldc_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_equip_type", &_equip_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_phys_event_number", &_phys_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trailing_time", &_trailing_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channel_key", (void*)&_channel_key);
      R__insp.InspectMember("string", (void*)&_channel_key, "_channel_key.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_leading_time", &_leading_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_time_tag", &_trigger_time_tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time_stamp", &_time_stamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_detector", (void*)&_detector);
      R__insp.InspectMember("string", (void*)&_detector, "_detector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_geo", &_geo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channel", &_channel);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLV1290(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::V1290 : new ::MAUS::V1290;
   }
   static void *newArray_MAUScLcLV1290(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::V1290[nElements] : new ::MAUS::V1290[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLV1290(void *p) {
      delete ((::MAUS::V1290*)p);
   }
   static void deleteArray_MAUScLcLV1290(void *p) {
      delete [] ((::MAUS::V1290*)p);
   }
   static void destruct_MAUScLcLV1290(void *p) {
      typedef ::MAUS::V1290 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::V1290

      namespace MAUS {
//______________________________________________________________________________
void V1731::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::V1731.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::V1731::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::V1731::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void V1731::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::V1731.
      TClass *R__cl = ::MAUS::V1731::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ldc_id", &_ldc_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_samples", (void*)&_samples);
      R__insp.InspectMember("MAUS::SampleArray", (void*)&_samples, "_samples.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge_mm", &_charge_mm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_equip_type", &_equip_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_phys_event_number", &_phys_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge_pm", &_charge_pm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time", &_arrival_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channel_key", (void*)&_channel_key);
      R__insp.InspectMember("string", (void*)&_channel_key, "_channel_key.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min", &_position_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_area", &_pulse_area);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_max_pos", &_max_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_time_tag", &_trigger_time_tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time_stamp", &_time_stamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_detector", (void*)&_detector);
      R__insp.InspectMember("string", (void*)&_detector, "_detector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_geo", &_geo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pedestal", &_pedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channel", &_channel);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLV1731(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::V1731 : new ::MAUS::V1731;
   }
   static void *newArray_MAUScLcLV1731(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::V1731[nElements] : new ::MAUS::V1731[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLV1731(void *p) {
      delete ((::MAUS::V1731*)p);
   }
   static void deleteArray_MAUScLcLV1731(void *p) {
      delete [] ((::MAUS::V1731*)p);
   }
   static void destruct_MAUScLcLV1731(void *p) {
      typedef ::MAUS::V1731 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::V1731

      namespace MAUS {
//______________________________________________________________________________
void TOFDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFDigit::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFDigit.
      TClass *R__cl = ::MAUS::TOFDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pmt", &_pmt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_leading_time", &_trigger_leading_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_request_leading_time", &_trigger_request_leading_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_trailing_time", &_trigger_trailing_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_request_trailing_time", &_trigger_request_trailing_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge_mm", &_charge_mm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trailing_time", &_trailing_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_plane", &_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge_pm", &_charge_pm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_phys_event_number", &_phys_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_station", &_station);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_leading_time", &_leading_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time_stamp", &_time_stamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof_key", (void*)&_tof_key);
      R__insp.InspectMember("string", (void*)&_tof_key, "_tof_key.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_time_tag", &_trigger_time_tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_slab", &_slab);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFDigit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFDigit : new ::MAUS::TOFDigit;
   }
   static void *newArray_MAUScLcLTOFDigit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFDigit[nElements] : new ::MAUS::TOFDigit[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFDigit(void *p) {
      delete ((::MAUS::TOFDigit*)p);
   }
   static void deleteArray_MAUScLcLTOFDigit(void *p) {
      delete [] ((::MAUS::TOFDigit*)p);
   }
   static void destruct_MAUScLcLTOFDigit(void *p) {
      typedef ::MAUS::TOFDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFDigit

      namespace MAUS {
//______________________________________________________________________________
void V830::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::V830.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::V830::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::V830::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void V830::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::V830.
      TClass *R__cl = ::MAUS::V830::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ldc_id", &_ldc_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_equip_type", &_equip_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channels", &_channels);
      R__insp.InspectMember(_channels, "_channels.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_phys_event_number", &_phys_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time_stamp", &_time_stamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_geo", &_geo);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLV830(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::V830 : new ::MAUS::V830;
   }
   static void *newArray_MAUScLcLV830(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::V830[nElements] : new ::MAUS::V830[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLV830(void *p) {
      delete ((::MAUS::V830*)p);
   }
   static void deleteArray_MAUScLcLV830(void *p) {
      delete [] ((::MAUS::V830*)p);
   }
   static void destruct_MAUScLcLV830(void *p) {
      typedef ::MAUS::V830 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::V830

      namespace MAUS {
//______________________________________________________________________________
void TOFSlabHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFSlabHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFSlabHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFSlabHit::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFSlabHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFSlabHit.
      TClass *R__cl = ::MAUS::TOFSlabHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_slab", &_slab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_phys_event_number", &_phys_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_raw_time", &_raw_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_plane", &_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge_product", &_charge_product);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_station", &_station);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_detector", (void*)&_detector);
      R__insp.InspectMember("string", (void*)&_detector, "_detector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pmt1", &_pmt1);
      R__insp.InspectMember(_pmt1, "_pmt1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pmt0", &_pmt0);
      R__insp.InspectMember(_pmt0, "_pmt0.");
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFSlabHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFSlabHit : new ::MAUS::TOFSlabHit;
   }
   static void *newArray_MAUScLcLTOFSlabHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFSlabHit[nElements] : new ::MAUS::TOFSlabHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFSlabHit(void *p) {
      delete ((::MAUS::TOFSlabHit*)p);
   }
   static void deleteArray_MAUScLcLTOFSlabHit(void *p) {
      delete [] ((::MAUS::TOFSlabHit*)p);
   }
   static void destruct_MAUScLcLTOFSlabHit(void *p) {
      typedef ::MAUS::TOFSlabHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFSlabHit

      namespace MAUS {
//______________________________________________________________________________
void CkovDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::CkovDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::CkovDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::CkovDigit::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void CkovDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::CkovDigit.
      TClass *R__cl = ::MAUS::CkovDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_A", &_A);
      R__insp.InspectMember(_A, "_A.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_B", &_B);
      R__insp.InspectMember(_B, "_B.");
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLCkovDigit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovDigit : new ::MAUS::CkovDigit;
   }
   static void *newArray_MAUScLcLCkovDigit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovDigit[nElements] : new ::MAUS::CkovDigit[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLCkovDigit(void *p) {
      delete ((::MAUS::CkovDigit*)p);
   }
   static void deleteArray_MAUScLcLCkovDigit(void *p) {
      delete [] ((::MAUS::CkovDigit*)p);
   }
   static void destruct_MAUScLcLCkovDigit(void *p) {
      typedef ::MAUS::CkovDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::CkovDigit

      namespace MAUS {
//______________________________________________________________________________
void V1724::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::V1724.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::V1724::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::V1724::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void V1724::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::V1724.
      TClass *R__cl = ::MAUS::V1724::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ldc_id", &_ldc_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge_mm", &_charge_mm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_equip_type", &_equip_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_detector", (void*)&_detector);
      R__insp.InspectMember("string", (void*)&_detector, "_detector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_phys_event_number", &_phys_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge_pm", &_charge_pm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channel_key", (void*)&_channel_key);
      R__insp.InspectMember("string", (void*)&_channel_key, "_channel_key.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_time_tag", &_trigger_time_tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time_stamp", &_time_stamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pedestal", &_pedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_geo", &_geo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_max", &_position_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channel", &_channel);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLV1724(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::V1724 : new ::MAUS::V1724;
   }
   static void *newArray_MAUScLcLV1724(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::V1724[nElements] : new ::MAUS::V1724[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLV1724(void *p) {
      delete ((::MAUS::V1724*)p);
   }
   static void deleteArray_MAUScLcLV1724(void *p) {
      delete [] ((::MAUS::V1724*)p);
   }
   static void destruct_MAUScLcLV1724(void *p) {
      typedef ::MAUS::V1724 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::V1724

      namespace MAUS {
//______________________________________________________________________________
void TOFSpacePoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFSpacePoint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFSpacePoint::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFSpacePoint::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFSpacePoint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFSpacePoint.
      TClass *R__cl = ::MAUS::TOFSpacePoint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_phys_event_number", &_phys_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pixel_key", (void*)&_pixel_key);
      R__insp.InspectMember("string", (void*)&_pixel_key, "_pixel_key.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_station", &_station);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_slabY", &_slabY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_slabX", &_slabX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge_product", &_charge_product);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_detector", (void*)&_detector);
      R__insp.InspectMember("string", (void*)&_detector, "_detector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_dt", &_dt);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFSpacePoint(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFSpacePoint : new ::MAUS::TOFSpacePoint;
   }
   static void *newArray_MAUScLcLTOFSpacePoint(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFSpacePoint[nElements] : new ::MAUS::TOFSpacePoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFSpacePoint(void *p) {
      delete ((::MAUS::TOFSpacePoint*)p);
   }
   static void deleteArray_MAUScLcLTOFSpacePoint(void *p) {
      delete [] ((::MAUS::TOFSpacePoint*)p);
   }
   static void destruct_MAUScLcLTOFSpacePoint(void *p) {
      typedef ::MAUS::TOFSpacePoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFSpacePoint

      namespace MAUS {
//______________________________________________________________________________
void Trigger::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Trigger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Trigger::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Trigger::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Trigger::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Trigger.
      TClass *R__cl = ::MAUS::Trigger::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V1290", (void*)&_V1290);
      R__insp.InspectMember("MAUS::V1290Array", (void*)&_V1290, "_V1290.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTrigger(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Trigger : new ::MAUS::Trigger;
   }
   static void *newArray_MAUScLcLTrigger(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Trigger[nElements] : new ::MAUS::Trigger[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTrigger(void *p) {
      delete ((::MAUS::Trigger*)p);
   }
   static void deleteArray_MAUScLcLTrigger(void *p) {
      delete [] ((::MAUS::Trigger*)p);
   }
   static void destruct_MAUScLcLTrigger(void *p) {
      typedef ::MAUS::Trigger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Trigger

      namespace MAUS {
//______________________________________________________________________________
void Pmt1::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Pmt1.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Pmt1::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Pmt1::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Pmt1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Pmt1.
      TClass *R__cl = ::MAUS::Pmt1::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_raw_time", &_raw_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_leading_time", &_leading_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof_key", (void*)&_tof_key);
      R__insp.InspectMember("string", (void*)&_tof_key, "_tof_key.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_request_leading_time", &_trigger_request_leading_time);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLPmt1(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Pmt1 : new ::MAUS::Pmt1;
   }
   static void *newArray_MAUScLcLPmt1(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Pmt1[nElements] : new ::MAUS::Pmt1[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLPmt1(void *p) {
      delete ((::MAUS::Pmt1*)p);
   }
   static void deleteArray_MAUScLcLPmt1(void *p) {
      delete [] ((::MAUS::Pmt1*)p);
   }
   static void destruct_MAUScLcLPmt1(void *p) {
      typedef ::MAUS::Pmt1 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Pmt1

      namespace MAUS {
//______________________________________________________________________________
void Pmt0::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Pmt0.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Pmt0::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Pmt0::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Pmt0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Pmt0.
      TClass *R__cl = ::MAUS::Pmt0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_raw_time", &_raw_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_leading_time", &_leading_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time", &_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof_key", (void*)&_tof_key);
      R__insp.InspectMember("string", (void*)&_tof_key, "_tof_key.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigger_request_leading_time", &_trigger_request_leading_time);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLPmt0(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Pmt0 : new ::MAUS::Pmt0;
   }
   static void *newArray_MAUScLcLPmt0(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Pmt0[nElements] : new ::MAUS::Pmt0[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLPmt0(void *p) {
      delete ((::MAUS::Pmt0*)p);
   }
   static void deleteArray_MAUScLcLPmt0(void *p) {
      delete [] ((::MAUS::Pmt0*)p);
   }
   static void destruct_MAUScLcLPmt0(void *p) {
      typedef ::MAUS::Pmt0 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Pmt0

      namespace MAUS {
//______________________________________________________________________________
void TOFEventSlabHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFEventSlabHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFEventSlabHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFEventSlabHit::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFEventSlabHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFEventSlabHit.
      TClass *R__cl = ::MAUS::TOFEventSlabHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof1", (void*)&_tof1);
      R__insp.InspectMember("MAUS::TOF1SlabHitArray", (void*)&_tof1, "_tof1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof0", (void*)&_tof0);
      R__insp.InspectMember("MAUS::TOF0SlabHitArray", (void*)&_tof0, "_tof0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof2", (void*)&_tof2);
      R__insp.InspectMember("MAUS::TOF2SlabHitArray", (void*)&_tof2, "_tof2.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFEventSlabHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFEventSlabHit : new ::MAUS::TOFEventSlabHit;
   }
   static void *newArray_MAUScLcLTOFEventSlabHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFEventSlabHit[nElements] : new ::MAUS::TOFEventSlabHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFEventSlabHit(void *p) {
      delete ((::MAUS::TOFEventSlabHit*)p);
   }
   static void deleteArray_MAUScLcLTOFEventSlabHit(void *p) {
      delete [] ((::MAUS::TOFEventSlabHit*)p);
   }
   static void destruct_MAUScLcLTOFEventSlabHit(void *p) {
      typedef ::MAUS::TOFEventSlabHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFEventSlabHit

      namespace MAUS {
//______________________________________________________________________________
void CkovEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::CkovEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::CkovEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::CkovEvent::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void CkovEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::CkovEvent.
      TClass *R__cl = ::MAUS::CkovEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ckov_digits", (void*)&_ckov_digits);
      R__insp.InspectMember("MAUS::CkovDigitArray", (void*)&_ckov_digits, "_ckov_digits.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLCkovEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovEvent : new ::MAUS::CkovEvent;
   }
   static void *newArray_MAUScLcLCkovEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovEvent[nElements] : new ::MAUS::CkovEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLCkovEvent(void *p) {
      delete ((::MAUS::CkovEvent*)p);
   }
   static void deleteArray_MAUScLcLCkovEvent(void *p) {
      delete [] ((::MAUS::CkovEvent*)p);
   }
   static void destruct_MAUScLcLCkovEvent(void *p) {
      typedef ::MAUS::CkovEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::CkovEvent

      namespace MAUS {
//______________________________________________________________________________
void KLDaq::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::KLDaq.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::KLDaq::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::KLDaq::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void KLDaq::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::KLDaq.
      TClass *R__cl = ::MAUS::KLDaq::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V1724", (void*)&_V1724);
      R__insp.InspectMember("MAUS::V1724Array", (void*)&_V1724, "_V1724.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLKLDaq(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::KLDaq : new ::MAUS::KLDaq;
   }
   static void *newArray_MAUScLcLKLDaq(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::KLDaq[nElements] : new ::MAUS::KLDaq[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLKLDaq(void *p) {
      delete ((::MAUS::KLDaq*)p);
   }
   static void deleteArray_MAUScLcLKLDaq(void *p) {
      delete [] ((::MAUS::KLDaq*)p);
   }
   static void destruct_MAUScLcLKLDaq(void *p) {
      typedef ::MAUS::KLDaq current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::KLDaq

      namespace MAUS {
//______________________________________________________________________________
void TOFDaq::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFDaq.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFDaq::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFDaq::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFDaq::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFDaq.
      TClass *R__cl = ::MAUS::TOFDaq::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V1724", (void*)&_V1724);
      R__insp.InspectMember("MAUS::V1724Array", (void*)&_V1724, "_V1724.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V1290", (void*)&_V1290);
      R__insp.InspectMember("MAUS::V1290Array", (void*)&_V1290, "_V1290.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFDaq(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFDaq : new ::MAUS::TOFDaq;
   }
   static void *newArray_MAUScLcLTOFDaq(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFDaq[nElements] : new ::MAUS::TOFDaq[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFDaq(void *p) {
      delete ((::MAUS::TOFDaq*)p);
   }
   static void deleteArray_MAUScLcLTOFDaq(void *p) {
      delete [] ((::MAUS::TOFDaq*)p);
   }
   static void destruct_MAUScLcLTOFDaq(void *p) {
      typedef ::MAUS::TOFDaq current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFDaq

      namespace MAUS {
//______________________________________________________________________________
void TOFEventSpacePoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFEventSpacePoint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFEventSpacePoint::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFEventSpacePoint::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFEventSpacePoint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFEventSpacePoint.
      TClass *R__cl = ::MAUS::TOFEventSpacePoint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof0", (void*)&_tof0);
      R__insp.InspectMember("MAUS::TOF0SpacePointArray", (void*)&_tof0, "_tof0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof1", (void*)&_tof1);
      R__insp.InspectMember("MAUS::TOF1SpacePointArray", (void*)&_tof1, "_tof1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof2", (void*)&_tof2);
      R__insp.InspectMember("MAUS::TOF2SpacePointArray", (void*)&_tof2, "_tof2.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFEventSpacePoint(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFEventSpacePoint : new ::MAUS::TOFEventSpacePoint;
   }
   static void *newArray_MAUScLcLTOFEventSpacePoint(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFEventSpacePoint[nElements] : new ::MAUS::TOFEventSpacePoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFEventSpacePoint(void *p) {
      delete ((::MAUS::TOFEventSpacePoint*)p);
   }
   static void deleteArray_MAUScLcLTOFEventSpacePoint(void *p) {
      delete [] ((::MAUS::TOFEventSpacePoint*)p);
   }
   static void destruct_MAUScLcLTOFEventSpacePoint(void *p) {
      typedef ::MAUS::TOFEventSpacePoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFEventSpacePoint

      namespace MAUS {
//______________________________________________________________________________
void TOFEventDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TOFEventDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TOFEventDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TOFEventDigit::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TOFEventDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TOFEventDigit.
      TClass *R__cl = ::MAUS::TOFEventDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof1", (void*)&_tof1);
      R__insp.InspectMember("MAUS::TOF1DigitArray", (void*)&_tof1, "_tof1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof0", (void*)&_tof0);
      R__insp.InspectMember("MAUS::TOF0DigitArray", (void*)&_tof0, "_tof0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tof2", (void*)&_tof2);
      R__insp.InspectMember("MAUS::TOF2DigitArray", (void*)&_tof2, "_tof2.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTOFEventDigit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFEventDigit : new ::MAUS::TOFEventDigit;
   }
   static void *newArray_MAUScLcLTOFEventDigit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TOFEventDigit[nElements] : new ::MAUS::TOFEventDigit[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTOFEventDigit(void *p) {
      delete ((::MAUS::TOFEventDigit*)p);
   }
   static void deleteArray_MAUScLcLTOFEventDigit(void *p) {
      delete [] ((::MAUS::TOFEventDigit*)p);
   }
   static void destruct_MAUScLcLTOFEventDigit(void *p) {
      typedef ::MAUS::TOFEventDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TOFEventDigit

      namespace MAUS {
//______________________________________________________________________________
void Unknown::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Unknown.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Unknown::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Unknown::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Unknown::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Unknown.
      TClass *R__cl = ::MAUS::Unknown::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V1290", (void*)&_V1290);
      R__insp.InspectMember("MAUS::V1290Array", (void*)&_V1290, "_V1290.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLUnknown(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Unknown : new ::MAUS::Unknown;
   }
   static void *newArray_MAUScLcLUnknown(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Unknown[nElements] : new ::MAUS::Unknown[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLUnknown(void *p) {
      delete ((::MAUS::Unknown*)p);
   }
   static void deleteArray_MAUScLcLUnknown(void *p) {
      delete [] ((::MAUS::Unknown*)p);
   }
   static void destruct_MAUScLcLUnknown(void *p) {
      typedef ::MAUS::Unknown current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Unknown

      namespace MAUS {
//______________________________________________________________________________
void CkovDaq::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::CkovDaq.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::CkovDaq::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::CkovDaq::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void CkovDaq::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::CkovDaq.
      TClass *R__cl = ::MAUS::CkovDaq::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V1731", (void*)&_V1731);
      R__insp.InspectMember("MAUS::V1731Array", (void*)&_V1731, "_V1731.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLCkovDaq(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovDaq : new ::MAUS::CkovDaq;
   }
   static void *newArray_MAUScLcLCkovDaq(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovDaq[nElements] : new ::MAUS::CkovDaq[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLCkovDaq(void *p) {
      delete ((::MAUS::CkovDaq*)p);
   }
   static void deleteArray_MAUScLcLCkovDaq(void *p) {
      delete [] ((::MAUS::CkovDaq*)p);
   }
   static void destruct_MAUScLcLCkovDaq(void *p) {
      typedef ::MAUS::CkovDaq current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::CkovDaq

      namespace MAUS {
//______________________________________________________________________________
void Channels::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Channels.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Channels::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Channels::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Channels::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Channels.
      TClass *R__cl = ::MAUS::Channels::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch27", &_ch27);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch26", &_ch26);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch25", &_ch25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch24", &_ch24);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch23", &_ch23);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch22", &_ch22);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch21", &_ch21);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch20", &_ch20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch29", &_ch29);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch28", &_ch28);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch16", &_ch16);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch31", &_ch31);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch12", &_ch12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch13", &_ch13);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch10", &_ch10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch11", &_ch11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch30", &_ch30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch17", &_ch17);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch14", &_ch14);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch15", &_ch15);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch18", &_ch18);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch19", &_ch19);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch0", &_ch0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch1", &_ch1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch2", &_ch2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch3", &_ch3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch4", &_ch4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch5", &_ch5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch6", &_ch6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch7", &_ch7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch8", &_ch8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch9", &_ch9);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLChannels(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Channels : new ::MAUS::Channels;
   }
   static void *newArray_MAUScLcLChannels(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Channels[nElements] : new ::MAUS::Channels[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLChannels(void *p) {
      delete ((::MAUS::Channels*)p);
   }
   static void deleteArray_MAUScLcLChannels(void *p) {
      delete [] ((::MAUS::Channels*)p);
   }
   static void destruct_MAUScLcLChannels(void *p) {
      typedef ::MAUS::Channels current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Channels

      namespace MAUS {
//______________________________________________________________________________
void TriggerRequest::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::TriggerRequest.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::TriggerRequest::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::TriggerRequest::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void TriggerRequest::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::TriggerRequest.
      TClass *R__cl = ::MAUS::TriggerRequest::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V1290", (void*)&_V1290);
      R__insp.InspectMember("MAUS::V1290Array", (void*)&_V1290, "_V1290.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTriggerRequest(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TriggerRequest : new ::MAUS::TriggerRequest;
   }
   static void *newArray_MAUScLcLTriggerRequest(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::TriggerRequest[nElements] : new ::MAUS::TriggerRequest[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTriggerRequest(void *p) {
      delete ((::MAUS::TriggerRequest*)p);
   }
   static void deleteArray_MAUScLcLTriggerRequest(void *p) {
      delete [] ((::MAUS::TriggerRequest*)p);
   }
   static void destruct_MAUScLcLTriggerRequest(void *p) {
      typedef ::MAUS::TriggerRequest current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::TriggerRequest

      namespace MAUS {
//______________________________________________________________________________
void CkovA::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::CkovA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::CkovA::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::CkovA::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void CkovA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::CkovA.
      TClass *R__cl = ::MAUS::CkovA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min_0", &_position_min_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time_2", &_arrival_time_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time_3", &_arrival_time_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time_0", &_arrival_time_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time_1", &_arrival_time_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_1", &_pulse_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_0", &_pulse_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_3", &_pulse_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_2", &_pulse_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_coincidences", &_coincidences);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min_2", &_position_min_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min_3", &_position_min_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_total_charge", &_total_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min_1", &_position_min_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_number_of_pes", &_number_of_pes);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLCkovA(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovA : new ::MAUS::CkovA;
   }
   static void *newArray_MAUScLcLCkovA(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovA[nElements] : new ::MAUS::CkovA[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLCkovA(void *p) {
      delete ((::MAUS::CkovA*)p);
   }
   static void deleteArray_MAUScLcLCkovA(void *p) {
      delete [] ((::MAUS::CkovA*)p);
   }
   static void destruct_MAUScLcLCkovA(void *p) {
      typedef ::MAUS::CkovA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::CkovA

      namespace MAUS {
//______________________________________________________________________________
void CkovB::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::CkovB.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::CkovB::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::CkovB::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void CkovB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::CkovB.
      TClass *R__cl = ::MAUS::CkovB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time_6", &_arrival_time_6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time_7", &_arrival_time_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time_4", &_arrival_time_4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_arrival_time_5", &_arrival_time_5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_5", &_pulse_5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_4", &_pulse_4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_7", &_pulse_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_6", &_pulse_6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min_6", &_position_min_6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_coincidences", &_coincidences);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_total_charge", &_total_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_part_event_number", &_part_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min_7", &_position_min_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_number_of_pes", &_number_of_pes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min_5", &_position_min_5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_position_min_4", &_position_min_4);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLCkovB(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovB : new ::MAUS::CkovB;
   }
   static void *newArray_MAUScLcLCkovB(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::CkovB[nElements] : new ::MAUS::CkovB[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLCkovB(void *p) {
      delete ((::MAUS::CkovB*)p);
   }
   static void deleteArray_MAUScLcLCkovB(void *p) {
      delete [] ((::MAUS::CkovB*)p);
   }
   static void destruct_MAUScLcLCkovB(void *p) {
      typedef ::MAUS::CkovB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::CkovB

      namespace MAUS {
//______________________________________________________________________________
void Tag::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAUS::Tag.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAUS::Tag::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAUS::Tag::Class(),this);
   }
}

} // namespace MAUS
//______________________________________________________________________________
      namespace MAUS {
void Tag::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAUS::Tag.
      TClass *R__cl = ::MAUS::Tag::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_V1724", (void*)&_V1724);
      R__insp.InspectMember("MAUS::V1724Array", (void*)&_V1724, "_V1724.", false);
}

} // namespace MAUS
namespace ROOT {
   // Wrappers around operator new
   static void *new_MAUScLcLTag(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Tag : new ::MAUS::Tag;
   }
   static void *newArray_MAUScLcLTag(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAUS::Tag[nElements] : new ::MAUS::Tag[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAUScLcLTag(void *p) {
      delete ((::MAUS::Tag*)p);
   }
   static void deleteArray_MAUScLcLTag(void *p) {
      delete [] ((::MAUS::Tag*)p);
   }
   static void destruct_MAUScLcLTag(void *p) {
      typedef ::MAUS::Tag current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MAUS::Tag

namespace ROOT {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "prec_stl/map", 63,
                  typeid(map<string,string>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,string>

namespace ROOT {
   void vectorlEMAUScLcLCkovDaqmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLCkovDaqmUgR_Dictionary();
   static void *new_vectorlEMAUScLcLCkovDaqmUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLCkovDaqmUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLCkovDaqmUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLCkovDaqmUgR(void *p);
   static void destruct_vectorlEMAUScLcLCkovDaqmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::CkovDaq*>*)
   {
      vector<MAUS::CkovDaq*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::CkovDaq*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::CkovDaq*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::CkovDaq*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLCkovDaqmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::CkovDaq*>) );
      instance.SetNew(&new_vectorlEMAUScLcLCkovDaqmUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLCkovDaqmUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLCkovDaqmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLCkovDaqmUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLCkovDaqmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::CkovDaq*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::CkovDaq*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLCkovDaqmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::CkovDaq*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLCkovDaqmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::CkovDaq*> : new vector<MAUS::CkovDaq*>;
   }
   static void *newArray_vectorlEMAUScLcLCkovDaqmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::CkovDaq*>[nElements] : new vector<MAUS::CkovDaq*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLCkovDaqmUgR(void *p) {
      delete ((vector<MAUS::CkovDaq*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLCkovDaqmUgR(void *p) {
      delete [] ((vector<MAUS::CkovDaq*>*)p);
   }
   static void destruct_vectorlEMAUScLcLCkovDaqmUgR(void *p) {
      typedef vector<MAUS::CkovDaq*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::CkovDaq*>

namespace ROOT {
   void vectorlEMAUScLcLCkovDigitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLCkovDigitgR_Dictionary();
   static void *new_vectorlEMAUScLcLCkovDigitgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLCkovDigitgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLCkovDigitgR(void *p);
   static void deleteArray_vectorlEMAUScLcLCkovDigitgR(void *p);
   static void destruct_vectorlEMAUScLcLCkovDigitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::CkovDigit>*)
   {
      vector<MAUS::CkovDigit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::CkovDigit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::CkovDigit>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::CkovDigit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLCkovDigitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::CkovDigit>) );
      instance.SetNew(&new_vectorlEMAUScLcLCkovDigitgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLCkovDigitgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLCkovDigitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLCkovDigitgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLCkovDigitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::CkovDigit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::CkovDigit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLCkovDigitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::CkovDigit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLCkovDigitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::CkovDigit> : new vector<MAUS::CkovDigit>;
   }
   static void *newArray_vectorlEMAUScLcLCkovDigitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::CkovDigit>[nElements] : new vector<MAUS::CkovDigit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLCkovDigitgR(void *p) {
      delete ((vector<MAUS::CkovDigit>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLCkovDigitgR(void *p) {
      delete [] ((vector<MAUS::CkovDigit>*)p);
   }
   static void destruct_vectorlEMAUScLcLCkovDigitgR(void *p) {
      typedef vector<MAUS::CkovDigit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::CkovDigit>

namespace ROOT {
   void vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR_Dictionary();
   static void *new_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(void *p);
   static void deleteArray_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(void *p);
   static void destruct_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::Hit<MAUS::SciFiChannelId> >*)
   {
      vector<MAUS::Hit<MAUS::SciFiChannelId> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::Hit<MAUS::SciFiChannelId> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::Hit<MAUS::SciFiChannelId> >", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::Hit<MAUS::SciFiChannelId> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::Hit<MAUS::SciFiChannelId> >) );
      instance.SetNew(&new_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::Hit<MAUS::SciFiChannelId> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::Hit<MAUS::SciFiChannelId> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::Hit<MAUS::SciFiChannelId> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Hit<MAUS::SciFiChannelId> > : new vector<MAUS::Hit<MAUS::SciFiChannelId> >;
   }
   static void *newArray_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Hit<MAUS::SciFiChannelId> >[nElements] : new vector<MAUS::Hit<MAUS::SciFiChannelId> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(void *p) {
      delete ((vector<MAUS::Hit<MAUS::SciFiChannelId> >*)p);
   }
   static void deleteArray_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(void *p) {
      delete [] ((vector<MAUS::Hit<MAUS::SciFiChannelId> >*)p);
   }
   static void destruct_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgR(void *p) {
      typedef vector<MAUS::Hit<MAUS::SciFiChannelId> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::Hit<MAUS::SciFiChannelId> >

namespace ROOT {
   void vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR_Dictionary();
   static void *new_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(void *p);
   static void deleteArray_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(void *p);
   static void destruct_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >*)
   {
      vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >) );
      instance.SetNew(&new_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> > : new vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >;
   }
   static void *newArray_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >[nElements] : new vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(void *p) {
      delete ((vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >*)p);
   }
   static void deleteArray_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(void *p) {
      delete [] ((vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >*)p);
   }
   static void destruct_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgR(void *p) {
      typedef vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >

namespace ROOT {
   void vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR_Dictionary();
   static void *new_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(void *p);
   static void deleteArray_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(void *p);
   static void destruct_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::Hit<MAUS::TOFChannelId> >*)
   {
      vector<MAUS::Hit<MAUS::TOFChannelId> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::Hit<MAUS::TOFChannelId> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::Hit<MAUS::TOFChannelId> >", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::Hit<MAUS::TOFChannelId> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::Hit<MAUS::TOFChannelId> >) );
      instance.SetNew(&new_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::Hit<MAUS::TOFChannelId> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::Hit<MAUS::TOFChannelId> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::Hit<MAUS::TOFChannelId> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Hit<MAUS::TOFChannelId> > : new vector<MAUS::Hit<MAUS::TOFChannelId> >;
   }
   static void *newArray_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Hit<MAUS::TOFChannelId> >[nElements] : new vector<MAUS::Hit<MAUS::TOFChannelId> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(void *p) {
      delete ((vector<MAUS::Hit<MAUS::TOFChannelId> >*)p);
   }
   static void deleteArray_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(void *p) {
      delete [] ((vector<MAUS::Hit<MAUS::TOFChannelId> >*)p);
   }
   static void destruct_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgR(void *p) {
      typedef vector<MAUS::Hit<MAUS::TOFChannelId> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::Hit<MAUS::TOFChannelId> >

namespace ROOT {
   void vectorlEMAUScLcLKLDaqmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLKLDaqmUgR_Dictionary();
   static void *new_vectorlEMAUScLcLKLDaqmUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLKLDaqmUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLKLDaqmUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLKLDaqmUgR(void *p);
   static void destruct_vectorlEMAUScLcLKLDaqmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::KLDaq*>*)
   {
      vector<MAUS::KLDaq*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::KLDaq*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::KLDaq*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::KLDaq*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLKLDaqmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::KLDaq*>) );
      instance.SetNew(&new_vectorlEMAUScLcLKLDaqmUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLKLDaqmUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLKLDaqmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLKLDaqmUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLKLDaqmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::KLDaq*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::KLDaq*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLKLDaqmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::KLDaq*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLKLDaqmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::KLDaq*> : new vector<MAUS::KLDaq*>;
   }
   static void *newArray_vectorlEMAUScLcLKLDaqmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::KLDaq*>[nElements] : new vector<MAUS::KLDaq*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLKLDaqmUgR(void *p) {
      delete ((vector<MAUS::KLDaq*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLKLDaqmUgR(void *p) {
      delete [] ((vector<MAUS::KLDaq*>*)p);
   }
   static void destruct_vectorlEMAUScLcLKLDaqmUgR(void *p) {
      typedef vector<MAUS::KLDaq*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::KLDaq*>

namespace ROOT {
   void vectorlEMAUScLcLMCEventmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLMCEventmUgR_Dictionary();
   static void *new_vectorlEMAUScLcLMCEventmUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLMCEventmUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLMCEventmUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLMCEventmUgR(void *p);
   static void destruct_vectorlEMAUScLcLMCEventmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::MCEvent*>*)
   {
      vector<MAUS::MCEvent*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::MCEvent*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::MCEvent*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::MCEvent*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLMCEventmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::MCEvent*>) );
      instance.SetNew(&new_vectorlEMAUScLcLMCEventmUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLMCEventmUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLMCEventmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLMCEventmUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLMCEventmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::MCEvent*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::MCEvent*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLMCEventmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::MCEvent*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLMCEventmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::MCEvent*> : new vector<MAUS::MCEvent*>;
   }
   static void *newArray_vectorlEMAUScLcLMCEventmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::MCEvent*>[nElements] : new vector<MAUS::MCEvent*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLMCEventmUgR(void *p) {
      delete ((vector<MAUS::MCEvent*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLMCEventmUgR(void *p) {
      delete [] ((vector<MAUS::MCEvent*>*)p);
   }
   static void destruct_vectorlEMAUScLcLMCEventmUgR(void *p) {
      typedef vector<MAUS::MCEvent*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::MCEvent*>

namespace ROOT {
   void vectorlEMAUScLcLReconEventmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLReconEventmUgR_Dictionary();
   static void *new_vectorlEMAUScLcLReconEventmUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLReconEventmUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLReconEventmUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLReconEventmUgR(void *p);
   static void destruct_vectorlEMAUScLcLReconEventmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::ReconEvent*>*)
   {
      vector<MAUS::ReconEvent*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::ReconEvent*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::ReconEvent*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::ReconEvent*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLReconEventmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::ReconEvent*>) );
      instance.SetNew(&new_vectorlEMAUScLcLReconEventmUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLReconEventmUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLReconEventmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLReconEventmUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLReconEventmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::ReconEvent*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::ReconEvent*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLReconEventmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::ReconEvent*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLReconEventmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::ReconEvent*> : new vector<MAUS::ReconEvent*>;
   }
   static void *newArray_vectorlEMAUScLcLReconEventmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::ReconEvent*>[nElements] : new vector<MAUS::ReconEvent*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLReconEventmUgR(void *p) {
      delete ((vector<MAUS::ReconEvent*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLReconEventmUgR(void *p) {
      delete [] ((vector<MAUS::ReconEvent*>*)p);
   }
   static void destruct_vectorlEMAUScLcLReconEventmUgR(void *p) {
      typedef vector<MAUS::ReconEvent*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::ReconEvent*>

namespace ROOT {
   void vectorlEMAUScLcLStepgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLStepgR_Dictionary();
   static void *new_vectorlEMAUScLcLStepgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLStepgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLStepgR(void *p);
   static void deleteArray_vectorlEMAUScLcLStepgR(void *p);
   static void destruct_vectorlEMAUScLcLStepgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::Step>*)
   {
      vector<MAUS::Step> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::Step>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::Step>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::Step>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLStepgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::Step>) );
      instance.SetNew(&new_vectorlEMAUScLcLStepgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLStepgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLStepgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLStepgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLStepgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::Step> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::Step>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLStepgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::Step>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLStepgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Step> : new vector<MAUS::Step>;
   }
   static void *newArray_vectorlEMAUScLcLStepgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Step>[nElements] : new vector<MAUS::Step>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLStepgR(void *p) {
      delete ((vector<MAUS::Step>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLStepgR(void *p) {
      delete [] ((vector<MAUS::Step>*)p);
   }
   static void destruct_vectorlEMAUScLcLStepgR(void *p) {
      typedef vector<MAUS::Step> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::Step>

namespace ROOT {
   void vectorlEMAUScLcLTOFDaqmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLTOFDaqmUgR_Dictionary();
   static void *new_vectorlEMAUScLcLTOFDaqmUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLTOFDaqmUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLTOFDaqmUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLTOFDaqmUgR(void *p);
   static void destruct_vectorlEMAUScLcLTOFDaqmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::TOFDaq*>*)
   {
      vector<MAUS::TOFDaq*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::TOFDaq*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::TOFDaq*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::TOFDaq*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLTOFDaqmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::TOFDaq*>) );
      instance.SetNew(&new_vectorlEMAUScLcLTOFDaqmUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLTOFDaqmUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLTOFDaqmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLTOFDaqmUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLTOFDaqmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::TOFDaq*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::TOFDaq*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLTOFDaqmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::TOFDaq*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLTOFDaqmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TOFDaq*> : new vector<MAUS::TOFDaq*>;
   }
   static void *newArray_vectorlEMAUScLcLTOFDaqmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TOFDaq*>[nElements] : new vector<MAUS::TOFDaq*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLTOFDaqmUgR(void *p) {
      delete ((vector<MAUS::TOFDaq*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLTOFDaqmUgR(void *p) {
      delete [] ((vector<MAUS::TOFDaq*>*)p);
   }
   static void destruct_vectorlEMAUScLcLTOFDaqmUgR(void *p) {
      typedef vector<MAUS::TOFDaq*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::TOFDaq*>

namespace ROOT {
   void vectorlEMAUScLcLTOFDigitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLTOFDigitgR_Dictionary();
   static void *new_vectorlEMAUScLcLTOFDigitgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLTOFDigitgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLTOFDigitgR(void *p);
   static void deleteArray_vectorlEMAUScLcLTOFDigitgR(void *p);
   static void destruct_vectorlEMAUScLcLTOFDigitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::TOFDigit>*)
   {
      vector<MAUS::TOFDigit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::TOFDigit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::TOFDigit>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::TOFDigit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLTOFDigitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::TOFDigit>) );
      instance.SetNew(&new_vectorlEMAUScLcLTOFDigitgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLTOFDigitgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLTOFDigitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLTOFDigitgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLTOFDigitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::TOFDigit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::TOFDigit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLTOFDigitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::TOFDigit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLTOFDigitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TOFDigit> : new vector<MAUS::TOFDigit>;
   }
   static void *newArray_vectorlEMAUScLcLTOFDigitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TOFDigit>[nElements] : new vector<MAUS::TOFDigit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLTOFDigitgR(void *p) {
      delete ((vector<MAUS::TOFDigit>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLTOFDigitgR(void *p) {
      delete [] ((vector<MAUS::TOFDigit>*)p);
   }
   static void destruct_vectorlEMAUScLcLTOFDigitgR(void *p) {
      typedef vector<MAUS::TOFDigit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::TOFDigit>

namespace ROOT {
   void vectorlEMAUScLcLTOFSlabHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLTOFSlabHitgR_Dictionary();
   static void *new_vectorlEMAUScLcLTOFSlabHitgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLTOFSlabHitgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLTOFSlabHitgR(void *p);
   static void deleteArray_vectorlEMAUScLcLTOFSlabHitgR(void *p);
   static void destruct_vectorlEMAUScLcLTOFSlabHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::TOFSlabHit>*)
   {
      vector<MAUS::TOFSlabHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::TOFSlabHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::TOFSlabHit>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::TOFSlabHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLTOFSlabHitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::TOFSlabHit>) );
      instance.SetNew(&new_vectorlEMAUScLcLTOFSlabHitgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLTOFSlabHitgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLTOFSlabHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLTOFSlabHitgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLTOFSlabHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::TOFSlabHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::TOFSlabHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLTOFSlabHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::TOFSlabHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLTOFSlabHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TOFSlabHit> : new vector<MAUS::TOFSlabHit>;
   }
   static void *newArray_vectorlEMAUScLcLTOFSlabHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TOFSlabHit>[nElements] : new vector<MAUS::TOFSlabHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLTOFSlabHitgR(void *p) {
      delete ((vector<MAUS::TOFSlabHit>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLTOFSlabHitgR(void *p) {
      delete [] ((vector<MAUS::TOFSlabHit>*)p);
   }
   static void destruct_vectorlEMAUScLcLTOFSlabHitgR(void *p) {
      typedef vector<MAUS::TOFSlabHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::TOFSlabHit>

namespace ROOT {
   void vectorlEMAUScLcLTOFSpacePointgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLTOFSpacePointgR_Dictionary();
   static void *new_vectorlEMAUScLcLTOFSpacePointgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLTOFSpacePointgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLTOFSpacePointgR(void *p);
   static void deleteArray_vectorlEMAUScLcLTOFSpacePointgR(void *p);
   static void destruct_vectorlEMAUScLcLTOFSpacePointgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::TOFSpacePoint>*)
   {
      vector<MAUS::TOFSpacePoint> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::TOFSpacePoint>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::TOFSpacePoint>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::TOFSpacePoint>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLTOFSpacePointgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::TOFSpacePoint>) );
      instance.SetNew(&new_vectorlEMAUScLcLTOFSpacePointgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLTOFSpacePointgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLTOFSpacePointgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLTOFSpacePointgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLTOFSpacePointgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::TOFSpacePoint> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::TOFSpacePoint>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLTOFSpacePointgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::TOFSpacePoint>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLTOFSpacePointgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TOFSpacePoint> : new vector<MAUS::TOFSpacePoint>;
   }
   static void *newArray_vectorlEMAUScLcLTOFSpacePointgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TOFSpacePoint>[nElements] : new vector<MAUS::TOFSpacePoint>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLTOFSpacePointgR(void *p) {
      delete ((vector<MAUS::TOFSpacePoint>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLTOFSpacePointgR(void *p) {
      delete [] ((vector<MAUS::TOFSpacePoint>*)p);
   }
   static void destruct_vectorlEMAUScLcLTOFSpacePointgR(void *p) {
      typedef vector<MAUS::TOFSpacePoint> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::TOFSpacePoint>

namespace ROOT {
   void vectorlEMAUScLcLTagmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLTagmUgR_Dictionary();
   static void *new_vectorlEMAUScLcLTagmUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLTagmUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLTagmUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLTagmUgR(void *p);
   static void destruct_vectorlEMAUScLcLTagmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::Tag*>*)
   {
      vector<MAUS::Tag*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::Tag*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::Tag*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::Tag*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLTagmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::Tag*>) );
      instance.SetNew(&new_vectorlEMAUScLcLTagmUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLTagmUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLTagmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLTagmUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLTagmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::Tag*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::Tag*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLTagmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::Tag*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLTagmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Tag*> : new vector<MAUS::Tag*>;
   }
   static void *newArray_vectorlEMAUScLcLTagmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Tag*>[nElements] : new vector<MAUS::Tag*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLTagmUgR(void *p) {
      delete ((vector<MAUS::Tag*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLTagmUgR(void *p) {
      delete [] ((vector<MAUS::Tag*>*)p);
   }
   static void destruct_vectorlEMAUScLcLTagmUgR(void *p) {
      typedef vector<MAUS::Tag*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::Tag*>

namespace ROOT {
   void vectorlEMAUScLcLTrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLTrackgR_Dictionary();
   static void *new_vectorlEMAUScLcLTrackgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLTrackgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLTrackgR(void *p);
   static void deleteArray_vectorlEMAUScLcLTrackgR(void *p);
   static void destruct_vectorlEMAUScLcLTrackgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::Track>*)
   {
      vector<MAUS::Track> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::Track>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::Track>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::Track>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLTrackgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::Track>) );
      instance.SetNew(&new_vectorlEMAUScLcLTrackgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLTrackgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLTrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLTrackgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLTrackgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::Track> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::Track>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLTrackgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::Track>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLTrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Track> : new vector<MAUS::Track>;
   }
   static void *newArray_vectorlEMAUScLcLTrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Track>[nElements] : new vector<MAUS::Track>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLTrackgR(void *p) {
      delete ((vector<MAUS::Track>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLTrackgR(void *p) {
      delete [] ((vector<MAUS::Track>*)p);
   }
   static void destruct_vectorlEMAUScLcLTrackgR(void *p) {
      typedef vector<MAUS::Track> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::Track>

namespace ROOT {
   void vectorlEMAUScLcLTriggermUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLTriggermUgR_Dictionary();
   static void *new_vectorlEMAUScLcLTriggermUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLTriggermUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLTriggermUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLTriggermUgR(void *p);
   static void destruct_vectorlEMAUScLcLTriggermUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::Trigger*>*)
   {
      vector<MAUS::Trigger*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::Trigger*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::Trigger*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::Trigger*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLTriggermUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::Trigger*>) );
      instance.SetNew(&new_vectorlEMAUScLcLTriggermUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLTriggermUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLTriggermUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLTriggermUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLTriggermUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::Trigger*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::Trigger*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLTriggermUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::Trigger*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLTriggermUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Trigger*> : new vector<MAUS::Trigger*>;
   }
   static void *newArray_vectorlEMAUScLcLTriggermUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Trigger*>[nElements] : new vector<MAUS::Trigger*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLTriggermUgR(void *p) {
      delete ((vector<MAUS::Trigger*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLTriggermUgR(void *p) {
      delete [] ((vector<MAUS::Trigger*>*)p);
   }
   static void destruct_vectorlEMAUScLcLTriggermUgR(void *p) {
      typedef vector<MAUS::Trigger*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::Trigger*>

namespace ROOT {
   void vectorlEMAUScLcLTriggerRequestmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLTriggerRequestmUgR_Dictionary();
   static void *new_vectorlEMAUScLcLTriggerRequestmUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLTriggerRequestmUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLTriggerRequestmUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLTriggerRequestmUgR(void *p);
   static void destruct_vectorlEMAUScLcLTriggerRequestmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::TriggerRequest*>*)
   {
      vector<MAUS::TriggerRequest*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::TriggerRequest*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::TriggerRequest*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::TriggerRequest*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLTriggerRequestmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::TriggerRequest*>) );
      instance.SetNew(&new_vectorlEMAUScLcLTriggerRequestmUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLTriggerRequestmUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLTriggerRequestmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLTriggerRequestmUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLTriggerRequestmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::TriggerRequest*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::TriggerRequest*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLTriggerRequestmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::TriggerRequest*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLTriggerRequestmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TriggerRequest*> : new vector<MAUS::TriggerRequest*>;
   }
   static void *newArray_vectorlEMAUScLcLTriggerRequestmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::TriggerRequest*>[nElements] : new vector<MAUS::TriggerRequest*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLTriggerRequestmUgR(void *p) {
      delete ((vector<MAUS::TriggerRequest*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLTriggerRequestmUgR(void *p) {
      delete [] ((vector<MAUS::TriggerRequest*>*)p);
   }
   static void destruct_vectorlEMAUScLcLTriggerRequestmUgR(void *p) {
      typedef vector<MAUS::TriggerRequest*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::TriggerRequest*>

namespace ROOT {
   void vectorlEMAUScLcLUnknownmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLUnknownmUgR_Dictionary();
   static void *new_vectorlEMAUScLcLUnknownmUgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLUnknownmUgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLUnknownmUgR(void *p);
   static void deleteArray_vectorlEMAUScLcLUnknownmUgR(void *p);
   static void destruct_vectorlEMAUScLcLUnknownmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::Unknown*>*)
   {
      vector<MAUS::Unknown*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::Unknown*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::Unknown*>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::Unknown*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLUnknownmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::Unknown*>) );
      instance.SetNew(&new_vectorlEMAUScLcLUnknownmUgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLUnknownmUgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLUnknownmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLUnknownmUgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLUnknownmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::Unknown*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::Unknown*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLUnknownmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::Unknown*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLUnknownmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Unknown*> : new vector<MAUS::Unknown*>;
   }
   static void *newArray_vectorlEMAUScLcLUnknownmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::Unknown*>[nElements] : new vector<MAUS::Unknown*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLUnknownmUgR(void *p) {
      delete ((vector<MAUS::Unknown*>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLUnknownmUgR(void *p) {
      delete [] ((vector<MAUS::Unknown*>*)p);
   }
   static void destruct_vectorlEMAUScLcLUnknownmUgR(void *p) {
      typedef vector<MAUS::Unknown*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::Unknown*>

namespace ROOT {
   void vectorlEMAUScLcLV1290gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLV1290gR_Dictionary();
   static void *new_vectorlEMAUScLcLV1290gR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLV1290gR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLV1290gR(void *p);
   static void deleteArray_vectorlEMAUScLcLV1290gR(void *p);
   static void destruct_vectorlEMAUScLcLV1290gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::V1290>*)
   {
      vector<MAUS::V1290> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::V1290>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::V1290>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::V1290>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLV1290gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::V1290>) );
      instance.SetNew(&new_vectorlEMAUScLcLV1290gR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLV1290gR);
      instance.SetDelete(&delete_vectorlEMAUScLcLV1290gR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLV1290gR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLV1290gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::V1290> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::V1290>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLV1290gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::V1290>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLV1290gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::V1290> : new vector<MAUS::V1290>;
   }
   static void *newArray_vectorlEMAUScLcLV1290gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::V1290>[nElements] : new vector<MAUS::V1290>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLV1290gR(void *p) {
      delete ((vector<MAUS::V1290>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLV1290gR(void *p) {
      delete [] ((vector<MAUS::V1290>*)p);
   }
   static void destruct_vectorlEMAUScLcLV1290gR(void *p) {
      typedef vector<MAUS::V1290> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::V1290>

namespace ROOT {
   void vectorlEMAUScLcLV1724gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLV1724gR_Dictionary();
   static void *new_vectorlEMAUScLcLV1724gR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLV1724gR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLV1724gR(void *p);
   static void deleteArray_vectorlEMAUScLcLV1724gR(void *p);
   static void destruct_vectorlEMAUScLcLV1724gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::V1724>*)
   {
      vector<MAUS::V1724> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::V1724>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::V1724>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::V1724>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLV1724gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::V1724>) );
      instance.SetNew(&new_vectorlEMAUScLcLV1724gR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLV1724gR);
      instance.SetDelete(&delete_vectorlEMAUScLcLV1724gR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLV1724gR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLV1724gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::V1724> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::V1724>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLV1724gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::V1724>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLV1724gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::V1724> : new vector<MAUS::V1724>;
   }
   static void *newArray_vectorlEMAUScLcLV1724gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::V1724>[nElements] : new vector<MAUS::V1724>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLV1724gR(void *p) {
      delete ((vector<MAUS::V1724>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLV1724gR(void *p) {
      delete [] ((vector<MAUS::V1724>*)p);
   }
   static void destruct_vectorlEMAUScLcLV1724gR(void *p) {
      typedef vector<MAUS::V1724> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::V1724>

namespace ROOT {
   void vectorlEMAUScLcLV1731gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLV1731gR_Dictionary();
   static void *new_vectorlEMAUScLcLV1731gR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLV1731gR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLV1731gR(void *p);
   static void deleteArray_vectorlEMAUScLcLV1731gR(void *p);
   static void destruct_vectorlEMAUScLcLV1731gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::V1731>*)
   {
      vector<MAUS::V1731> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::V1731>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::V1731>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::V1731>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLV1731gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::V1731>) );
      instance.SetNew(&new_vectorlEMAUScLcLV1731gR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLV1731gR);
      instance.SetDelete(&delete_vectorlEMAUScLcLV1731gR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLV1731gR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLV1731gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::V1731> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::V1731>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLV1731gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::V1731>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLV1731gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::V1731> : new vector<MAUS::V1731>;
   }
   static void *newArray_vectorlEMAUScLcLV1731gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::V1731>[nElements] : new vector<MAUS::V1731>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLV1731gR(void *p) {
      delete ((vector<MAUS::V1731>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLV1731gR(void *p) {
      delete [] ((vector<MAUS::V1731>*)p);
   }
   static void destruct_vectorlEMAUScLcLV1731gR(void *p) {
      typedef vector<MAUS::V1731> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::V1731>

namespace ROOT {
   void vectorlEMAUScLcLVirtualHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMAUScLcLVirtualHitgR_Dictionary();
   static void *new_vectorlEMAUScLcLVirtualHitgR(void *p = 0);
   static void *newArray_vectorlEMAUScLcLVirtualHitgR(Long_t size, void *p);
   static void delete_vectorlEMAUScLcLVirtualHitgR(void *p);
   static void deleteArray_vectorlEMAUScLcLVirtualHitgR(void *p);
   static void destruct_vectorlEMAUScLcLVirtualHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<MAUS::VirtualHit>*)
   {
      vector<MAUS::VirtualHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MAUS::VirtualHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MAUS::VirtualHit>", -2, "prec_stl/vector", 49,
                  typeid(vector<MAUS::VirtualHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEMAUScLcLVirtualHitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MAUS::VirtualHit>) );
      instance.SetNew(&new_vectorlEMAUScLcLVirtualHitgR);
      instance.SetNewArray(&newArray_vectorlEMAUScLcLVirtualHitgR);
      instance.SetDelete(&delete_vectorlEMAUScLcLVirtualHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMAUScLcLVirtualHitgR);
      instance.SetDestructor(&destruct_vectorlEMAUScLcLVirtualHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<MAUS::VirtualHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MAUS::VirtualHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMAUScLcLVirtualHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<MAUS::VirtualHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEMAUScLcLVirtualHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::VirtualHit> : new vector<MAUS::VirtualHit>;
   }
   static void *newArray_vectorlEMAUScLcLVirtualHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MAUS::VirtualHit>[nElements] : new vector<MAUS::VirtualHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMAUScLcLVirtualHitgR(void *p) {
      delete ((vector<MAUS::VirtualHit>*)p);
   }
   static void deleteArray_vectorlEMAUScLcLVirtualHitgR(void *p) {
      delete [] ((vector<MAUS::VirtualHit>*)p);
   }
   static void destruct_vectorlEMAUScLcLVirtualHitgR(void *p) {
      typedef vector<MAUS::VirtualHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<MAUS::VirtualHit>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* /home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure//MausDataStructure.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMausDataStructure();

extern "C" void G__set_cpp_environmentMausDataStructure() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Primary.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/SciFiEvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Pmt0.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/SpecialVirtualChannelId.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Data.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/KLEvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Spill.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFEventSpacePoint.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Step.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/V830.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Trigger.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Channels.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/VirtualHit.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/V1731.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/ThreeVector.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFEventSlabHit.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/CkovDaq.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Track.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFChannelId.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/EMRSpillData.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/ReconEvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/CkovEvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFDaq.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/SciFiChannelId.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TriggerRequest.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFSlabHit.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/KLDaq.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/CkovB.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/CkovDigit.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/GlobalEvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Tag.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Unknown.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/EMREvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/V1290.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Hit.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Pmt1.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFEventDigit.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFDigit.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/CkovA.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFEvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/Scalars.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/MCEvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TriggerEvent.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/DAQData.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/V1724.hh");
  G__add_compiledheader("/home/cr67/MAUS/maus_merge/src/common_cpp/DataStructure/TOFSpacePoint.hh");
  G__cpp_reset_tagtableMausDataStructure();
}
#include <new>
extern "C" int G__cpp_dllrevMausDataStructure() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CLHEP::Hep3Vector */
static int G__MausDataStructure_166_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLHEP::Hep3Vector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLHEP::Hep3Vector(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) CLHEP::Hep3Vector(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLHEP::Hep3Vector((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) CLHEP::Hep3Vector((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLHEP::Hep3Vector((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) CLHEP::Hep3Vector((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new CLHEP::Hep3Vector[n];
       } else {
         p = new((void*) gvp) CLHEP::Hep3Vector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new CLHEP::Hep3Vector;
       } else {
         p = new((void*) gvp) CLHEP::Hep3Vector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLHEP::Hep3Vector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CLHEP::Hep3Vector(*(CLHEP::Hep3Vector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) CLHEP::Hep3Vector(*(CLHEP::Hep3Vector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator()((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setZ((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->set((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->cosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->cos2Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setMag((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setPerp((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setCylTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->perp2(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->perp(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator=(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator==(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator!=(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isNear(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isNear(*(CLHEP::Hep3Vector*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->howNear(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->deltaR(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator+=(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator-=(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator-();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->unit();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->orthogonal();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->dot(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->cross(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->angle(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->pseudoRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setCylEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotateX((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotateY((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotateZ((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotateUz(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate((double) G__double(libp->para[0]), *(CLHEP::Hep3Vector*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->operator*=(*(CLHEP::HepRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->transform(*(CLHEP::HepRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRThetaPhi((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setREtaPhi((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRhoPhiZ((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRhoPhiTheta((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRhoPhiEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->r());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getRho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->getEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLHEP::Hep3Vector*) G__getstructoffset())->setRho((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->compare(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator>(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator<(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator>=(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->operator<=(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->diff2(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) CLHEP::Hep3Vector::setTolerance((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) CLHEP::Hep3Vector::getTolerance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isParallel(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isParallel(*(CLHEP::Hep3Vector*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isOrthogonal(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CLHEP::Hep3Vector*) G__getstructoffset())->isOrthogonal(*(CLHEP::Hep3Vector*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->howParallel(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->howOrthogonal(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->gamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->coLinearRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->angle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->theta(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->cosTheta(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->cos2Theta(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->project();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->project(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->perpPart();
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector* pobj;
         const CLHEP::Hep3Vector xobj = ((const CLHEP::Hep3Vector*) G__getstructoffset())->perpPart(*(CLHEP::Hep3Vector*) libp->para[0].ref);
         pobj = new CLHEP::Hep3Vector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->rapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->rapidity(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->eta(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->polarAngle(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->deltaPhi(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->azimAngle(*(CLHEP::Hep3Vector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->polarAngle(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CLHEP::Hep3Vector*) G__getstructoffset())->azimAngle(*(CLHEP::Hep3Vector*) libp->para[0].ref, *(CLHEP::Hep3Vector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate(*(CLHEP::Hep3Vector*) libp->para[0].ref, (double) G__double(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate(*(CLHEP::HepAxisAngle*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate(*(CLHEP::HepEulerAngles*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_166_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CLHEP::Hep3Vector& obj = ((CLHEP::Hep3Vector*) G__getstructoffset())->rotate((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CLHEP::Hep3Vector G__TCLHEPcLcLHep3Vector;
static int G__MausDataStructure_166_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CLHEP::Hep3Vector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CLHEP::Hep3Vector*) (soff+(sizeof(CLHEP::Hep3Vector)*i)))->~G__TCLHEPcLcLHep3Vector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CLHEP::Hep3Vector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CLHEP::Hep3Vector*) (soff))->~G__TCLHEPcLcLHep3Vector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Primary */
static int G__MausDataStructure_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Primary* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Primary[n];
     } else {
       p = new((void*) gvp) MAUS::Primary[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Primary;
     } else {
       p = new((void*) gvp) MAUS::Primary;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Primary* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Primary(*(MAUS::Primary*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Primary(*(MAUS::Primary*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Primary& obj = ((MAUS::Primary*) G__getstructoffset())->operator=(*(MAUS::Primary*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Primary*) G__getstructoffset())->GetParticleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->SetParticleId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Primary*) G__getstructoffset())->GetRandomSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->SetRandomSeed((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Primary*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->SetEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Primary*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Primary*) G__getstructoffset())->GetPosition();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->SetPosition(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Primary*) G__getstructoffset())->GetMomentum();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->SetMomentum(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Primary::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Primary::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Primary::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Primary::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Primary*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Primary*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Primary::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Primary::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Primary::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Primary::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Primary G__TMAUScLcLPrimary;
static int G__MausDataStructure_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Primary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Primary*) (soff+(sizeof(MAUS::Primary)*i)))->~G__TMAUScLcLPrimary();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Primary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Primary*) (soff))->~G__TMAUScLcLPrimary();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::SciFiEvent */
static int G__MausDataStructure_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::SciFiEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::SciFiEvent[n];
     } else {
       p = new((void*) gvp) MAUS::SciFiEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::SciFiEvent;
     } else {
       p = new((void*) gvp) MAUS::SciFiEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::SciFiEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::SciFiEvent(*(MAUS::SciFiEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::SciFiEvent(*(MAUS::SciFiEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::SciFiEvent& obj = ((MAUS::SciFiEvent*) G__getstructoffset())->operator=(*(MAUS::SciFiEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::SciFiEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SciFiEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::SciFiEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::SciFiEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::SciFiEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SciFiEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::SciFiEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SciFiEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::SciFiEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::SciFiEvent G__TMAUScLcLSciFiEvent;
static int G__MausDataStructure_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::SciFiEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::SciFiEvent*) (soff+(sizeof(MAUS::SciFiEvent)*i)))->~G__TMAUScLcLSciFiEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::SciFiEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::SciFiEvent*) (soff))->~G__TMAUScLcLSciFiEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Pmt0 */
static int G__MausDataStructure_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Pmt0* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Pmt0[n];
     } else {
       p = new((void*) gvp) MAUS::Pmt0[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Pmt0;
     } else {
       p = new((void*) gvp) MAUS::Pmt0;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Pmt0* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Pmt0(*(MAUS::Pmt0*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Pmt0(*(MAUS::Pmt0*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Pmt0& obj = ((MAUS::Pmt0*) G__getstructoffset())->operator=(*(MAUS::Pmt0*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Pmt0*) G__getstructoffset())->GetRawTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->SetRawTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Pmt0*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->SetCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Pmt0*) G__getstructoffset())->GetLeadingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->SetLeadingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Pmt0*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::Pmt0*) G__getstructoffset())->GetTofKey();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->SetTofKey(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Pmt0*) G__getstructoffset())->GetTriggerRequestLeadingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->SetTriggerRequestLeadingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Pmt0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Pmt0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Pmt0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Pmt0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Pmt0*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Pmt0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Pmt0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Pmt0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_171_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Pmt0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Pmt0 G__TMAUScLcLPmt0;
static int G__MausDataStructure_171_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Pmt0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Pmt0*) (soff+(sizeof(MAUS::Pmt0)*i)))->~G__TMAUScLcLPmt0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Pmt0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Pmt0*) (soff))->~G__TMAUScLcLPmt0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::SpecialVirtualChannelId */
static int G__MausDataStructure_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::SpecialVirtualChannelId* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::SpecialVirtualChannelId[n];
     } else {
       p = new((void*) gvp) MAUS::SpecialVirtualChannelId[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::SpecialVirtualChannelId;
     } else {
       p = new((void*) gvp) MAUS::SpecialVirtualChannelId;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::SpecialVirtualChannelId* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::SpecialVirtualChannelId(*(MAUS::SpecialVirtualChannelId*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::SpecialVirtualChannelId(*(MAUS::SpecialVirtualChannelId*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::SpecialVirtualChannelId& obj = ((MAUS::SpecialVirtualChannelId*) G__getstructoffset())->operator=(*(MAUS::SpecialVirtualChannelId*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::SpecialVirtualChannelId*) G__getstructoffset())->GetStation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SpecialVirtualChannelId*) G__getstructoffset())->SetStation((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::SpecialVirtualChannelId::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SpecialVirtualChannelId::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::SpecialVirtualChannelId::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::SpecialVirtualChannelId::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::SpecialVirtualChannelId*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SpecialVirtualChannelId*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SpecialVirtualChannelId*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SpecialVirtualChannelId*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SpecialVirtualChannelId::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::SpecialVirtualChannelId::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SpecialVirtualChannelId::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::SpecialVirtualChannelId::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::SpecialVirtualChannelId G__TMAUScLcLSpecialVirtualChannelId;
static int G__MausDataStructure_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::SpecialVirtualChannelId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::SpecialVirtualChannelId*) (soff+(sizeof(MAUS::SpecialVirtualChannelId)*i)))->~G__TMAUScLcLSpecialVirtualChannelId();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::SpecialVirtualChannelId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::SpecialVirtualChannelId*) (soff))->~G__TMAUScLcLSpecialVirtualChannelId();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::V1724 */
static int G__MausDataStructure_408_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::V1724* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::V1724[n];
     } else {
       p = new((void*) gvp) MAUS::V1724[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::V1724;
     } else {
       p = new((void*) gvp) MAUS::V1724;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::V1724* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::V1724(*(MAUS::V1724*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::V1724(*(MAUS::V1724*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1724& obj = ((MAUS::V1724*) G__getstructoffset())->operator=(*(MAUS::V1724*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetLdcId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetLdcId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetChargeMm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetChargeMm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetEquipType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetEquipType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::V1724*) G__getstructoffset())->GetDetector();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetDetector(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetPhysEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetPhysEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetChargePm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetChargePm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::V1724*) G__getstructoffset())->GetChannelKey();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetChannelKey(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetTriggerTimeTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetTriggerTimeTag((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetTimeStamp((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetPedestal((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetGeo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetGeo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetPositionMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetPositionMax((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1724*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->SetChannel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::V1724::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1724::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::V1724::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::V1724::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::V1724*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1724*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1724::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::V1724::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1724::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_408_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::V1724::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::V1724 G__TMAUScLcLV1724;
static int G__MausDataStructure_408_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::V1724*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::V1724*) (soff+(sizeof(MAUS::V1724)*i)))->~G__TMAUScLcLV1724();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::V1724*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::V1724*) (soff))->~G__TMAUScLcLV1724();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::KLDaq */
static int G__MausDataStructure_413_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::KLDaq* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::KLDaq[n];
     } else {
       p = new((void*) gvp) MAUS::KLDaq[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::KLDaq;
     } else {
       p = new((void*) gvp) MAUS::KLDaq;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLDaq));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::KLDaq* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::KLDaq(*(MAUS::KLDaq*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::KLDaq(*(MAUS::KLDaq*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLDaq));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::KLDaq& obj = ((MAUS::KLDaq*) G__getstructoffset())->operator=(*(MAUS::KLDaq*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1724Array* pobj;
         const MAUS::V1724Array xobj = ((const MAUS::KLDaq*) G__getstructoffset())->GetV1724Array();
         pobj = new MAUS::V1724Array(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1724* pobj;
         const MAUS::V1724 xobj = ((const MAUS::KLDaq*) G__getstructoffset())->GetV1724ArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::V1724(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::KLDaq*) G__getstructoffset())->GetV1724ArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::KLDaq*) G__getstructoffset())->SetV1724Array(*((MAUS::V1724Array*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::KLDaq::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::KLDaq::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::KLDaq::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::KLDaq::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::KLDaq*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::KLDaq*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::KLDaq*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::KLDaq*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::KLDaq::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::KLDaq::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::KLDaq::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_413_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::KLDaq::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::KLDaq G__TMAUScLcLKLDaq;
static int G__MausDataStructure_413_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::KLDaq*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::KLDaq*) (soff+(sizeof(MAUS::KLDaq)*i)))->~G__TMAUScLcLKLDaq();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::KLDaq*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::KLDaq*) (soff))->~G__TMAUScLcLKLDaq();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::V1290 */
static int G__MausDataStructure_414_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::V1290* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::V1290[n];
     } else {
       p = new((void*) gvp) MAUS::V1290[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::V1290;
     } else {
       p = new((void*) gvp) MAUS::V1290;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::V1290* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::V1290(*(MAUS::V1290*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::V1290(*(MAUS::V1290*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290& obj = ((MAUS::V1290*) G__getstructoffset())->operator=(*(MAUS::V1290*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetBunchId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetBunchId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetLdcId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetLdcId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetEquipType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetEquipType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetPhysEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetPhysEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetTrailingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetTrailingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::V1290*) G__getstructoffset())->GetChannelKey();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetChannelKey(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetLeadingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetLeadingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetTriggerTimeTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetTriggerTimeTag((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetTimeStamp((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::V1290*) G__getstructoffset())->GetDetector();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetDetector(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetGeo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetGeo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1290*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->SetChannel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::V1290::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1290::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::V1290::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::V1290::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::V1290*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1290*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1290::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::V1290::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1290::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_414_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::V1290::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::V1290 G__TMAUScLcLV1290;
static int G__MausDataStructure_414_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::V1290*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::V1290*) (soff+(sizeof(MAUS::V1290)*i)))->~G__TMAUScLcLV1290();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::V1290*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::V1290*) (soff))->~G__TMAUScLcLV1290();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Trigger */
static int G__MausDataStructure_419_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Trigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Trigger[n];
     } else {
       p = new((void*) gvp) MAUS::Trigger[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Trigger;
     } else {
       p = new((void*) gvp) MAUS::Trigger;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Trigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Trigger(*(MAUS::Trigger*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Trigger(*(MAUS::Trigger*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Trigger& obj = ((MAUS::Trigger*) G__getstructoffset())->operator=(*(MAUS::Trigger*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290Array* pobj;
         const MAUS::V1290Array xobj = ((const MAUS::Trigger*) G__getstructoffset())->GetV1290Array();
         pobj = new MAUS::V1290Array(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290* pobj;
         const MAUS::V1290 xobj = ((const MAUS::Trigger*) G__getstructoffset())->GetV1290ArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::V1290(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::Trigger*) G__getstructoffset())->GetV1290ArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Trigger*) G__getstructoffset())->SetV1290Array(*((MAUS::V1290Array*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Trigger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Trigger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Trigger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Trigger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Trigger*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Trigger*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Trigger*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Trigger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Trigger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Trigger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Trigger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_419_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Trigger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Trigger G__TMAUScLcLTrigger;
static int G__MausDataStructure_419_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Trigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Trigger*) (soff+(sizeof(MAUS::Trigger)*i)))->~G__TMAUScLcLTrigger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Trigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Trigger*) (soff))->~G__TMAUScLcLTrigger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFDaq */
static int G__MausDataStructure_420_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFDaq* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFDaq[n];
     } else {
       p = new((void*) gvp) MAUS::TOFDaq[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFDaq;
     } else {
       p = new((void*) gvp) MAUS::TOFDaq;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFDaq* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFDaq(*(MAUS::TOFDaq*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFDaq(*(MAUS::TOFDaq*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFDaq& obj = ((MAUS::TOFDaq*) G__getstructoffset())->operator=(*(MAUS::TOFDaq*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1724Array* pobj;
         const MAUS::V1724Array xobj = ((const MAUS::TOFDaq*) G__getstructoffset())->GetV1724Array();
         pobj = new MAUS::V1724Array(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1724* pobj;
         const MAUS::V1724 xobj = ((const MAUS::TOFDaq*) G__getstructoffset())->GetV1724ArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::V1724(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFDaq*) G__getstructoffset())->GetV1724ArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDaq*) G__getstructoffset())->SetV1724Array(*((MAUS::V1724Array*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290Array* pobj;
         const MAUS::V1290Array xobj = ((const MAUS::TOFDaq*) G__getstructoffset())->GetV1290Array();
         pobj = new MAUS::V1290Array(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290* pobj;
         const MAUS::V1290 xobj = ((const MAUS::TOFDaq*) G__getstructoffset())->GetV1290ArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::V1290(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFDaq*) G__getstructoffset())->GetV1290ArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDaq*) G__getstructoffset())->SetV1290Array(*((MAUS::V1290Array*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFDaq::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFDaq::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFDaq::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFDaq::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFDaq*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDaq*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDaq*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDaq*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFDaq::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFDaq::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFDaq::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_420_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFDaq::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFDaq G__TMAUScLcLTOFDaq;
static int G__MausDataStructure_420_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFDaq*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFDaq*) (soff+(sizeof(MAUS::TOFDaq)*i)))->~G__TMAUScLcLTOFDaq();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFDaq*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFDaq*) (soff))->~G__TMAUScLcLTOFDaq();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Channels */
static int G__MausDataStructure_421_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Channels* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Channels[n];
     } else {
       p = new((void*) gvp) MAUS::Channels[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Channels;
     } else {
       p = new((void*) gvp) MAUS::Channels;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Channels* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Channels(*(MAUS::Channels*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Channels(*(MAUS::Channels*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Channels& obj = ((MAUS::Channels*) G__getstructoffset())->operator=(*(MAUS::Channels*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh27());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh27((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh26());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh26((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh25((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh24());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh24((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh23());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh23((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh22());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh22((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh21());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh21((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh20((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh29());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh29((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh28());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh28((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh16());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh16((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh31());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh31((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh12());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh12((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh13());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh13((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh10((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh11());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh11((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh30((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh17());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh17((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh14());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh14((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh15());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh15((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh18());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh18((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh19());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh19((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh3((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh4((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh5((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh6());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh6((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh7());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh7((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh8());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh8((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Channels*) G__getstructoffset())->GetCh9());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->SetCh9((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Channels::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Channels::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Channels::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Channels::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Channels*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Channels*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Channels::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Channels::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Channels::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_421_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Channels::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Channels G__TMAUScLcLChannels;
static int G__MausDataStructure_421_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Channels*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Channels*) (soff+(sizeof(MAUS::Channels)*i)))->~G__TMAUScLcLChannels();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Channels*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Channels*) (soff))->~G__TMAUScLcLChannels();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::V830 */
static int G__MausDataStructure_422_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::V830* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::V830[n];
     } else {
       p = new((void*) gvp) MAUS::V830[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::V830;
     } else {
       p = new((void*) gvp) MAUS::V830;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::V830* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::V830(*(MAUS::V830*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::V830(*(MAUS::V830*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V830& obj = ((MAUS::V830*) G__getstructoffset())->operator=(*(MAUS::V830*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V830*) G__getstructoffset())->GetLdcId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->SetLdcId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V830*) G__getstructoffset())->GetEquipType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->SetEquipType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Channels* pobj;
         const MAUS::Channels xobj = ((const MAUS::V830*) G__getstructoffset())->GetChannels();
         pobj = new MAUS::Channels(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->SetChannels(*((MAUS::Channels*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V830*) G__getstructoffset())->GetPhysEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->SetPhysEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V830*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->SetTimeStamp((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V830*) G__getstructoffset())->GetGeo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->SetGeo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::V830::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V830::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::V830::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::V830::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::V830*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V830*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V830::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::V830::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V830::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_422_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::V830::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::V830 G__TMAUScLcLV830;
static int G__MausDataStructure_422_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::V830*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::V830*) (soff+(sizeof(MAUS::V830)*i)))->~G__TMAUScLcLV830();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::V830*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::V830*) (soff))->~G__TMAUScLcLV830();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::V1731 */
static int G__MausDataStructure_427_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::V1731* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::V1731[n];
     } else {
       p = new((void*) gvp) MAUS::V1731[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::V1731;
     } else {
       p = new((void*) gvp) MAUS::V1731;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1731));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::V1731* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::V1731(*(MAUS::V1731*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::V1731(*(MAUS::V1731*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1731));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1731& obj = ((MAUS::V1731*) G__getstructoffset())->operator=(*(MAUS::V1731*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetLdcId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetLdcId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::SampleArray* pobj;
         const MAUS::SampleArray xobj = ((const MAUS::V1731*) G__getstructoffset())->GetSampleArray();
         pobj = new MAUS::SampleArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetSampleArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::V1731*) G__getstructoffset())->GetSampleArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetSampleArray(*((MAUS::SampleArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetChargeMm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetChargeMm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetEquipType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetEquipType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetPhysEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetPhysEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetChargePm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetChargePm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetArrivalTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetArrivalTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::V1731*) G__getstructoffset())->GetChannelKey();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetChannelKey(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetPositionMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetPositionMin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetPulseArea());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetPulseArea((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetMaxPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetMaxPos((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetTriggerTimeTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetTriggerTimeTag((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetTimeStamp((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::V1731*) G__getstructoffset())->GetDetector();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetDetector(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetGeo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetGeo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetPedestal((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::V1731*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->SetChannel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::V1731::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1731::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::V1731::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::V1731::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::V1731*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::V1731*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1731::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::V1731::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::V1731::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_427_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::V1731::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::V1731 G__TMAUScLcLV1731;
static int G__MausDataStructure_427_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::V1731*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::V1731*) (soff+(sizeof(MAUS::V1731)*i)))->~G__TMAUScLcLV1731();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::V1731*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::V1731*) (soff))->~G__TMAUScLcLV1731();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::CkovDaq */
static int G__MausDataStructure_432_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovDaq* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovDaq[n];
     } else {
       p = new((void*) gvp) MAUS::CkovDaq[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovDaq;
     } else {
       p = new((void*) gvp) MAUS::CkovDaq;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDaq));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovDaq* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::CkovDaq(*(MAUS::CkovDaq*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::CkovDaq(*(MAUS::CkovDaq*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDaq));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovDaq& obj = ((MAUS::CkovDaq*) G__getstructoffset())->operator=(*(MAUS::CkovDaq*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1731Array* pobj;
         const MAUS::V1731Array xobj = ((const MAUS::CkovDaq*) G__getstructoffset())->GetV1731Array();
         pobj = new MAUS::V1731Array(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1731* pobj;
         const MAUS::V1731 xobj = ((const MAUS::CkovDaq*) G__getstructoffset())->GetV1731ArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::V1731(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::CkovDaq*) G__getstructoffset())->GetV1731ArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDaq*) G__getstructoffset())->SetV1731Array(*((MAUS::V1731Array*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::CkovDaq::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovDaq::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::CkovDaq::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::CkovDaq::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::CkovDaq*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDaq*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDaq*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDaq*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovDaq::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovDaq::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovDaq::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_432_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovDaq::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::CkovDaq G__TMAUScLcLCkovDaq;
static int G__MausDataStructure_432_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::CkovDaq*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::CkovDaq*) (soff+(sizeof(MAUS::CkovDaq)*i)))->~G__TMAUScLcLCkovDaq();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::CkovDaq*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::CkovDaq*) (soff))->~G__TMAUScLcLCkovDaq();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Unknown */
static int G__MausDataStructure_433_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Unknown* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Unknown[n];
     } else {
       p = new((void*) gvp) MAUS::Unknown[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Unknown;
     } else {
       p = new((void*) gvp) MAUS::Unknown;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLUnknown));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Unknown* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Unknown(*(MAUS::Unknown*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Unknown(*(MAUS::Unknown*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLUnknown));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Unknown& obj = ((MAUS::Unknown*) G__getstructoffset())->operator=(*(MAUS::Unknown*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290Array* pobj;
         const MAUS::V1290Array xobj = ((const MAUS::Unknown*) G__getstructoffset())->GetV1290Array();
         pobj = new MAUS::V1290Array(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290* pobj;
         const MAUS::V1290 xobj = ((const MAUS::Unknown*) G__getstructoffset())->GetV1290ArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::V1290(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::Unknown*) G__getstructoffset())->GetV1290ArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Unknown*) G__getstructoffset())->SetV1290Array(*((MAUS::V1290Array*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Unknown::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Unknown::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Unknown::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Unknown::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Unknown*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Unknown*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Unknown*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Unknown*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Unknown::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Unknown::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Unknown::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_433_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Unknown::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Unknown G__TMAUScLcLUnknown;
static int G__MausDataStructure_433_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Unknown*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Unknown*) (soff+(sizeof(MAUS::Unknown)*i)))->~G__TMAUScLcLUnknown();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Unknown*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Unknown*) (soff))->~G__TMAUScLcLUnknown();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TriggerRequest */
static int G__MausDataStructure_434_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TriggerRequest* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TriggerRequest[n];
     } else {
       p = new((void*) gvp) MAUS::TriggerRequest[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TriggerRequest;
     } else {
       p = new((void*) gvp) MAUS::TriggerRequest;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerRequest));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TriggerRequest* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TriggerRequest(*(MAUS::TriggerRequest*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TriggerRequest(*(MAUS::TriggerRequest*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerRequest));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TriggerRequest& obj = ((MAUS::TriggerRequest*) G__getstructoffset())->operator=(*(MAUS::TriggerRequest*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290Array* pobj;
         const MAUS::V1290Array xobj = ((const MAUS::TriggerRequest*) G__getstructoffset())->GetV1290Array();
         pobj = new MAUS::V1290Array(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1290* pobj;
         const MAUS::V1290 xobj = ((const MAUS::TriggerRequest*) G__getstructoffset())->GetV1290ArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::V1290(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TriggerRequest*) G__getstructoffset())->GetV1290ArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TriggerRequest*) G__getstructoffset())->SetV1290Array(*((MAUS::V1290Array*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TriggerRequest::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TriggerRequest::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TriggerRequest::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TriggerRequest::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TriggerRequest*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TriggerRequest*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TriggerRequest*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TriggerRequest*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TriggerRequest::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TriggerRequest::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TriggerRequest::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_434_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TriggerRequest::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TriggerRequest G__TMAUScLcLTriggerRequest;
static int G__MausDataStructure_434_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TriggerRequest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TriggerRequest*) (soff+(sizeof(MAUS::TriggerRequest)*i)))->~G__TMAUScLcLTriggerRequest();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TriggerRequest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TriggerRequest*) (soff))->~G__TMAUScLcLTriggerRequest();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Tag */
static int G__MausDataStructure_435_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Tag* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Tag[n];
     } else {
       p = new((void*) gvp) MAUS::Tag[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Tag;
     } else {
       p = new((void*) gvp) MAUS::Tag;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTag));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Tag* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Tag(*(MAUS::Tag*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Tag(*(MAUS::Tag*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTag));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Tag& obj = ((MAUS::Tag*) G__getstructoffset())->operator=(*(MAUS::Tag*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1724Array* pobj;
         const MAUS::V1724Array xobj = ((const MAUS::Tag*) G__getstructoffset())->GetV1724Array();
         pobj = new MAUS::V1724Array(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V1724* pobj;
         const MAUS::V1724 xobj = ((const MAUS::Tag*) G__getstructoffset())->GetV1724ArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::V1724(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::Tag*) G__getstructoffset())->GetV1724ArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Tag*) G__getstructoffset())->SetV1724Array(*((MAUS::V1724Array*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Tag::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Tag::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Tag::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Tag::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Tag*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Tag*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Tag*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Tag*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Tag::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Tag::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Tag::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_435_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Tag::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Tag G__TMAUScLcLTag;
static int G__MausDataStructure_435_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Tag*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Tag*) (soff+(sizeof(MAUS::Tag)*i)))->~G__TMAUScLcLTag();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Tag*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Tag*) (soff))->~G__TMAUScLcLTag();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::DAQData */
static int G__MausDataStructure_464_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::DAQData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::DAQData[n];
     } else {
       p = new((void*) gvp) MAUS::DAQData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::DAQData;
     } else {
       p = new((void*) gvp) MAUS::DAQData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::DAQData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::DAQData(*(MAUS::DAQData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::DAQData(*(MAUS::DAQData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::DAQData& obj = ((MAUS::DAQData*) G__getstructoffset())->operator=(*(MAUS::DAQData*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::V830* pobj;
         const MAUS::V830 xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetV830();
         pobj = new MAUS::V830(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetV830(*((MAUS::V830*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TriggerRequestArray* pobj;
         const MAUS::TriggerRequestArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetTriggerRequestArray();
         pobj = new MAUS::TriggerRequestArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTriggerRequestArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTriggerRequestArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetTriggerRequestArray(*((MAUS::TriggerRequestArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF1DaqArray* pobj;
         const MAUS::TOF1DaqArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetTOF1DaqArray();
         pobj = new MAUS::TOF1DaqArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTOF1DaqArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTOF1DaqArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetTOF1DaqArray(*((MAUS::TOF1DaqArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovArray* pobj;
         const MAUS::CkovArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetCkovArray();
         pobj = new MAUS::CkovArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetCkovArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetCkovArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetCkovArray(*((MAUS::CkovArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF2DaqArray* pobj;
         const MAUS::TOF2DaqArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetTOF2DaqArray();
         pobj = new MAUS::TOF2DaqArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTOF2DaqArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTOF2DaqArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetTOF2DaqArray(*((MAUS::TOF2DaqArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::UnknownArray* pobj;
         const MAUS::UnknownArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetUnknownArray();
         pobj = new MAUS::UnknownArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetUnknownArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetUnknownArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetUnknownArray(*((MAUS::UnknownArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::KLArray* pobj;
         const MAUS::KLArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetKLArray();
         pobj = new MAUS::KLArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetKLArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetKLArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetKLArray(*((MAUS::KLArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TagArray* pobj;
         const MAUS::TagArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetTagArray();
         pobj = new MAUS::TagArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTagArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTagArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetTagArray(*((MAUS::TagArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF0DaqArray* pobj;
         const MAUS::TOF0DaqArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetTOF0DaqArray();
         pobj = new MAUS::TOF0DaqArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTOF0DaqArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTOF0DaqArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetTOF0DaqArray(*((MAUS::TOF0DaqArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TriggerArray* pobj;
         const MAUS::TriggerArray xobj = ((const MAUS::DAQData*) G__getstructoffset())->GetTriggerArray();
         pobj = new MAUS::TriggerArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTriggerArrayElement((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::DAQData*) G__getstructoffset())->GetTriggerArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->SetTriggerArray(*((MAUS::TriggerArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::DAQData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::DAQData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::DAQData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::DAQData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::DAQData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::DAQData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::DAQData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::DAQData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::DAQData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_464_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::DAQData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::DAQData G__TMAUScLcLDAQData;
static int G__MausDataStructure_464_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::DAQData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::DAQData*) (soff+(sizeof(MAUS::DAQData)*i)))->~G__TMAUScLcLDAQData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::DAQData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::DAQData*) (soff))->~G__TMAUScLcLDAQData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::EMRSpillData */
static int G__MausDataStructure_465_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::EMRSpillData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::EMRSpillData[n];
     } else {
       p = new((void*) gvp) MAUS::EMRSpillData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::EMRSpillData;
     } else {
       p = new((void*) gvp) MAUS::EMRSpillData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::EMRSpillData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::EMRSpillData(*(MAUS::EMRSpillData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::EMRSpillData(*(MAUS::EMRSpillData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::EMRSpillData& obj = ((MAUS::EMRSpillData*) G__getstructoffset())->operator=(*(MAUS::EMRSpillData*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::EMRSpillData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::EMRSpillData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::EMRSpillData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::EMRSpillData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::EMRSpillData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::EMRSpillData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::EMRSpillData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::EMRSpillData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::EMRSpillData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::EMRSpillData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::EMRSpillData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_465_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::EMRSpillData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::EMRSpillData G__TMAUScLcLEMRSpillData;
static int G__MausDataStructure_465_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::EMRSpillData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::EMRSpillData*) (soff+(sizeof(MAUS::EMRSpillData)*i)))->~G__TMAUScLcLEMRSpillData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::EMRSpillData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::EMRSpillData*) (soff))->~G__TMAUScLcLEMRSpillData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Scalars */
static int G__MausDataStructure_466_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Scalars* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Scalars[n];
     } else {
       p = new((void*) gvp) MAUS::Scalars[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Scalars;
     } else {
       p = new((void*) gvp) MAUS::Scalars;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Scalars* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Scalars(*(MAUS::Scalars*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Scalars(*(MAUS::Scalars*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Scalars& obj = ((MAUS::Scalars*) G__getstructoffset())->operator=(*(MAUS::Scalars*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Scalars::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Scalars::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Scalars::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Scalars::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Scalars*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Scalars*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Scalars*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Scalars*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Scalars::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Scalars::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Scalars::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_466_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Scalars::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Scalars G__TMAUScLcLScalars;
static int G__MausDataStructure_466_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Scalars*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Scalars*) (soff+(sizeof(MAUS::Scalars)*i)))->~G__TMAUScLcLScalars();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Scalars*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Scalars*) (soff))->~G__TMAUScLcLScalars();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFChannelId */
static int G__MausDataStructure_467_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFChannelId* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFChannelId[n];
     } else {
       p = new((void*) gvp) MAUS::TOFChannelId[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFChannelId;
     } else {
       p = new((void*) gvp) MAUS::TOFChannelId;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFChannelId* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFChannelId(*(MAUS::TOFChannelId*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFChannelId(*(MAUS::TOFChannelId*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFChannelId& obj = ((MAUS::TOFChannelId*) G__getstructoffset())->operator=(*(MAUS::TOFChannelId*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFChannelId*) G__getstructoffset())->GetSlab());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFChannelId*) G__getstructoffset())->SetSlab((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFChannelId*) G__getstructoffset())->GetPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFChannelId*) G__getstructoffset())->SetPlane((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFChannelId*) G__getstructoffset())->GetStation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFChannelId*) G__getstructoffset())->SetStation((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFChannelId::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFChannelId::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFChannelId::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFChannelId::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFChannelId*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFChannelId*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFChannelId*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFChannelId*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFChannelId::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFChannelId::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFChannelId::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_467_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFChannelId::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFChannelId G__TMAUScLcLTOFChannelId;
static int G__MausDataStructure_467_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFChannelId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFChannelId*) (soff+(sizeof(MAUS::TOFChannelId)*i)))->~G__TMAUScLcLTOFChannelId();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFChannelId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFChannelId*) (soff))->~G__TMAUScLcLTOFChannelId();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::SciFiChannelId */
static int G__MausDataStructure_468_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::SciFiChannelId* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::SciFiChannelId[n];
     } else {
       p = new((void*) gvp) MAUS::SciFiChannelId[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::SciFiChannelId;
     } else {
       p = new((void*) gvp) MAUS::SciFiChannelId;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::SciFiChannelId* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::SciFiChannelId(*(MAUS::SciFiChannelId*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::SciFiChannelId(*(MAUS::SciFiChannelId*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::SciFiChannelId& obj = ((MAUS::SciFiChannelId*) G__getstructoffset())->operator=(*(MAUS::SciFiChannelId*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::SciFiChannelId*) G__getstructoffset())->GetFiberNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiChannelId*) G__getstructoffset())->SetFiberNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::SciFiChannelId*) G__getstructoffset())->GetStationNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiChannelId*) G__getstructoffset())->SetStationNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::SciFiChannelId*) G__getstructoffset())->GetTrackerNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiChannelId*) G__getstructoffset())->SetTrackerNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::SciFiChannelId*) G__getstructoffset())->GetPlaneNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiChannelId*) G__getstructoffset())->SetPlaneNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::SciFiChannelId::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SciFiChannelId::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::SciFiChannelId::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::SciFiChannelId::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::SciFiChannelId*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiChannelId*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiChannelId*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::SciFiChannelId*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SciFiChannelId::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::SciFiChannelId::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::SciFiChannelId::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_468_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::SciFiChannelId::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::SciFiChannelId G__TMAUScLcLSciFiChannelId;
static int G__MausDataStructure_468_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::SciFiChannelId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::SciFiChannelId*) (soff+(sizeof(MAUS::SciFiChannelId)*i)))->~G__TMAUScLcLSciFiChannelId();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::SciFiChannelId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::SciFiChannelId*) (soff))->~G__TMAUScLcLSciFiChannelId();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Hit<MAUS::SciFiChannelId> */
static int G__MausDataStructure_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Hit<MAUS::SciFiChannelId>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Hit<MAUS::SciFiChannelId>[n];
     } else {
       p = new((void*) gvp) MAUS::Hit<MAUS::SciFiChannelId>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Hit<MAUS::SciFiChannelId>;
     } else {
       p = new((void*) gvp) MAUS::Hit<MAUS::SciFiChannelId>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Hit<MAUS::SciFiChannelId>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Hit<MAUS::SciFiChannelId>(*(MAUS::Hit<MAUS::SciFiChannelId>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Hit<MAUS::SciFiChannelId>(*(MAUS::Hit<MAUS::SciFiChannelId>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Hit<MAUS::SciFiChannelId>& obj = ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->operator=(*(MAUS::Hit<MAUS::SciFiChannelId>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetTrackId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetParticleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetParticleId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetCharge((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetEnergyDeposited());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetEnergyDeposited((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetPosition();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetPosition(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetMomentum();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetMomentum(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->GetChannelId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->SetChannelId((MAUS::SciFiChannelId*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Hit<MAUS::SciFiChannelId>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::SciFiChannelId>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Hit<MAUS::SciFiChannelId>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Hit<MAUS::SciFiChannelId>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SciFiChannelId>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::SciFiChannelId>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Hit<MAUS::SciFiChannelId>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::SciFiChannelId>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_469_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Hit<MAUS::SciFiChannelId>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Hit<MAUS::SciFiChannelId> G__TMAUScLcLHitlEMAUScLcLSciFiChannelIdgR;
static int G__MausDataStructure_469_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Hit<MAUS::SciFiChannelId>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Hit<MAUS::SciFiChannelId>*) (soff+(sizeof(MAUS::Hit<MAUS::SciFiChannelId>)*i)))->~G__TMAUScLcLHitlEMAUScLcLSciFiChannelIdgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Hit<MAUS::SciFiChannelId>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Hit<MAUS::SciFiChannelId>*) (soff))->~G__TMAUScLcLHitlEMAUScLcLSciFiChannelIdgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Hit<MAUS::TOFChannelId> */
static int G__MausDataStructure_470_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Hit<MAUS::TOFChannelId>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Hit<MAUS::TOFChannelId>[n];
     } else {
       p = new((void*) gvp) MAUS::Hit<MAUS::TOFChannelId>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Hit<MAUS::TOFChannelId>;
     } else {
       p = new((void*) gvp) MAUS::Hit<MAUS::TOFChannelId>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Hit<MAUS::TOFChannelId>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Hit<MAUS::TOFChannelId>(*(MAUS::Hit<MAUS::TOFChannelId>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Hit<MAUS::TOFChannelId>(*(MAUS::Hit<MAUS::TOFChannelId>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Hit<MAUS::TOFChannelId>& obj = ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->operator=(*(MAUS::Hit<MAUS::TOFChannelId>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetTrackId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetParticleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetParticleId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetCharge((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetEnergyDeposited());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetEnergyDeposited((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetPosition();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetPosition(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetMomentum();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetMomentum(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->GetChannelId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->SetChannelId((MAUS::TOFChannelId*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Hit<MAUS::TOFChannelId>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::TOFChannelId>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Hit<MAUS::TOFChannelId>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Hit<MAUS::TOFChannelId>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::TOFChannelId>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::TOFChannelId>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Hit<MAUS::TOFChannelId>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::TOFChannelId>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_470_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Hit<MAUS::TOFChannelId>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Hit<MAUS::TOFChannelId> G__TMAUScLcLHitlEMAUScLcLTOFChannelIdgR;
static int G__MausDataStructure_470_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Hit<MAUS::TOFChannelId>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Hit<MAUS::TOFChannelId>*) (soff+(sizeof(MAUS::Hit<MAUS::TOFChannelId>)*i)))->~G__TMAUScLcLHitlEMAUScLcLTOFChannelIdgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Hit<MAUS::TOFChannelId>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Hit<MAUS::TOFChannelId>*) (soff))->~G__TMAUScLcLHitlEMAUScLcLTOFChannelIdgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Hit<MAUS::SpecialVirtualChannelId> */
static int G__MausDataStructure_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Hit<MAUS::SpecialVirtualChannelId>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Hit<MAUS::SpecialVirtualChannelId>[n];
     } else {
       p = new((void*) gvp) MAUS::Hit<MAUS::SpecialVirtualChannelId>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Hit<MAUS::SpecialVirtualChannelId>;
     } else {
       p = new((void*) gvp) MAUS::Hit<MAUS::SpecialVirtualChannelId>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Hit<MAUS::SpecialVirtualChannelId>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Hit<MAUS::SpecialVirtualChannelId>(*(MAUS::Hit<MAUS::SpecialVirtualChannelId>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Hit<MAUS::SpecialVirtualChannelId>(*(MAUS::Hit<MAUS::SpecialVirtualChannelId>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Hit<MAUS::SpecialVirtualChannelId>& obj = ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->operator=(*(MAUS::Hit<MAUS::SpecialVirtualChannelId>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetTrackId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetParticleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetParticleId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetCharge((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetEnergyDeposited());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetEnergyDeposited((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetPosition();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetPosition(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetMomentum();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetMomentum(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->GetChannelId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->SetChannelId((MAUS::SpecialVirtualChannelId*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Hit<MAUS::SpecialVirtualChannelId>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::SpecialVirtualChannelId>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Hit<MAUS::SpecialVirtualChannelId>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Hit<MAUS::SpecialVirtualChannelId>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_471_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Hit<MAUS::SpecialVirtualChannelId>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Hit<MAUS::SpecialVirtualChannelId> G__TMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR;
static int G__MausDataStructure_471_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Hit<MAUS::SpecialVirtualChannelId>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) (soff+(sizeof(MAUS::Hit<MAUS::SpecialVirtualChannelId>)*i)))->~G__TMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Hit<MAUS::SpecialVirtualChannelId>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Hit<MAUS::SpecialVirtualChannelId>*) (soff))->~G__TMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Track */
static int G__MausDataStructure_472_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Track[n];
     } else {
       p = new((void*) gvp) MAUS::Track[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Track;
     } else {
       p = new((void*) gvp) MAUS::Track;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Track(*(MAUS::Track*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Track(*(MAUS::Track*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Track& obj = ((MAUS::Track*) G__getstructoffset())->operator=(*(MAUS::Track*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Track*) G__getstructoffset())->GetInitialPosition();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->SetInitialPosition(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Track*) G__getstructoffset())->GetInitialMomentum();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->SetInitialMomentum(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Track*) G__getstructoffset())->GetFinalPosition();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->SetFinalPosition(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Track*) G__getstructoffset())->GetFinalMomentum();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->SetFinalMomentum(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Track*) G__getstructoffset())->GetParticleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->SetParticleId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Track*) G__getstructoffset())->GetTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->SetTrackId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Track*) G__getstructoffset())->GetParentTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->SetParentTrackId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Track*) G__getstructoffset())->GetSteps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->SetSteps((MAUS::StepArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Track*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_472_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Track G__TMAUScLcLTrack;
static int G__MausDataStructure_472_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Track*) (soff+(sizeof(MAUS::Track)*i)))->~G__TMAUScLcLTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Track*) (soff))->~G__TMAUScLcLTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::VirtualHit */
static int G__MausDataStructure_473_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::VirtualHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::VirtualHit[n];
     } else {
       p = new((void*) gvp) MAUS::VirtualHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::VirtualHit;
     } else {
       p = new((void*) gvp) MAUS::VirtualHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLVirtualHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::VirtualHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::VirtualHit(*(MAUS::VirtualHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::VirtualHit(*(MAUS::VirtualHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLVirtualHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::VirtualHit& obj = ((MAUS::VirtualHit*) G__getstructoffset())->operator=(*(MAUS::VirtualHit*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::VirtualHit*) G__getstructoffset())->GetStationId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetStationId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::VirtualHit*) G__getstructoffset())->GetParticleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetParticleId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::VirtualHit*) G__getstructoffset())->GetTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetTrackId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::VirtualHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::VirtualHit*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetMass((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::VirtualHit*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetCharge((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::VirtualHit*) G__getstructoffset())->GetProperTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetProperTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::VirtualHit*) G__getstructoffset())->GetPathLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetPathLength((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::VirtualHit*) G__getstructoffset())->GetPosition();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetPosition(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::VirtualHit*) G__getstructoffset())->GetMomentum();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetMomentum(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::VirtualHit*) G__getstructoffset())->GetBField();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetBField(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::VirtualHit*) G__getstructoffset())->GetEField();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->SetEField(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::VirtualHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::VirtualHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::VirtualHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::VirtualHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::VirtualHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::VirtualHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::VirtualHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::VirtualHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::VirtualHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_473_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::VirtualHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::VirtualHit G__TMAUScLcLVirtualHit;
static int G__MausDataStructure_473_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::VirtualHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::VirtualHit*) (soff+(sizeof(MAUS::VirtualHit)*i)))->~G__TMAUScLcLVirtualHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::VirtualHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::VirtualHit*) (soff))->~G__TMAUScLcLVirtualHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::MCEvent */
static int G__MausDataStructure_494_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::MCEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::MCEvent[n];
     } else {
       p = new((void*) gvp) MAUS::MCEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::MCEvent;
     } else {
       p = new((void*) gvp) MAUS::MCEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLMCEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::MCEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::MCEvent(*(MAUS::MCEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::MCEvent(*(MAUS::MCEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLMCEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::MCEvent& obj = ((MAUS::MCEvent*) G__getstructoffset())->operator=(*(MAUS::MCEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::MCEvent*) G__getstructoffset())->GetTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->SetTracks((MAUS::TrackArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::MCEvent*) G__getstructoffset())->GetVirtualHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->SetVirtualHits((MAUS::VirtualHitArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::VirtualHit& obj = ((const MAUS::MCEvent*) G__getstructoffset())->GetAVirtualHit((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::MCEvent*) G__getstructoffset())->GetVirtualHitsSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::MCEvent*) G__getstructoffset())->GetSciFiHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->SetSciFiHits((MAUS::SciFiHitArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::MCEvent*) G__getstructoffset())->GetTOFHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->SetTOFHits((MAUS::TOFHitArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::MCEvent*) G__getstructoffset())->GetSpecialVirtualHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->SetSpecialVirtualHits((MAUS::SpecialVirtualHitArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::MCEvent*) G__getstructoffset())->GetPrimary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->SetPrimary((MAUS::Primary*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::MCEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::MCEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::MCEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::MCEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::MCEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::MCEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::MCEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::MCEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::MCEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_494_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::MCEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::MCEvent G__TMAUScLcLMCEvent;
static int G__MausDataStructure_494_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::MCEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::MCEvent*) (soff+(sizeof(MAUS::MCEvent)*i)))->~G__TMAUScLcLMCEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::MCEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::MCEvent*) (soff))->~G__TMAUScLcLMCEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFDigit */
static int G__MausDataStructure_495_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFDigit[n];
     } else {
       p = new((void*) gvp) MAUS::TOFDigit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFDigit;
     } else {
       p = new((void*) gvp) MAUS::TOFDigit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFDigit(*(MAUS::TOFDigit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFDigit(*(MAUS::TOFDigit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFDigit& obj = ((MAUS::TOFDigit*) G__getstructoffset())->operator=(*(MAUS::TOFDigit*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetPmt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetPmt((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetTriggerLeadingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetTriggerLeadingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetTriggerRequestLeadingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetTriggerRequestLeadingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetTriggerTrailingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetTriggerTrailingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetTriggerRequestTrailingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetTriggerRequestTrailingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetChargeMm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetChargeMm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetTrailingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetTrailingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetPlane((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetChargePm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetChargePm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetPhysEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetPhysEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetStation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetStation((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetLeadingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetLeadingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetTimeStamp((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::TOFDigit*) G__getstructoffset())->GetTofKey();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetTofKey(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetTriggerTimeTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetTriggerTimeTag((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->GetSlab());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->SetSlab((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFDigit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_495_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFDigit G__TMAUScLcLTOFDigit;
static int G__MausDataStructure_495_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFDigit*) (soff+(sizeof(MAUS::TOFDigit)*i)))->~G__TMAUScLcLTOFDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFDigit*) (soff))->~G__TMAUScLcLTOFDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFEventDigit */
static int G__MausDataStructure_500_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFEventDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFEventDigit[n];
     } else {
       p = new((void*) gvp) MAUS::TOFEventDigit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFEventDigit;
     } else {
       p = new((void*) gvp) MAUS::TOFEventDigit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFEventDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFEventDigit(*(MAUS::TOFEventDigit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFEventDigit(*(MAUS::TOFEventDigit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFEventDigit& obj = ((MAUS::TOFEventDigit*) G__getstructoffset())->operator=(*(MAUS::TOFEventDigit*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF1DigitArray* pobj;
         const MAUS::TOF1DigitArray xobj = ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF1DigitArray();
         pobj = new MAUS::TOF1DigitArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFDigit* pobj;
         const MAUS::TOFDigit xobj = ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF1DigitArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFDigit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF1DigitArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventDigit*) G__getstructoffset())->SetTOF1DigitArray(*((MAUS::TOF1DigitArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF0DigitArray* pobj;
         const MAUS::TOF0DigitArray xobj = ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF0DigitArray();
         pobj = new MAUS::TOF0DigitArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFDigit* pobj;
         const MAUS::TOFDigit xobj = ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF0DigitArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFDigit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF0DigitArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventDigit*) G__getstructoffset())->SetTOF0DigitArray(*((MAUS::TOF0DigitArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF2DigitArray* pobj;
         const MAUS::TOF2DigitArray xobj = ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF2DigitArray();
         pobj = new MAUS::TOF2DigitArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFDigit* pobj;
         const MAUS::TOFDigit xobj = ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF2DigitArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFDigit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventDigit*) G__getstructoffset())->GetTOF2DigitArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventDigit*) G__getstructoffset())->SetTOF2DigitArray(*((MAUS::TOF2DigitArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFEventDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFEventDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFEventDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFEventDigit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventDigit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventDigit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFEventDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_500_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFEventDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFEventDigit G__TMAUScLcLTOFEventDigit;
static int G__MausDataStructure_500_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFEventDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFEventDigit*) (soff+(sizeof(MAUS::TOFEventDigit)*i)))->~G__TMAUScLcLTOFEventDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFEventDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFEventDigit*) (soff))->~G__TMAUScLcLTOFEventDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Pmt1 */
static int G__MausDataStructure_501_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Pmt1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Pmt1[n];
     } else {
       p = new((void*) gvp) MAUS::Pmt1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Pmt1;
     } else {
       p = new((void*) gvp) MAUS::Pmt1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Pmt1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Pmt1(*(MAUS::Pmt1*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Pmt1(*(MAUS::Pmt1*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Pmt1& obj = ((MAUS::Pmt1*) G__getstructoffset())->operator=(*(MAUS::Pmt1*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Pmt1*) G__getstructoffset())->GetRawTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->SetRawTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Pmt1*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->SetCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Pmt1*) G__getstructoffset())->GetLeadingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->SetLeadingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Pmt1*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::Pmt1*) G__getstructoffset())->GetTofKey();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->SetTofKey(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Pmt1*) G__getstructoffset())->GetTriggerRequestLeadingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->SetTriggerRequestLeadingTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Pmt1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Pmt1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Pmt1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Pmt1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Pmt1*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Pmt1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Pmt1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Pmt1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Pmt1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_501_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Pmt1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Pmt1 G__TMAUScLcLPmt1;
static int G__MausDataStructure_501_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Pmt1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Pmt1*) (soff+(sizeof(MAUS::Pmt1)*i)))->~G__TMAUScLcLPmt1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Pmt1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Pmt1*) (soff))->~G__TMAUScLcLPmt1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFSlabHit */
static int G__MausDataStructure_502_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFSlabHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFSlabHit[n];
     } else {
       p = new((void*) gvp) MAUS::TOFSlabHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFSlabHit;
     } else {
       p = new((void*) gvp) MAUS::TOFSlabHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFSlabHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFSlabHit(*(MAUS::TOFSlabHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFSlabHit(*(MAUS::TOFSlabHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFSlabHit& obj = ((MAUS::TOFSlabHit*) G__getstructoffset())->operator=(*(MAUS::TOFSlabHit*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetSlab());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetSlab((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetPhysEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetPhysEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetRawTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetRawTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetPlane((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetChargeProduct());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetChargeProduct((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetStation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetStation((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetDetector();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetDetector(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Pmt1* pobj;
         const MAUS::Pmt1 xobj = ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetPmt1();
         pobj = new MAUS::Pmt1(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetPmt1(*((MAUS::Pmt1*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Pmt0* pobj;
         const MAUS::Pmt0 xobj = ((const MAUS::TOFSlabHit*) G__getstructoffset())->GetPmt0();
         pobj = new MAUS::Pmt0(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->SetPmt0(*((MAUS::Pmt0*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFSlabHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFSlabHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFSlabHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFSlabHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFSlabHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSlabHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFSlabHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFSlabHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFSlabHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_502_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFSlabHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFSlabHit G__TMAUScLcLTOFSlabHit;
static int G__MausDataStructure_502_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFSlabHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFSlabHit*) (soff+(sizeof(MAUS::TOFSlabHit)*i)))->~G__TMAUScLcLTOFSlabHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFSlabHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFSlabHit*) (soff))->~G__TMAUScLcLTOFSlabHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFEventSlabHit */
static int G__MausDataStructure_507_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFEventSlabHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFEventSlabHit[n];
     } else {
       p = new((void*) gvp) MAUS::TOFEventSlabHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFEventSlabHit;
     } else {
       p = new((void*) gvp) MAUS::TOFEventSlabHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFEventSlabHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFEventSlabHit(*(MAUS::TOFEventSlabHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFEventSlabHit(*(MAUS::TOFEventSlabHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFEventSlabHit& obj = ((MAUS::TOFEventSlabHit*) G__getstructoffset())->operator=(*(MAUS::TOFEventSlabHit*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF1SlabHitArray* pobj;
         const MAUS::TOF1SlabHitArray xobj = ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF1SlabHitArray();
         pobj = new MAUS::TOF1SlabHitArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFSlabHit* pobj;
         const MAUS::TOFSlabHit xobj = ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF1SlabHitArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFSlabHit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF1SlabHitArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSlabHit*) G__getstructoffset())->SetTOF1SlabHitArray(*((MAUS::TOF1SlabHitArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF0SlabHitArray* pobj;
         const MAUS::TOF0SlabHitArray xobj = ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF0SlabHitArray();
         pobj = new MAUS::TOF0SlabHitArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFSlabHit* pobj;
         const MAUS::TOFSlabHit xobj = ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF0SlabHitArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFSlabHit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF0SlabHitArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSlabHit*) G__getstructoffset())->SetTOF0SlabHitArray(*((MAUS::TOF0SlabHitArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF2SlabHitArray* pobj;
         const MAUS::TOF2SlabHitArray xobj = ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF2SlabHitArray();
         pobj = new MAUS::TOF2SlabHitArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFSlabHit* pobj;
         const MAUS::TOFSlabHit xobj = ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF2SlabHitArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFSlabHit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->GetTOF2SlabHitArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSlabHit*) G__getstructoffset())->SetTOF2SlabHitArray(*((MAUS::TOF2SlabHitArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFEventSlabHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventSlabHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFEventSlabHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFEventSlabHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFEventSlabHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSlabHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSlabHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSlabHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventSlabHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFEventSlabHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventSlabHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_507_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFEventSlabHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFEventSlabHit G__TMAUScLcLTOFEventSlabHit;
static int G__MausDataStructure_507_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFEventSlabHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFEventSlabHit*) (soff+(sizeof(MAUS::TOFEventSlabHit)*i)))->~G__TMAUScLcLTOFEventSlabHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFEventSlabHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFEventSlabHit*) (soff))->~G__TMAUScLcLTOFEventSlabHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFSpacePoint */
static int G__MausDataStructure_508_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFSpacePoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFSpacePoint[n];
     } else {
       p = new((void*) gvp) MAUS::TOFSpacePoint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFSpacePoint;
     } else {
       p = new((void*) gvp) MAUS::TOFSpacePoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFSpacePoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFSpacePoint(*(MAUS::TOFSpacePoint*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFSpacePoint(*(MAUS::TOFSpacePoint*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFSpacePoint& obj = ((MAUS::TOFSpacePoint*) G__getstructoffset())->operator=(*(MAUS::TOFSpacePoint*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetPhysEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetPhysEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetPixelKey();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetPixelKey(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetStation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetStation((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetSlaby());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetSlaby((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetSlabx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetSlabx((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetChargeProduct());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetChargeProduct((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetDetector();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetDetector(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->GetDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->SetDt((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFSpacePoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFSpacePoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFSpacePoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFSpacePoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFSpacePoint*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFSpacePoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFSpacePoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFSpacePoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFSpacePoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_508_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFSpacePoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFSpacePoint G__TMAUScLcLTOFSpacePoint;
static int G__MausDataStructure_508_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFSpacePoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFSpacePoint*) (soff+(sizeof(MAUS::TOFSpacePoint)*i)))->~G__TMAUScLcLTOFSpacePoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFSpacePoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFSpacePoint*) (soff))->~G__TMAUScLcLTOFSpacePoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFEventSpacePoint */
static int G__MausDataStructure_513_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFEventSpacePoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFEventSpacePoint[n];
     } else {
       p = new((void*) gvp) MAUS::TOFEventSpacePoint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFEventSpacePoint;
     } else {
       p = new((void*) gvp) MAUS::TOFEventSpacePoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFEventSpacePoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFEventSpacePoint(*(MAUS::TOFEventSpacePoint*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFEventSpacePoint(*(MAUS::TOFEventSpacePoint*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFEventSpacePoint& obj = ((MAUS::TOFEventSpacePoint*) G__getstructoffset())->operator=(*(MAUS::TOFEventSpacePoint*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF0SpacePointArray* pobj;
         const MAUS::TOF0SpacePointArray xobj = ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF0SpacePointArray();
         pobj = new MAUS::TOF0SpacePointArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFSpacePoint* pobj;
         const MAUS::TOFSpacePoint xobj = ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF0SpacePointArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFSpacePoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF0SpacePointArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSpacePoint*) G__getstructoffset())->SetTOF0SpacePointArray(*((MAUS::TOF1SpacePointArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF1SpacePointArray* pobj;
         const MAUS::TOF1SpacePointArray xobj = ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF1SpacePointArray();
         pobj = new MAUS::TOF1SpacePointArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFSpacePoint* pobj;
         const MAUS::TOFSpacePoint xobj = ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF1SpacePointArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFSpacePoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF1SpacePointArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSpacePoint*) G__getstructoffset())->SetTOF1SpacePointArray(*((MAUS::TOF1SpacePointArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOF2SpacePointArray* pobj;
         const MAUS::TOF2SpacePointArray xobj = ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF2SpacePointArray();
         pobj = new MAUS::TOF2SpacePointArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFSpacePoint* pobj;
         const MAUS::TOFSpacePoint xobj = ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF2SpacePointArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::TOFSpacePoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->GetTOF2SpacePointArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSpacePoint*) G__getstructoffset())->SetTOF2SpacePointArray(*((MAUS::TOF2SpacePointArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFEventSpacePoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventSpacePoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFEventSpacePoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFEventSpacePoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFEventSpacePoint*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSpacePoint*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSpacePoint*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEventSpacePoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventSpacePoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFEventSpacePoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEventSpacePoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_513_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFEventSpacePoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFEventSpacePoint G__TMAUScLcLTOFEventSpacePoint;
static int G__MausDataStructure_513_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFEventSpacePoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFEventSpacePoint*) (soff+(sizeof(MAUS::TOFEventSpacePoint)*i)))->~G__TMAUScLcLTOFEventSpacePoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFEventSpacePoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFEventSpacePoint*) (soff))->~G__TMAUScLcLTOFEventSpacePoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TOFEvent */
static int G__MausDataStructure_514_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFEvent[n];
     } else {
       p = new((void*) gvp) MAUS::TOFEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TOFEvent;
     } else {
       p = new((void*) gvp) MAUS::TOFEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TOFEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TOFEvent(*(MAUS::TOFEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TOFEvent(*(MAUS::TOFEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFEvent& obj = ((MAUS::TOFEvent*) G__getstructoffset())->operator=(*(MAUS::TOFEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFEventSlabHit* pobj;
         const MAUS::TOFEventSlabHit xobj = ((const MAUS::TOFEvent*) G__getstructoffset())->GetTOFEventSlabHit();
         pobj = new MAUS::TOFEventSlabHit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEvent*) G__getstructoffset())->SetTOFEventSlabHit(*((MAUS::TOFEventSlabHit*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFEventSpacePoint* pobj;
         const MAUS::TOFEventSpacePoint xobj = ((const MAUS::TOFEvent*) G__getstructoffset())->GetTOFEventSpacePoint();
         pobj = new MAUS::TOFEventSpacePoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEvent*) G__getstructoffset())->SetTOFEventSpacePoint(*((MAUS::TOFEventSpacePoint*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TOFEventDigit* pobj;
         const MAUS::TOFEventDigit xobj = ((const MAUS::TOFEvent*) G__getstructoffset())->GetTOFEventDigit();
         pobj = new MAUS::TOFEventDigit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEvent*) G__getstructoffset())->SetTOFEventDigit(*((MAUS::TOFEventDigit*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TOFEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TOFEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TOFEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TOFEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TOFEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TOFEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_514_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TOFEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TOFEvent G__TMAUScLcLTOFEvent;
static int G__MausDataStructure_514_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TOFEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TOFEvent*) (soff+(sizeof(MAUS::TOFEvent)*i)))->~G__TMAUScLcLTOFEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TOFEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TOFEvent*) (soff))->~G__TMAUScLcLTOFEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::CkovA */
static int G__MausDataStructure_515_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovA[n];
     } else {
       p = new((void*) gvp) MAUS::CkovA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovA;
     } else {
       p = new((void*) gvp) MAUS::CkovA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovA* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::CkovA(*(MAUS::CkovA*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::CkovA(*(MAUS::CkovA*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovA& obj = ((MAUS::CkovA*) G__getstructoffset())->operator=(*(MAUS::CkovA*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPositionMin0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPositionMin0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetArrivalTime2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetArrivalTime2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetArrivalTime3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetArrivalTime3((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetArrivalTime0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetArrivalTime0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetArrivalTime1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetArrivalTime1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPulse1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPulse1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPulse0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPulse0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPulse3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPulse3((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPulse2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPulse2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetCoincidences());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetCoincidences((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPositionMin2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPositionMin2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPositionMin3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPositionMin3((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetTotalCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetTotalCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPositionMin1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPositionMin1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovA*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::CkovA*) G__getstructoffset())->GetNumberOfPes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->SetNumberOfPes((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::CkovA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::CkovA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::CkovA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::CkovA*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_515_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::CkovA G__TMAUScLcLCkovA;
static int G__MausDataStructure_515_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::CkovA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::CkovA*) (soff+(sizeof(MAUS::CkovA)*i)))->~G__TMAUScLcLCkovA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::CkovA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::CkovA*) (soff))->~G__TMAUScLcLCkovA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::CkovB */
static int G__MausDataStructure_516_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovB[n];
     } else {
       p = new((void*) gvp) MAUS::CkovB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovB;
     } else {
       p = new((void*) gvp) MAUS::CkovB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::CkovB(*(MAUS::CkovB*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::CkovB(*(MAUS::CkovB*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovB& obj = ((MAUS::CkovB*) G__getstructoffset())->operator=(*(MAUS::CkovB*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetArrivalTime6());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetArrivalTime6((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetArrivalTime7());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetArrivalTime7((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetArrivalTime4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetArrivalTime4((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetArrivalTime5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetArrivalTime5((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPulse5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPulse5((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPulse4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPulse4((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPulse7());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPulse7((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPulse6());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPulse6((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPositionMin6());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPositionMin6((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetCoincidences());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetCoincidences((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetTotalCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetTotalCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPositionMin7());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPositionMin7((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::CkovB*) G__getstructoffset())->GetNumberOfPes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetNumberOfPes((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPositionMin5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPositionMin5((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::CkovB*) G__getstructoffset())->GetPositionMin4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->SetPositionMin4((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::CkovB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::CkovB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::CkovB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::CkovB*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_516_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::CkovB G__TMAUScLcLCkovB;
static int G__MausDataStructure_516_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::CkovB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::CkovB*) (soff+(sizeof(MAUS::CkovB)*i)))->~G__TMAUScLcLCkovB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::CkovB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::CkovB*) (soff))->~G__TMAUScLcLCkovB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::CkovDigit */
static int G__MausDataStructure_517_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovDigit[n];
     } else {
       p = new((void*) gvp) MAUS::CkovDigit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovDigit;
     } else {
       p = new((void*) gvp) MAUS::CkovDigit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::CkovDigit(*(MAUS::CkovDigit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::CkovDigit(*(MAUS::CkovDigit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovDigit& obj = ((MAUS::CkovDigit*) G__getstructoffset())->operator=(*(MAUS::CkovDigit*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovA* pobj;
         const MAUS::CkovA xobj = ((const MAUS::CkovDigit*) G__getstructoffset())->GetCkovA();
         pobj = new MAUS::CkovA(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDigit*) G__getstructoffset())->SetCkovA(*((MAUS::CkovA*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovB* pobj;
         const MAUS::CkovB xobj = ((const MAUS::CkovDigit*) G__getstructoffset())->GetCkovB();
         pobj = new MAUS::CkovB(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDigit*) G__getstructoffset())->SetCkovB(*((MAUS::CkovB*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::CkovDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::CkovDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::CkovDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::CkovDigit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDigit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDigit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_517_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::CkovDigit G__TMAUScLcLCkovDigit;
static int G__MausDataStructure_517_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::CkovDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::CkovDigit*) (soff+(sizeof(MAUS::CkovDigit)*i)))->~G__TMAUScLcLCkovDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::CkovDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::CkovDigit*) (soff))->~G__TMAUScLcLCkovDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::CkovEvent */
static int G__MausDataStructure_522_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovEvent[n];
     } else {
       p = new((void*) gvp) MAUS::CkovEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::CkovEvent;
     } else {
       p = new((void*) gvp) MAUS::CkovEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::CkovEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::CkovEvent(*(MAUS::CkovEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::CkovEvent(*(MAUS::CkovEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovEvent& obj = ((MAUS::CkovEvent*) G__getstructoffset())->operator=(*(MAUS::CkovEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovDigitArray* pobj;
         const MAUS::CkovDigitArray xobj = ((const MAUS::CkovEvent*) G__getstructoffset())->GetCkovDigitArray();
         pobj = new MAUS::CkovDigitArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::CkovDigit* pobj;
         const MAUS::CkovDigit xobj = ((const MAUS::CkovEvent*) G__getstructoffset())->GetCkovDigitArrayElement((size_t) G__int(libp->para[0]));
         pobj = new MAUS::CkovDigit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::CkovEvent*) G__getstructoffset())->GetCkovDigitArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovEvent*) G__getstructoffset())->SetCkovDigitArray(*((MAUS::CkovDigitArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::CkovEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::CkovEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::CkovEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::CkovEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::CkovEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::CkovEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_522_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::CkovEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::CkovEvent G__TMAUScLcLCkovEvent;
static int G__MausDataStructure_522_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::CkovEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::CkovEvent*) (soff+(sizeof(MAUS::CkovEvent)*i)))->~G__TMAUScLcLCkovEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::CkovEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::CkovEvent*) (soff))->~G__TMAUScLcLCkovEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::KLEvent */
static int G__MausDataStructure_523_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::KLEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::KLEvent[n];
     } else {
       p = new((void*) gvp) MAUS::KLEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::KLEvent;
     } else {
       p = new((void*) gvp) MAUS::KLEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::KLEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::KLEvent(*(MAUS::KLEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::KLEvent(*(MAUS::KLEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::KLEvent& obj = ((MAUS::KLEvent*) G__getstructoffset())->operator=(*(MAUS::KLEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::KLEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::KLEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::KLEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::KLEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::KLEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::KLEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::KLEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::KLEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::KLEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::KLEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::KLEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_523_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::KLEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::KLEvent G__TMAUScLcLKLEvent;
static int G__MausDataStructure_523_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::KLEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::KLEvent*) (soff+(sizeof(MAUS::KLEvent)*i)))->~G__TMAUScLcLKLEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::KLEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::KLEvent*) (soff))->~G__TMAUScLcLKLEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::EMREvent */
static int G__MausDataStructure_524_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::EMREvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::EMREvent[n];
     } else {
       p = new((void*) gvp) MAUS::EMREvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::EMREvent;
     } else {
       p = new((void*) gvp) MAUS::EMREvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::EMREvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::EMREvent(*(MAUS::EMREvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::EMREvent(*(MAUS::EMREvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::EMREvent& obj = ((MAUS::EMREvent*) G__getstructoffset())->operator=(*(MAUS::EMREvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::EMREvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::EMREvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::EMREvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::EMREvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::EMREvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::EMREvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::EMREvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::EMREvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::EMREvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::EMREvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::EMREvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_524_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::EMREvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::EMREvent G__TMAUScLcLEMREvent;
static int G__MausDataStructure_524_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::EMREvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::EMREvent*) (soff+(sizeof(MAUS::EMREvent)*i)))->~G__TMAUScLcLEMREvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::EMREvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::EMREvent*) (soff))->~G__TMAUScLcLEMREvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::TriggerEvent */
static int G__MausDataStructure_525_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TriggerEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TriggerEvent[n];
     } else {
       p = new((void*) gvp) MAUS::TriggerEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::TriggerEvent;
     } else {
       p = new((void*) gvp) MAUS::TriggerEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::TriggerEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::TriggerEvent(*(MAUS::TriggerEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::TriggerEvent(*(MAUS::TriggerEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::TriggerEvent& obj = ((MAUS::TriggerEvent*) G__getstructoffset())->operator=(*(MAUS::TriggerEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::TriggerEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TriggerEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::TriggerEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::TriggerEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::TriggerEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TriggerEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TriggerEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::TriggerEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TriggerEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TriggerEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::TriggerEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_525_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::TriggerEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::TriggerEvent G__TMAUScLcLTriggerEvent;
static int G__MausDataStructure_525_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::TriggerEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::TriggerEvent*) (soff+(sizeof(MAUS::TriggerEvent)*i)))->~G__TMAUScLcLTriggerEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::TriggerEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::TriggerEvent*) (soff))->~G__TMAUScLcLTriggerEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::GlobalEvent */
static int G__MausDataStructure_526_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::GlobalEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::GlobalEvent[n];
     } else {
       p = new((void*) gvp) MAUS::GlobalEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::GlobalEvent;
     } else {
       p = new((void*) gvp) MAUS::GlobalEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::GlobalEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::GlobalEvent(*(MAUS::GlobalEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::GlobalEvent(*(MAUS::GlobalEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::GlobalEvent& obj = ((MAUS::GlobalEvent*) G__getstructoffset())->operator=(*(MAUS::GlobalEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::GlobalEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::GlobalEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::GlobalEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::GlobalEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::GlobalEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::GlobalEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::GlobalEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::GlobalEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::GlobalEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::GlobalEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::GlobalEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_526_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::GlobalEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::GlobalEvent G__TMAUScLcLGlobalEvent;
static int G__MausDataStructure_526_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::GlobalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::GlobalEvent*) (soff+(sizeof(MAUS::GlobalEvent)*i)))->~G__TMAUScLcLGlobalEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::GlobalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::GlobalEvent*) (soff))->~G__TMAUScLcLGlobalEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::ReconEvent */
static int G__MausDataStructure_527_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::ReconEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::ReconEvent[n];
     } else {
       p = new((void*) gvp) MAUS::ReconEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::ReconEvent;
     } else {
       p = new((void*) gvp) MAUS::ReconEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLReconEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::ReconEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::ReconEvent(*(MAUS::ReconEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::ReconEvent(*(MAUS::ReconEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLReconEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ReconEvent& obj = ((MAUS::ReconEvent*) G__getstructoffset())->operator=(*(MAUS::ReconEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->GetPartEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->SetPartEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->GetTOFEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->SetTOFEvent((MAUS::TOFEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->GetSciFiEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->SetSciFiEvent((MAUS::SciFiEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->GetCkovEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->SetCkovEvent((MAUS::CkovEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->GetKLEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->SetKLEvent((MAUS::KLEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->GetEMREvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->SetEMREvent((MAUS::EMREvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->GetTriggerEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->SetTriggerEvent((MAUS::TriggerEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->GetGlobalEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->SetGlobalEvent((MAUS::GlobalEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::ReconEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::ReconEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::ReconEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::ReconEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::ReconEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::ReconEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::ReconEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::ReconEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::ReconEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_527_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::ReconEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::ReconEvent G__TMAUScLcLReconEvent;
static int G__MausDataStructure_527_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::ReconEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::ReconEvent*) (soff+(sizeof(MAUS::ReconEvent)*i)))->~G__TMAUScLcLReconEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::ReconEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::ReconEvent*) (soff))->~G__TMAUScLcLReconEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Spill */
static int G__MausDataStructure_543_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Spill* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Spill[n];
     } else {
       p = new((void*) gvp) MAUS::Spill[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Spill;
     } else {
       p = new((void*) gvp) MAUS::Spill;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Spill* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Spill(*(MAUS::Spill*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Spill(*(MAUS::Spill*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Spill& obj = ((MAUS::Spill*) G__getstructoffset())->operator=(*(MAUS::Spill*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetScalars((MAUS::Scalars*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Spill*) G__getstructoffset())->GetScalars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetEMRSpillData((MAUS::EMRSpillData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Spill*) G__getstructoffset())->GetEMRSpillData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetDAQData((MAUS::DAQData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Spill*) G__getstructoffset())->GetDAQData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetMCEvents((MAUS::MCEventArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Spill*) G__getstructoffset())->GetMCEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::MCEvent& obj = ((const MAUS::Spill*) G__getstructoffset())->GetAnMCEvent((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::Spill*) G__getstructoffset())->GetMCEventSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetReconEvents((MAUS::ReconEventArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Spill*) G__getstructoffset())->GetReconEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ReconEvent& obj = ((const MAUS::Spill*) G__getstructoffset())->GetAReconEvent((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MAUS::Spill*) G__getstructoffset())->GetReconEventSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetSpillNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Spill*) G__getstructoffset())->GetSpillNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetDaqEventType(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MAUS::Spill*) G__getstructoffset())->GetDaqEventType();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetRunNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAUS::Spill*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->SetErrors(*((MAUS::ErrorsMap*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ErrorsMap* pobj;
         const MAUS::ErrorsMap xobj = ((const MAUS::Spill*) G__getstructoffset())->GetErrors();
         pobj = new MAUS::ErrorsMap(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Spill::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Spill::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Spill::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Spill::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Spill*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Spill*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Spill::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Spill::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Spill::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_543_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Spill::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Spill G__TMAUScLcLSpill;
static int G__MausDataStructure_543_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Spill*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Spill*) (soff+(sizeof(MAUS::Spill)*i)))->~G__TMAUScLcLSpill();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Spill*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Spill*) (soff))->~G__TMAUScLcLSpill();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Data */
static int G__MausDataStructure_544_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Data* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Data[n];
     } else {
       p = new((void*) gvp) MAUS::Data[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Data;
     } else {
       p = new((void*) gvp) MAUS::Data;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Data* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Data(*(MAUS::Data*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Data(*(MAUS::Data*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Data& obj = ((MAUS::Data*) G__getstructoffset())->operator=(*(MAUS::Data*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Data*) G__getstructoffset())->SetSpill((MAUS::Spill*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Data*) G__getstructoffset())->GetSpill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MAUS::Data*) G__getstructoffset())->my_sizeof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Data::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Data::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Data::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Data::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Data*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Data*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Data*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Data*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Data::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Data::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Data::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_544_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Data::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Data G__TMAUScLcLData;
static int G__MausDataStructure_544_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Data*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Data*) (soff+(sizeof(MAUS::Data)*i)))->~G__TMAUScLcLData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Data*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Data*) (soff))->~G__TMAUScLcLData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAUS::Step */
static int G__MausDataStructure_545_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Step* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Step[n];
     } else {
       p = new((void*) gvp) MAUS::Step[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAUS::Step;
     } else {
       p = new((void*) gvp) MAUS::Step;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLStep));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAUS::Step* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAUS::Step(*(MAUS::Step*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MAUS::Step(*(MAUS::Step*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLStep));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::Step& obj = ((MAUS::Step*) G__getstructoffset())->operator=(*(MAUS::Step*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Step*) G__getstructoffset())->GetPosition();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->SetPosition(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAUS::ThreeVector* pobj;
         const MAUS::ThreeVector xobj = ((const MAUS::Step*) G__getstructoffset())->GetMomentum();
         pobj = new MAUS::ThreeVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->SetMomentum(*((MAUS::ThreeVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Step*) G__getstructoffset())->GetProperTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->SetProperTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Step*) G__getstructoffset())->GetPathLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->SetPathLength((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Step*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Step*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->SetEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAUS::Step*) G__getstructoffset())->GetEnergyDeposited());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->SetEnergyDeposited((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAUS::Step::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Step::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAUS::Step::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAUS::Step::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAUS::Step*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAUS::Step*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Step::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Step::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAUS::Step::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MausDataStructure_545_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAUS::Step::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAUS::Step G__TMAUScLcLStep;
static int G__MausDataStructure_545_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAUS::Step*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAUS::Step*) (soff+(sizeof(MAUS::Step)*i)))->~G__TMAUScLcLStep();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAUS::Step*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAUS::Step*) (soff))->~G__TMAUScLcLStep();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CLHEP::Hep3Vector */

/* MAUS::Primary */

/* MAUS::SciFiEvent */

/* MAUS::Pmt0 */

/* MAUS::SpecialVirtualChannelId */

/* MAUS::V1724 */

/* MAUS::KLDaq */

/* MAUS::V1290 */

/* MAUS::Trigger */

/* MAUS::TOFDaq */

/* MAUS::Channels */

/* MAUS::V830 */

/* MAUS::V1731 */

/* MAUS::CkovDaq */

/* MAUS::Unknown */

/* MAUS::TriggerRequest */

/* MAUS::Tag */

/* MAUS::DAQData */

/* MAUS::EMRSpillData */

/* MAUS::Scalars */

/* MAUS::TOFChannelId */

/* MAUS::SciFiChannelId */

/* MAUS::Hit<MAUS::SciFiChannelId> */

/* MAUS::Hit<MAUS::TOFChannelId> */

/* MAUS::Hit<MAUS::SpecialVirtualChannelId> */

/* MAUS::Track */

/* MAUS::VirtualHit */

/* MAUS::MCEvent */

/* MAUS::TOFDigit */

/* MAUS::TOFEventDigit */

/* MAUS::Pmt1 */

/* MAUS::TOFSlabHit */

/* MAUS::TOFEventSlabHit */

/* MAUS::TOFSpacePoint */

/* MAUS::TOFEventSpacePoint */

/* MAUS::TOFEvent */

/* MAUS::CkovA */

/* MAUS::CkovB */

/* MAUS::CkovDigit */

/* MAUS::CkovEvent */

/* MAUS::KLEvent */

/* MAUS::EMREvent */

/* MAUS::TriggerEvent */

/* MAUS::GlobalEvent */

/* MAUS::ReconEvent */

/* MAUS::Spill */

/* MAUS::Data */

/* MAUS::Step */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMausDataStructure {
 public:
  G__Sizep2memfuncMausDataStructure(): p(&G__Sizep2memfuncMausDataStructure::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMausDataStructure::*p)();
};

size_t G__get_sizep2memfuncMausDataStructure()
{
  G__Sizep2memfuncMausDataStructure a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMausDataStructure() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMausDataStructure() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ThreeVector",117,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<V1724>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::V1724>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("V1724Array",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<V1290>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::V1290>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("V1290Array",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SampleArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<V1731>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::V1731>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("V1731Array",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KLDaq*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::KLDaq*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KLArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CkovDaq*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::CkovDaq*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CkovArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TOFDaq*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::TOFDaq*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF0DaqArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Trigger*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::Trigger*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TriggerArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF1DaqArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF2DaqArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TriggerRequest*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::TriggerRequest*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TriggerRequestArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Unknown*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::Unknown*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("UnknownArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Tag*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::Tag*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TagArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Hit<SciFiChannelId>",117,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Hit<TOFChannelId>",117,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Hit<SpecialVirtualChannelId>",117,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Track>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::Track>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TrackArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<VirtualHit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::VirtualHit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VirtualHitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SciFiHit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::Hit<MAUS::SciFiChannelId> >",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SciFiHitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TOFHit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::Hit<MAUS::TOFChannelId> >",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOFHitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SpecialVirtualHit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::Hit<MAUS::SpecialVirtualChannelId> >",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SpecialVirtualHitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TOFDigit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::TOFDigit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF0DigitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF2DigitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF1DigitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TOFSlabHit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::TOFSlabHit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF0SlabHitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF2SlabHitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF1SlabHitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TOFSpacePoint>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::TOFSpacePoint>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF0SpacePointArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF1SpacePointArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TOF2SpacePointArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CkovDigit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::CkovDigit>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CkovDigitArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ReconEvent*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::ReconEvent*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReconEventArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCEvent*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::MCEvent*>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("MCEventArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ErrorsMap",117,G__get_linked_tagnum(&G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Step>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MAUS::Step>",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StepArray",117,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR),0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUS));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CLHEP::Hep3Vector */
static void G__setup_memvarCLHEPcLcLHep3Vector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector));
   { CLHEP::Hep3Vector *p; p=(CLHEP::Hep3Vector*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("X=%lldLL",(long long)CLHEP::Hep3Vector::X).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("Y=%lldLL",(long long)CLHEP::Hep3Vector::Y).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("Z=%lldLL",(long long)CLHEP::Hep3Vector::Z).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("NUM_COORDINATES=%lldLL",(long long)CLHEP::Hep3Vector::NUM_COORDINATES).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("SIZE=%lldLL",(long long)CLHEP::Hep3Vector::SIZE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("ToleranceTicks=%lldLL",(long long)CLHEP::Hep3Vector::ToleranceTicks).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"dx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"dy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"dz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,2,"tolerance=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Primary */
static void G__setup_memvarMAUScLcLPrimary(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary));
   { MAUS::Primary *p; p=(MAUS::Primary*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_seed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_particle_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::SciFiEvent */
static void G__setup_memvarMAUScLcLSciFiEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent));
   { MAUS::SciFiEvent *p; p=(MAUS::SciFiEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Pmt0 */
static void G__setup_memvarMAUScLcLPmt0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0));
   { MAUS::Pmt0 *p; p=(MAUS::Pmt0*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_raw_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_leading_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_tof_key=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_request_leading_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::SpecialVirtualChannelId */
static void G__setup_memvarMAUScLcLSpecialVirtualChannelId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId));
   { MAUS::SpecialVirtualChannelId *p; p=(MAUS::SpecialVirtualChannelId*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_station=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::V1724 */
static void G__setup_memvarMAUScLcLV1724(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724));
   { MAUS::V1724 *p; p=(MAUS::V1724*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ldc_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge_mm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_equip_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_phys_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge_pm=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_channel_key=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_time_tag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_time_stamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_geo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::KLDaq */
static void G__setup_memvarMAUScLcLKLDaq(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLDaq));
   { MAUS::KLDaq *p; p=(MAUS::KLDaq*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR),G__defined_typename("V1724Array"),-1,4,"_V1724=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::V1290 */
static void G__setup_memvarMAUScLcLV1290(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290));
   { MAUS::V1290 *p; p=(MAUS::V1290*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_bunch_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ldc_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_equip_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_phys_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trailing_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_channel_key=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_leading_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_time_tag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_time_stamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_geo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Trigger */
static void G__setup_memvarMAUScLcLTrigger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrigger));
   { MAUS::Trigger *p; p=(MAUS::Trigger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR),G__defined_typename("V1290Array"),-1,4,"_V1290=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFDaq */
static void G__setup_memvarMAUScLcLTOFDaq(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq));
   { MAUS::TOFDaq *p; p=(MAUS::TOFDaq*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR),G__defined_typename("V1724Array"),-1,4,"_V1724=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR),G__defined_typename("V1290Array"),-1,4,"_V1290=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Channels */
static void G__setup_memvarMAUScLcLChannels(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels));
   { MAUS::Channels *p; p=(MAUS::Channels*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch27=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch26=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch25=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch24=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch23=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch22=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch21=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch20=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch29=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch28=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch16=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch31=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch12=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch13=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch10=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch11=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch30=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch17=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch14=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch15=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch18=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch19=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch6=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch7=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch8=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch9=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::V830 */
static void G__setup_memvarMAUScLcLV830(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830));
   { MAUS::V830 *p; p=(MAUS::V830*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ldc_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_equip_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels),-1,-1,4,"_channels=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_phys_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_time_stamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_geo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::V1731 */
static void G__setup_memvarMAUScLcLV1731(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1731));
   { MAUS::V1731 *p; p=(MAUS::V1731*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ldc_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("SampleArray"),-1,4,"_samples=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge_mm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_equip_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_phys_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge_pm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_channel_key=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_area=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_max_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_time_tag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_time_stamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_geo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::CkovDaq */
static void G__setup_memvarMAUScLcLCkovDaq(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDaq));
   { MAUS::CkovDaq *p; p=(MAUS::CkovDaq*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR),G__defined_typename("V1731Array"),-1,4,"_V1731=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Unknown */
static void G__setup_memvarMAUScLcLUnknown(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLUnknown));
   { MAUS::Unknown *p; p=(MAUS::Unknown*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR),G__defined_typename("V1290Array"),-1,4,"_V1290=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TriggerRequest */
static void G__setup_memvarMAUScLcLTriggerRequest(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerRequest));
   { MAUS::TriggerRequest *p; p=(MAUS::TriggerRequest*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR),G__defined_typename("V1290Array"),-1,4,"_V1290=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Tag */
static void G__setup_memvarMAUScLcLTag(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTag));
   { MAUS::Tag *p; p=(MAUS::Tag*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR),G__defined_typename("V1724Array"),-1,4,"_V1724=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::DAQData */
static void G__setup_memvarMAUScLcLDAQData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData));
   { MAUS::DAQData *p; p=(MAUS::DAQData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830),-1,-1,4,"_V830=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR),G__defined_typename("TriggerRequestArray"),-1,4,"_trigger_request=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR),G__defined_typename("TOF1DaqArray"),-1,4,"_tof1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR),G__defined_typename("CkovArray"),-1,4,"_ckov=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR),G__defined_typename("TOF2DaqArray"),-1,4,"_tof2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR),G__defined_typename("UnknownArray"),-1,4,"_unknown=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR),G__defined_typename("KLArray"),-1,4,"_kl=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR),G__defined_typename("TagArray"),-1,4,"_tag=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR),G__defined_typename("TOF0DaqArray"),-1,4,"_tof0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR),G__defined_typename("TriggerArray"),-1,4,"_trigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::EMRSpillData */
static void G__setup_memvarMAUScLcLEMRSpillData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData));
   { MAUS::EMRSpillData *p; p=(MAUS::EMRSpillData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Scalars */
static void G__setup_memvarMAUScLcLScalars(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars));
   { MAUS::Scalars *p; p=(MAUS::Scalars*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFChannelId */
static void G__setup_memvarMAUScLcLTOFChannelId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId));
   { MAUS::TOFChannelId *p; p=(MAUS::TOFChannelId*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_slab=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_plane=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_station=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::SciFiChannelId */
static void G__setup_memvarMAUScLcLSciFiChannelId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId));
   { MAUS::SciFiChannelId *p; p=(MAUS::SciFiChannelId*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_fiber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_station=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_tracker=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_plane=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Hit<MAUS::SciFiChannelId> */
static void G__setup_memvarMAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR));
   { MAUS::Hit<MAUS::SciFiChannelId> *p; p=(MAUS::Hit<MAUS::SciFiChannelId>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_track_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_particle_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy_deposited=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId),-1,-1,4,"_channel_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Hit<MAUS::TOFChannelId> */
static void G__setup_memvarMAUScLcLHitlEMAUScLcLTOFChannelIdgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR));
   { MAUS::Hit<MAUS::TOFChannelId> *p; p=(MAUS::Hit<MAUS::TOFChannelId>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_track_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_particle_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy_deposited=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId),-1,-1,4,"_channel_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Hit<MAUS::SpecialVirtualChannelId> */
static void G__setup_memvarMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR));
   { MAUS::Hit<MAUS::SpecialVirtualChannelId> *p; p=(MAUS::Hit<MAUS::SpecialVirtualChannelId>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_track_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_particle_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy_deposited=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId),-1,-1,4,"_channel_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Track */
static void G__setup_memvarMAUScLcLTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrack));
   { MAUS::Track *p; p=(MAUS::Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR),G__defined_typename("StepArray"),-1,4,"_steps=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_initial_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_final_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_initial_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_final_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_particle_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_track_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_parent_track_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::VirtualHit */
static void G__setup_memvarMAUScLcLVirtualHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLVirtualHit));
   { MAUS::VirtualHit *p; p=(MAUS::VirtualHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_station_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_particle_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_track_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_proper_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_path_length=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_b_field=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_e_field=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::MCEvent */
static void G__setup_memvarMAUScLcLMCEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLMCEvent));
   { MAUS::MCEvent *p; p=(MAUS::MCEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary),-1,-1,4,"_primary=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR),G__defined_typename("VirtualHitArray"),-1,4,"_virtuals=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR),G__defined_typename("SciFiHitArray"),-1,4,"_sci_fi_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR),G__defined_typename("TOFHitArray"),-1,4,"_tof_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR),G__defined_typename("SpecialVirtualHitArray"),-1,4,"_special_virtual_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR),G__defined_typename("TrackArray"),-1,4,"_tracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFDigit */
static void G__setup_memvarMAUScLcLTOFDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit));
   { MAUS::TOFDigit *p; p=(MAUS::TOFDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pmt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_leading_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_request_leading_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_trailing_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_request_trailing_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge_mm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trailing_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_plane=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge_pm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_phys_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_station=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_leading_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_time_stamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_tof_key=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_time_tag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_slab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFEventDigit */
static void G__setup_memvarMAUScLcLTOFEventDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit));
   { MAUS::TOFEventDigit *p; p=(MAUS::TOFEventDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR),G__defined_typename("TOF1DigitArray"),-1,4,"_tof1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR),G__defined_typename("TOF0DigitArray"),-1,4,"_tof0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR),G__defined_typename("TOF2DigitArray"),-1,4,"_tof2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Pmt1 */
static void G__setup_memvarMAUScLcLPmt1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1));
   { MAUS::Pmt1 *p; p=(MAUS::Pmt1*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_raw_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_leading_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_tof_key=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_trigger_request_leading_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFSlabHit */
static void G__setup_memvarMAUScLcLTOFSlabHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit));
   { MAUS::TOFSlabHit *p; p=(MAUS::TOFSlabHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_slab=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_phys_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_raw_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_plane=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge_product=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_station=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1),-1,-1,4,"_pmt1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0),-1,-1,4,"_pmt0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFEventSlabHit */
static void G__setup_memvarMAUScLcLTOFEventSlabHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit));
   { MAUS::TOFEventSlabHit *p; p=(MAUS::TOFEventSlabHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR),G__defined_typename("TOF1SlabHitArray"),-1,4,"_tof1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR),G__defined_typename("TOF0SlabHitArray"),-1,4,"_tof0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR),G__defined_typename("TOF2SlabHitArray"),-1,4,"_tof2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFSpacePoint */
static void G__setup_memvarMAUScLcLTOFSpacePoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint));
   { MAUS::TOFSpacePoint *p; p=(MAUS::TOFSpacePoint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_phys_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_pixel_key=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_station=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_slabY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_slabX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_charge_product=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_dt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFEventSpacePoint */
static void G__setup_memvarMAUScLcLTOFEventSpacePoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint));
   { MAUS::TOFEventSpacePoint *p; p=(MAUS::TOFEventSpacePoint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR),G__defined_typename("TOF0SpacePointArray"),-1,4,"_tof0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR),G__defined_typename("TOF1SpacePointArray"),-1,4,"_tof1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR),G__defined_typename("TOF2SpacePointArray"),-1,4,"_tof2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TOFEvent */
static void G__setup_memvarMAUScLcLTOFEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent));
   { MAUS::TOFEvent *p; p=(MAUS::TOFEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit),-1,-1,4,"_tof_slab_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint),-1,-1,4,"_tof_space_points=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit),-1,-1,4,"_tof_digits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::CkovA */
static void G__setup_memvarMAUScLcLCkovA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA));
   { MAUS::CkovA *p; p=(MAUS::CkovA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_coincidences=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_total_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_number_of_pes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::CkovB */
static void G__setup_memvarMAUScLcLCkovB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB));
   { MAUS::CkovB *p; p=(MAUS::CkovB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_arrival_time_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_pulse_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_coincidences=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_total_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_number_of_pes=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_position_min_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::CkovDigit */
static void G__setup_memvarMAUScLcLCkovDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDigit));
   { MAUS::CkovDigit *p; p=(MAUS::CkovDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA),-1,-1,4,"_A=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB),-1,-1,4,"_B=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::CkovEvent */
static void G__setup_memvarMAUScLcLCkovEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent));
   { MAUS::CkovEvent *p; p=(MAUS::CkovEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR),G__defined_typename("CkovDigitArray"),-1,4,"_ckov_digits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::KLEvent */
static void G__setup_memvarMAUScLcLKLEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent));
   { MAUS::KLEvent *p; p=(MAUS::KLEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::EMREvent */
static void G__setup_memvarMAUScLcLEMREvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent));
   { MAUS::EMREvent *p; p=(MAUS::EMREvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::TriggerEvent */
static void G__setup_memvarMAUScLcLTriggerEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent));
   { MAUS::TriggerEvent *p; p=(MAUS::TriggerEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::GlobalEvent */
static void G__setup_memvarMAUScLcLGlobalEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent));
   { MAUS::GlobalEvent *p; p=(MAUS::GlobalEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::ReconEvent */
static void G__setup_memvarMAUScLcLReconEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLReconEvent));
   { MAUS::ReconEvent *p; p=(MAUS::ReconEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent),-1,-1,4,"_tof_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent),-1,-1,4,"_scifi_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent),-1,-1,4,"_ckov_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent),-1,-1,4,"_kl_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent),-1,-1,4,"_emr_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent),-1,-1,4,"_trigger_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent),-1,-1,4,"_global_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_part_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Spill */
static void G__setup_memvarMAUScLcLSpill(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill));
   { MAUS::Spill *p; p=(MAUS::Spill*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData),-1,-1,4,"_daq=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars),-1,-1,4,"_scalars=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData),-1,-1,4,"_emr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR),G__defined_typename("MCEventArray"),-1,4,"_mc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR),G__defined_typename("ReconEventArray"),-1,4,"_recon=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_spill_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_run_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_string),-1,-1,4,"_daq_event_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<std::string,std::string>"),-1,4,"_errors=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Data */
static void G__setup_memvarMAUScLcLData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLData));
   { MAUS::Data *p; p=(MAUS::Data*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill),-1,-1,4,"_spill=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAUS::Step */
static void G__setup_memvarMAUScLcLStep(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLStep));
   { MAUS::Step *p; p=(MAUS::Step*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),G__defined_typename("ThreeVector"),-1,4,"_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_proper_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_path_length=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_energy_deposited=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MausDataStructureLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMausDataStructure() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCLHEPcLcLHep3Vector(void) {
   /* CLHEP::Hep3Vector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector));
   G__memfunc_setup("Hep3Vector",963,G__MausDataStructure_166_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 3, 1, 1, 0, 
"d - - 0 '0.0' x d - - 0 '0.0' y "
"d - - 0 '0.0' z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hep3Vector",963,G__MausDataStructure_166_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__MausDataStructure_166_0_3, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__MausDataStructure_166_0_4, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__MausDataStructure_166_0_5, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__MausDataStructure_166_0_6, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__MausDataStructure_166_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__MausDataStructure_166_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__MausDataStructure_166_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__MausDataStructure_166_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__MausDataStructure_166_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__MausDataStructure_166_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__MausDataStructure_166_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__MausDataStructure_166_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__MausDataStructure_166_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosTheta",827,G__MausDataStructure_166_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cos2Theta",877,G__MausDataStructure_166_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag2",359,G__MausDataStructure_166_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag",309,G__MausDataStructure_166_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhi",621,G__MausDataStructure_166_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - ph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTheta",834,G__MausDataStructure_166_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMag",609,G__MausDataStructure_166_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__MausDataStructure_166_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp",439,G__MausDataStructure_166_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPerp",739,G__MausDataStructure_166_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCylTheta",1130,G__MausDataStructure_166_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__MausDataStructure_166_0_27, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp",439,G__MausDataStructure_166_0_28, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_166_0_29, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__MausDataStructure_166_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__MausDataStructure_166_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNear",610,G__MausDataStructure_166_0_32, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - - d - - 0 'tolerance' epsilon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("howNear",724,G__MausDataStructure_166_0_33, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaR",604,G__MausDataStructure_166_0_34, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__MausDataStructure_166_0_35, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__MausDataStructure_166_0_36, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__MausDataStructure_166_0_37, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__MausDataStructure_166_0_38, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__MausDataStructure_166_0_39, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unit",448,G__MausDataStructure_166_0_40, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("orthogonal",1085,G__MausDataStructure_166_0_41, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__MausDataStructure_166_0_42, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cross",554,G__MausDataStructure_166_0_43, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__MausDataStructure_166_0_44, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoRapidity",1494,G__MausDataStructure_166_0_45, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta",614,G__MausDataStructure_166_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCylEta",910,G__MausDataStructure_166_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateX",743,G__MausDataStructure_166_0_48, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateY",744,G__MausDataStructure_166_0_49, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateZ",745,G__MausDataStructure_166_0_50, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateUz",862,G__MausDataStructure_166_0_51, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__MausDataStructure_166_0_52, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 2, 1, 1, 0, 
"d - - 0 - - u 'CLHEP::Hep3Vector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__MausDataStructure_166_0_53, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::HepRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("transform",988,G__MausDataStructure_166_0_54, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::HepRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRThetaPhi",1205,G__MausDataStructure_166_0_55, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - r d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setREtaPhi",985,G__MausDataStructure_166_0_56, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - r d - - 0 - eta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRhoPhiZ",1008,G__MausDataStructure_166_0_57, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - rho d - - 0 - phi "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRhoPhiTheta",1420,G__MausDataStructure_166_0_58, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - rho d - - 0 - phi "
"d - - 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRhoPhiEta",1200,G__MausDataStructure_166_0_59, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - rho d - - 0 - phi "
"d - - 0 - eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__MausDataStructure_166_0_60, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__MausDataStructure_166_0_61, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__MausDataStructure_166_0_62, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getR",402,G__MausDataStructure_166_0_63, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTheta",822,G__MausDataStructure_166_0_64, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhi",609,G__MausDataStructure_166_0_65, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("r",114,G__MausDataStructure_166_0_66, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rho",329,G__MausDataStructure_166_0_67, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRho",617,G__MausDataStructure_166_0_68, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__MausDataStructure_166_0_69, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__MausDataStructure_166_0_70, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setR",414,G__MausDataStructure_166_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRho",629,G__MausDataStructure_166_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("compare",743,G__MausDataStructure_166_0_73, 105, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__MausDataStructure_166_0_74, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__MausDataStructure_166_0_75, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>=",999,G__MausDataStructure_166_0_76, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<=",997,G__MausDataStructure_166_0_77, 103, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("diff2",459,G__MausDataStructure_166_0_78, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTolerance",1257,G__MausDataStructure_166_0_79, 100, -1, -1, 0, 1, 3, 1, 0, "d - - 0 - tol", (char*)NULL, (void*) G__func2void( (double (*)(double))(&CLHEP::Hep3Vector::setTolerance) ), 0);
   G__memfunc_setup("getTolerance",1245,G__MausDataStructure_166_0_80, 100, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (double (*)())(&CLHEP::Hep3Vector::getTolerance) ), 0);
   G__memfunc_setup("isParallel",1033,G__MausDataStructure_166_0_81, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - v d - - 0 'tolerance' epsilon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOrthogonal",1273,G__MausDataStructure_166_0_82, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - v d - - 0 'tolerance' epsilon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("howParallel",1147,G__MausDataStructure_166_0_83, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("howOrthogonal",1387,G__MausDataStructure_166_0_84, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("beta",412,G__MausDataStructure_166_0_85, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gamma",515,G__MausDataStructure_166_0_86, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("coLinearRapidity",1651,G__MausDataStructure_166_0_87, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__MausDataStructure_166_0_88, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__MausDataStructure_166_0_89, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosTheta",827,G__MausDataStructure_166_0_90, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cos2Theta",877,G__MausDataStructure_166_0_91, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("project",759,G__MausDataStructure_166_0_92, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("project",759,G__MausDataStructure_166_0_93, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perpPart",846,G__MausDataStructure_166_0_94, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perpPart",846,G__MausDataStructure_166_0_95, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rapidity",870,G__MausDataStructure_166_0_96, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rapidity",870,G__MausDataStructure_166_0_97, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__MausDataStructure_166_0_98, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("polarAngle",1029,G__MausDataStructure_166_0_99, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaPhi",811,G__MausDataStructure_166_0_100, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("azimAngle",920,G__MausDataStructure_166_0_101, 100, -1, -1, 0, 1, 1, 1, 8, "u 'CLHEP::Hep3Vector' - 11 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("polarAngle",1029,G__MausDataStructure_166_0_102, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - v2 u 'CLHEP::Hep3Vector' - 11 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("azimAngle",920,G__MausDataStructure_166_0_103, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'CLHEP::Hep3Vector' - 11 - v2 u 'CLHEP::Hep3Vector' - 11 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__MausDataStructure_166_0_104, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 2, 1, 1, 0, 
"u 'CLHEP::Hep3Vector' - 11 - axis d - - 0 - delta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__MausDataStructure_166_0_105, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::HepAxisAngle' - 11 - ax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__MausDataStructure_166_0_106, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 1, 1, 1, 0, "u 'CLHEP::HepEulerAngles' - 11 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__MausDataStructure_166_0_107, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), -1, 1, 3, 1, 1, 0, 
"d - - 0 - phi d - - 0 - theta "
"d - - 0 - psi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSpherical",1255,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"d - - 0 - r d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCylindrical",1466,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"d - - 0 - r d - - 0 - phi "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("negativeInfinity",1693,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Hep3Vector", 1089, G__MausDataStructure_166_0_111, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLPrimary(void) {
   /* MAUS::Primary */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary));
   G__memfunc_setup("Primary",740,G__MausDataStructure_169_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Primary",740,G__MausDataStructure_169_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary), -1, 0, 1, 1, 1, 0, "u 'MAUS::Primary' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_169_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary), -1, 1, 1, 1, 1, 0, "u 'MAUS::Primary' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleId",1281,G__MausDataStructure_169_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleId",1293,G__MausDataStructure_169_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRandomSeed",1282,G__MausDataStructure_169_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRandomSeed",1294,G__MausDataStructure_169_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - seed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__MausDataStructure_169_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__MausDataStructure_169_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_169_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_169_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__MausDataStructure_169_0_12, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__MausDataStructure_169_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__MausDataStructure_169_0_14, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__MausDataStructure_169_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_169_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Primary::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_169_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Primary::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_169_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Primary::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_169_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Primary::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_169_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_169_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_169_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_169_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_169_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Primary::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_169_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Primary::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_169_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Primary::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_169_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Primary::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Primary", 866, G__MausDataStructure_169_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLSciFiEvent(void) {
   /* MAUS::SciFiEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent));
   G__memfunc_setup("SciFiEvent",976,G__MausDataStructure_170_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SciFiEvent",976,G__MausDataStructure_170_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::SciFiEvent' - 11 - _scifievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_170_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::SciFiEvent' - 11 - _scifievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_170_0_4, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::SciFiEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_170_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SciFiEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_170_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::SciFiEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_170_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::SciFiEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_170_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_170_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_170_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_170_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_170_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SciFiEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_170_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::SciFiEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_170_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SciFiEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_170_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::SciFiEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SciFiEvent", 1102, G__MausDataStructure_170_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLPmt0(void) {
   /* MAUS::Pmt0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0));
   G__memfunc_setup("Pmt0",353,G__MausDataStructure_171_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pmt0",353,G__MausDataStructure_171_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0), -1, 0, 1, 1, 1, 0, "u 'MAUS::Pmt0' - 11 - _pmt0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_171_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0), -1, 1, 1, 1, 1, 0, "u 'MAUS::Pmt0' - 11 - _pmt0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTime",985,G__MausDataStructure_171_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawTime",997,G__MausDataStructure_171_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - raw_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__MausDataStructure_171_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__MausDataStructure_171_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeadingTime",1379,G__MausDataStructure_171_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLeadingTime",1391,G__MausDataStructure_171_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - leading_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_171_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_171_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTofKey",882,G__MausDataStructure_171_0_12, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTofKey",894,G__MausDataStructure_171_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - tof_key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerRequestLeadingTime",2848,G__MausDataStructure_171_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerRequestLeadingTime",2860,G__MausDataStructure_171_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_request_leading_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_171_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Pmt0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_171_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Pmt0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_171_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Pmt0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_171_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Pmt0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_171_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_171_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_171_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_171_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_171_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Pmt0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_171_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Pmt0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_171_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Pmt0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_171_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Pmt0::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Pmt0", 479, G__MausDataStructure_171_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLSpecialVirtualChannelId(void) {
   /* MAUS::SpecialVirtualChannelId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId));
   G__memfunc_setup("SpecialVirtualChannelId",2318,G__MausDataStructure_172_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpecialVirtualChannelId",2318,G__MausDataStructure_172_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId), -1, 0, 1, 1, 1, 0, "u 'MAUS::SpecialVirtualChannelId' - 11 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_172_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId), -1, 1, 1, 1, 1, 0, "u 'MAUS::SpecialVirtualChannelId' - 11 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStation",1026,G__MausDataStructure_172_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStation",1038,G__MausDataStructure_172_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_172_0_6, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::SpecialVirtualChannelId::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_172_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SpecialVirtualChannelId::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_172_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::SpecialVirtualChannelId::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_172_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::SpecialVirtualChannelId::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_172_0_10, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_172_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_172_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_172_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_172_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SpecialVirtualChannelId::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_172_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::SpecialVirtualChannelId::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_172_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SpecialVirtualChannelId::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_172_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::SpecialVirtualChannelId::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SpecialVirtualChannelId", 2444, G__MausDataStructure_172_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLV1724(void) {
   /* MAUS::V1724 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724));
   G__memfunc_setup("V1724",292,G__MausDataStructure_408_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("V1724",292,G__MausDataStructure_408_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724), -1, 0, 1, 1, 1, 0, "u 'MAUS::V1724' - 11 - _v1724", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_408_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724), -1, 1, 1, 1, 1, 0, "u 'MAUS::V1724' - 11 - _v1724", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLdcId",736,G__MausDataStructure_408_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLdcId",748,G__MausDataStructure_408_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ldc_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeMm",1060,G__MausDataStructure_408_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargeMm",1072,G__MausDataStructure_408_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge_mm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEquipType",1222,G__MausDataStructure_408_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEquipType",1234,G__MausDataStructure_408_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - equip_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__MausDataStructure_408_0_10, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__MausDataStructure_408_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysEventNumber",1839,G__MausDataStructure_408_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhysEventNumber",1851,G__MausDataStructure_408_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - phys_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargePm",1063,G__MausDataStructure_408_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargePm",1075,G__MausDataStructure_408_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge_pm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelKey",1282,G__MausDataStructure_408_0_16, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelKey",1294,G__MausDataStructure_408_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - channel_key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerTimeTag",1695,G__MausDataStructure_408_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerTimeTag",1707,G__MausDataStructure_408_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_time_tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeStamp",1204,G__MausDataStructure_408_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeStamp",1216,G__MausDataStructure_408_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - time_stamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal",1106,G__MausDataStructure_408_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__MausDataStructure_408_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pedestal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_408_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_408_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - part_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeo",571,G__MausDataStructure_408_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeo",583,G__MausDataStructure_408_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - geo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMax",1435,G__MausDataStructure_408_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMax",1447,G__MausDataStructure_408_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__MausDataStructure_408_0_30, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannel",997,G__MausDataStructure_408_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_408_0_32, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::V1724::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_408_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1724::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_408_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::V1724::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_408_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::V1724::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_408_0_36, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_408_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_408_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_408_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_408_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1724::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_408_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::V1724::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_408_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1724::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_408_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::V1724::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~V1724", 418, G__MausDataStructure_408_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLKLDaq(void) {
   /* MAUS::KLDaq */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLDaq));
   G__memfunc_setup("KLDaq",429,G__MausDataStructure_413_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLDaq), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KLDaq",429,G__MausDataStructure_413_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLDaq), -1, 0, 1, 1, 1, 0, "u 'MAUS::KLDaq' - 11 - _kldaq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_413_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLDaq), -1, 1, 1, 1, 1, 0, "u 'MAUS::KLDaq' - 11 - _kldaq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724Array",1091,G__MausDataStructure_413_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR), G__defined_typename("MAUS::V1724Array"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724ArrayElement",1805,G__MausDataStructure_413_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724ArraySize",1502,G__MausDataStructure_413_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV1724Array",1103,G__MausDataStructure_413_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::V1724,allocator<MAUS::V1724> >' 'MAUS::V1724Array' 0 - V1724", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_413_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::KLDaq::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_413_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::KLDaq::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_413_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::KLDaq::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_413_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::KLDaq::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_413_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_413_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_413_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_413_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_413_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::KLDaq::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_413_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::KLDaq::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_413_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::KLDaq::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_413_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::KLDaq::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KLDaq", 555, G__MausDataStructure_413_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLV1290(void) {
   /* MAUS::V1290 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290));
   G__memfunc_setup("V1290",290,G__MausDataStructure_414_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("V1290",290,G__MausDataStructure_414_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290), -1, 0, 1, 1, 1, 0, "u 'MAUS::V1290' - 11 - _v1290", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_414_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290), -1, 1, 1, 1, 1, 0, "u 'MAUS::V1290' - 11 - _v1290", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBunchId",957,G__MausDataStructure_414_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBunchId",969,G__MausDataStructure_414_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - bunch_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLdcId",736,G__MausDataStructure_414_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLdcId",748,G__MausDataStructure_414_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ldc_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEquipType",1222,G__MausDataStructure_414_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEquipType",1234,G__MausDataStructure_414_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - equip_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysEventNumber",1839,G__MausDataStructure_414_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhysEventNumber",1851,G__MausDataStructure_414_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - phys_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrailingTime",1513,G__MausDataStructure_414_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrailingTime",1525,G__MausDataStructure_414_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trailing_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelKey",1282,G__MausDataStructure_414_0_14, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelKey",1294,G__MausDataStructure_414_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - channel_key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeadingTime",1379,G__MausDataStructure_414_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLeadingTime",1391,G__MausDataStructure_414_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - leading_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerTimeTag",1695,G__MausDataStructure_414_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerTimeTag",1707,G__MausDataStructure_414_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_time_tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeStamp",1204,G__MausDataStructure_414_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeStamp",1216,G__MausDataStructure_414_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - time_stamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__MausDataStructure_414_0_22, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__MausDataStructure_414_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_414_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_414_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - part_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeo",571,G__MausDataStructure_414_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeo",583,G__MausDataStructure_414_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - geo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__MausDataStructure_414_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannel",997,G__MausDataStructure_414_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_414_0_30, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::V1290::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_414_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1290::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_414_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::V1290::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_414_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::V1290::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_414_0_34, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_414_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_414_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_414_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_414_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1290::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_414_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::V1290::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_414_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1290::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_414_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::V1290::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~V1290", 416, G__MausDataStructure_414_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTrigger(void) {
   /* MAUS::Trigger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrigger));
   G__memfunc_setup("Trigger",724,G__MausDataStructure_419_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrigger), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trigger",724,G__MausDataStructure_419_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrigger), -1, 0, 1, 1, 1, 0, "u 'MAUS::Trigger' - 11 - _trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_419_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrigger), -1, 1, 1, 1, 1, 0, "u 'MAUS::Trigger' - 11 - _trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290Array",1089,G__MausDataStructure_419_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR), G__defined_typename("MAUS::V1290Array"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290ArrayElement",1803,G__MausDataStructure_419_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290ArraySize",1500,G__MausDataStructure_419_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV1290Array",1101,G__MausDataStructure_419_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::V1290,allocator<MAUS::V1290> >' 'MAUS::V1290Array' 0 - V1290", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_419_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Trigger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_419_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Trigger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_419_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Trigger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_419_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Trigger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_419_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_419_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_419_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_419_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_419_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Trigger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_419_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Trigger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_419_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Trigger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_419_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Trigger::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Trigger", 850, G__MausDataStructure_419_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFDaq(void) {
   /* MAUS::TOFDaq */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq));
   G__memfunc_setup("TOFDaq",511,G__MausDataStructure_420_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFDaq",511,G__MausDataStructure_420_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFDaq' - 11 - _tofdaq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_420_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFDaq' - 11 - _tofdaq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724Array",1091,G__MausDataStructure_420_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR), G__defined_typename("MAUS::V1724Array"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724ArrayElement",1805,G__MausDataStructure_420_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724ArraySize",1502,G__MausDataStructure_420_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV1724Array",1103,G__MausDataStructure_420_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::V1724,allocator<MAUS::V1724> >' 'MAUS::V1724Array' 0 - V1724", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290Array",1089,G__MausDataStructure_420_0_8, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR), G__defined_typename("MAUS::V1290Array"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290ArrayElement",1803,G__MausDataStructure_420_0_9, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290ArraySize",1500,G__MausDataStructure_420_0_10, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV1290Array",1101,G__MausDataStructure_420_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::V1290,allocator<MAUS::V1290> >' 'MAUS::V1290Array' 0 - V1290", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_420_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFDaq::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_420_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFDaq::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_420_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFDaq::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_420_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFDaq::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_420_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_420_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_420_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_420_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_420_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFDaq::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_420_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFDaq::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_420_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFDaq::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_420_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFDaq::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFDaq", 637, G__MausDataStructure_420_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLChannels(void) {
   /* MAUS::Channels */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels));
   G__memfunc_setup("Channels",812,G__MausDataStructure_421_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Channels",812,G__MausDataStructure_421_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels), -1, 0, 1, 1, 1, 0, "u 'MAUS::Channels' - 11 - _channels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_421_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels), -1, 1, 1, 1, 1, 0, "u 'MAUS::Channels' - 11 - _channels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh27",564,G__MausDataStructure_421_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh27",576,G__MausDataStructure_421_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch27", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh26",563,G__MausDataStructure_421_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh26",575,G__MausDataStructure_421_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch26", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh25",562,G__MausDataStructure_421_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh25",574,G__MausDataStructure_421_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch25", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh24",561,G__MausDataStructure_421_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh24",573,G__MausDataStructure_421_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch24", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh23",560,G__MausDataStructure_421_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh23",572,G__MausDataStructure_421_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch23", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh22",559,G__MausDataStructure_421_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh22",571,G__MausDataStructure_421_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch22", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh21",558,G__MausDataStructure_421_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh21",570,G__MausDataStructure_421_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch21", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh20",557,G__MausDataStructure_421_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh20",569,G__MausDataStructure_421_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch20", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh29",566,G__MausDataStructure_421_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh29",578,G__MausDataStructure_421_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch29", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh28",565,G__MausDataStructure_421_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh28",577,G__MausDataStructure_421_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch28", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh16",562,G__MausDataStructure_421_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh16",574,G__MausDataStructure_421_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch16", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh31",559,G__MausDataStructure_421_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh31",571,G__MausDataStructure_421_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch31", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh12",558,G__MausDataStructure_421_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh12",570,G__MausDataStructure_421_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch12", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh13",559,G__MausDataStructure_421_0_30, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh13",571,G__MausDataStructure_421_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch13", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh10",556,G__MausDataStructure_421_0_32, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh10",568,G__MausDataStructure_421_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh11",557,G__MausDataStructure_421_0_34, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh11",569,G__MausDataStructure_421_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch11", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh30",558,G__MausDataStructure_421_0_36, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh30",570,G__MausDataStructure_421_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch30", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh17",563,G__MausDataStructure_421_0_38, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh17",575,G__MausDataStructure_421_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch17", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh14",560,G__MausDataStructure_421_0_40, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh14",572,G__MausDataStructure_421_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch14", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh15",561,G__MausDataStructure_421_0_42, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh15",573,G__MausDataStructure_421_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch15", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh18",564,G__MausDataStructure_421_0_44, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh18",576,G__MausDataStructure_421_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch18", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh19",565,G__MausDataStructure_421_0_46, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh19",577,G__MausDataStructure_421_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch19", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh0",507,G__MausDataStructure_421_0_48, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh0",519,G__MausDataStructure_421_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh1",508,G__MausDataStructure_421_0_50, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh1",520,G__MausDataStructure_421_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh2",509,G__MausDataStructure_421_0_52, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh2",521,G__MausDataStructure_421_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh3",510,G__MausDataStructure_421_0_54, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh3",522,G__MausDataStructure_421_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh4",511,G__MausDataStructure_421_0_56, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh4",523,G__MausDataStructure_421_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh5",512,G__MausDataStructure_421_0_58, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh5",524,G__MausDataStructure_421_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh6",513,G__MausDataStructure_421_0_60, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh6",525,G__MausDataStructure_421_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh7",514,G__MausDataStructure_421_0_62, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh7",526,G__MausDataStructure_421_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh8",515,G__MausDataStructure_421_0_64, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh8",527,G__MausDataStructure_421_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh9",516,G__MausDataStructure_421_0_66, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh9",528,G__MausDataStructure_421_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_421_0_68, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Channels::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_421_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Channels::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_421_0_70, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Channels::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_421_0_71, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Channels::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_421_0_72, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_421_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_421_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_421_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_421_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Channels::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_421_0_77, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Channels::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_421_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Channels::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_421_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Channels::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Channels", 938, G__MausDataStructure_421_0_80, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLV830(void) {
   /* MAUS::V830 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830));
   G__memfunc_setup("V830",241,G__MausDataStructure_422_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("V830",241,G__MausDataStructure_422_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830), -1, 0, 1, 1, 1, 0, "u 'MAUS::V830' - 11 - _v830", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_422_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830), -1, 1, 1, 1, 1, 0, "u 'MAUS::V830' - 11 - _v830", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLdcId",736,G__MausDataStructure_422_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLdcId",748,G__MausDataStructure_422_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ldc_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEquipType",1222,G__MausDataStructure_422_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEquipType",1234,G__MausDataStructure_422_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - equip_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannels",1100,G__MausDataStructure_422_0_8, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLChannels), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannels",1112,G__MausDataStructure_422_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::Channels' - 0 - channels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysEventNumber",1839,G__MausDataStructure_422_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhysEventNumber",1851,G__MausDataStructure_422_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - phys_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeStamp",1204,G__MausDataStructure_422_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeStamp",1216,G__MausDataStructure_422_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - time_stamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeo",571,G__MausDataStructure_422_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeo",583,G__MausDataStructure_422_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - geo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_422_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::V830::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_422_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V830::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_422_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::V830::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_422_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::V830::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_422_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_422_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_422_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_422_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_422_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V830::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_422_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::V830::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_422_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V830::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_422_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::V830::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~V830", 367, G__MausDataStructure_422_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLV1731(void) {
   /* MAUS::V1731 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1731));
   G__memfunc_setup("V1731",290,G__MausDataStructure_427_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1731), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("V1731",290,G__MausDataStructure_427_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1731), -1, 0, 1, 1, 1, 0, "u 'MAUS::V1731' - 11 - _v1731", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_427_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1731), -1, 1, 1, 1, 1, 0, "u 'MAUS::V1731' - 11 - _v1731", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLdcId",736,G__MausDataStructure_427_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLdcId",748,G__MausDataStructure_427_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ldc_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSampleArray",1409,G__MausDataStructure_427_0_6, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("MAUS::SampleArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSampleArrayElement",2123,G__MausDataStructure_427_0_7, 105, -1, -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSampleArraySize",1820,G__MausDataStructure_427_0_8, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSampleArray",1421,G__MausDataStructure_427_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'MAUS::SampleArray' 0 - samples", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeMm",1060,G__MausDataStructure_427_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargeMm",1072,G__MausDataStructure_427_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge_mm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEquipType",1222,G__MausDataStructure_427_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEquipType",1234,G__MausDataStructure_427_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - equip_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysEventNumber",1839,G__MausDataStructure_427_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhysEventNumber",1851,G__MausDataStructure_427_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - phys_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargePm",1063,G__MausDataStructure_427_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargePm",1075,G__MausDataStructure_427_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge_pm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime",1408,G__MausDataStructure_427_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime",1420,G__MausDataStructure_427_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelKey",1282,G__MausDataStructure_427_0_20, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelKey",1294,G__MausDataStructure_427_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - channel_key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin",1433,G__MausDataStructure_427_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin",1445,G__MausDataStructure_427_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulseArea",1186,G__MausDataStructure_427_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulseArea",1198,G__MausDataStructure_427_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_area", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPos",888,G__MausDataStructure_427_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxPos",900,G__MausDataStructure_427_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - max_pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerTimeTag",1695,G__MausDataStructure_427_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerTimeTag",1707,G__MausDataStructure_427_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_time_tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeStamp",1204,G__MausDataStructure_427_0_30, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeStamp",1216,G__MausDataStructure_427_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - time_stamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__MausDataStructure_427_0_32, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__MausDataStructure_427_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_427_0_34, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_427_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - part_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeo",571,G__MausDataStructure_427_0_36, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeo",583,G__MausDataStructure_427_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - geo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal",1106,G__MausDataStructure_427_0_38, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__MausDataStructure_427_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pedestal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__MausDataStructure_427_0_40, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannel",997,G__MausDataStructure_427_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_427_0_42, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::V1731::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_427_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1731::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_427_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::V1731::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_427_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::V1731::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_427_0_46, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_427_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_427_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_427_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_427_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1731::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_427_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::V1731::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_427_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::V1731::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_427_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::V1731::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~V1731", 416, G__MausDataStructure_427_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLCkovDaq(void) {
   /* MAUS::CkovDaq */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDaq));
   G__memfunc_setup("CkovDaq",681,G__MausDataStructure_432_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDaq), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CkovDaq",681,G__MausDataStructure_432_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDaq), -1, 0, 1, 1, 1, 0, "u 'MAUS::CkovDaq' - 11 - _ckovdaq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_432_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDaq), -1, 1, 1, 1, 1, 0, "u 'MAUS::CkovDaq' - 11 - _ckovdaq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1731Array",1089,G__MausDataStructure_432_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR), G__defined_typename("MAUS::V1731Array"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1731ArrayElement",1803,G__MausDataStructure_432_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1731), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1731ArraySize",1500,G__MausDataStructure_432_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV1731Array",1101,G__MausDataStructure_432_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::V1731,allocator<MAUS::V1731> >' 'MAUS::V1731Array' 0 - V1731", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_432_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::CkovDaq::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_432_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovDaq::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_432_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::CkovDaq::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_432_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::CkovDaq::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_432_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_432_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_432_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_432_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_432_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovDaq::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_432_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovDaq::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_432_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovDaq::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_432_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovDaq::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CkovDaq", 807, G__MausDataStructure_432_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLUnknown(void) {
   /* MAUS::Unknown */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLUnknown));
   G__memfunc_setup("Unknown",752,G__MausDataStructure_433_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLUnknown), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unknown",752,G__MausDataStructure_433_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLUnknown), -1, 0, 1, 1, 1, 0, "u 'MAUS::Unknown' - 11 - _unknown", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_433_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLUnknown), -1, 1, 1, 1, 1, 0, "u 'MAUS::Unknown' - 11 - _unknown", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290Array",1089,G__MausDataStructure_433_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR), G__defined_typename("MAUS::V1290Array"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290ArrayElement",1803,G__MausDataStructure_433_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290ArraySize",1500,G__MausDataStructure_433_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV1290Array",1101,G__MausDataStructure_433_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::V1290,allocator<MAUS::V1290> >' 'MAUS::V1290Array' 0 - V1290", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_433_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Unknown::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_433_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Unknown::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_433_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Unknown::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_433_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Unknown::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_433_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_433_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_433_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_433_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_433_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Unknown::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_433_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Unknown::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_433_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Unknown::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_433_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Unknown::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Unknown", 878, G__MausDataStructure_433_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTriggerRequest(void) {
   /* MAUS::TriggerRequest */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerRequest));
   G__memfunc_setup("TriggerRequest",1469,G__MausDataStructure_434_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerRequest), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TriggerRequest",1469,G__MausDataStructure_434_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerRequest), -1, 0, 1, 1, 1, 0, "u 'MAUS::TriggerRequest' - 11 - _triggerrequest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_434_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerRequest), -1, 1, 1, 1, 1, 0, "u 'MAUS::TriggerRequest' - 11 - _triggerrequest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290Array",1089,G__MausDataStructure_434_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR), G__defined_typename("MAUS::V1290Array"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290ArrayElement",1803,G__MausDataStructure_434_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1290), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290ArraySize",1500,G__MausDataStructure_434_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV1290Array",1101,G__MausDataStructure_434_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::V1290,allocator<MAUS::V1290> >' 'MAUS::V1290Array' 0 - V1290", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_434_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TriggerRequest::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_434_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TriggerRequest::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_434_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TriggerRequest::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_434_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TriggerRequest::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_434_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_434_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_434_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_434_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_434_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TriggerRequest::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_434_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TriggerRequest::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_434_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TriggerRequest::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_434_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TriggerRequest::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TriggerRequest", 1595, G__MausDataStructure_434_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTag(void) {
   /* MAUS::Tag */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTag));
   G__memfunc_setup("Tag",284,G__MausDataStructure_435_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTag), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tag",284,G__MausDataStructure_435_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTag), -1, 0, 1, 1, 1, 0, "u 'MAUS::Tag' - 11 - _tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_435_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTag), -1, 1, 1, 1, 1, 0, "u 'MAUS::Tag' - 11 - _tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724Array",1091,G__MausDataStructure_435_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR), G__defined_typename("MAUS::V1724Array"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724ArrayElement",1805,G__MausDataStructure_435_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV1724), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1724ArraySize",1502,G__MausDataStructure_435_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV1724Array",1103,G__MausDataStructure_435_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::V1724,allocator<MAUS::V1724> >' 'MAUS::V1724Array' 0 - V1724", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_435_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Tag::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_435_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Tag::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_435_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Tag::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_435_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Tag::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_435_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_435_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_435_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_435_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_435_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Tag::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_435_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Tag::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_435_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Tag::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_435_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Tag::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Tag", 410, G__MausDataStructure_435_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLDAQData(void) {
   /* MAUS::DAQData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData));
   G__memfunc_setup("DAQData",592,G__MausDataStructure_464_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DAQData",592,G__MausDataStructure_464_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData), -1, 0, 1, 1, 1, 0, "u 'MAUS::DAQData' - 11 - _daqdata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_464_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData), -1, 1, 1, 1, 1, 0, "u 'MAUS::DAQData' - 11 - _daqdata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV830",529,G__MausDataStructure_464_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLV830), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV830",541,G__MausDataStructure_464_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::V830' - 0 - V830", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerRequestArray",2268,G__MausDataStructure_464_0_6, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR), G__defined_typename("MAUS::TriggerRequestArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerRequestArrayElement",2982,G__MausDataStructure_464_0_7, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerRequest), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerRequestArraySize",2679,G__MausDataStructure_464_0_8, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerRequestArray",2280,G__MausDataStructure_464_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TriggerRequest*,allocator<MAUS::TriggerRequest*> >' 'MAUS::TriggerRequestArray' 0 - trigger_request", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1DaqArray",1359,G__MausDataStructure_464_0_10, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR), G__defined_typename("MAUS::TOF1DaqArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1DaqArrayElement",2073,G__MausDataStructure_464_0_11, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1DaqArraySize",1770,G__MausDataStructure_464_0_12, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF1DaqArray",1371,G__MausDataStructure_464_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFDaq*,allocator<MAUS::TOFDaq*> >' 'MAUS::TOF1DaqArray' 0 - tof1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovArray",1202,G__MausDataStructure_464_0_14, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR), G__defined_typename("MAUS::CkovArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovArrayElement",1916,G__MausDataStructure_464_0_15, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDaq), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovArraySize",1613,G__MausDataStructure_464_0_16, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCkovArray",1214,G__MausDataStructure_464_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::CkovDaq*,allocator<MAUS::CkovDaq*> >' 'MAUS::CkovArray' 0 - ckov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2DaqArray",1360,G__MausDataStructure_464_0_18, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR), G__defined_typename("MAUS::TOF2DaqArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2DaqArrayElement",2074,G__MausDataStructure_464_0_19, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2DaqArraySize",1771,G__MausDataStructure_464_0_20, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF2DaqArray",1372,G__MausDataStructure_464_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFDaq*,allocator<MAUS::TOFDaq*> >' 'MAUS::TOF2DaqArray' 0 - tof2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnknownArray",1551,G__MausDataStructure_464_0_22, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR), G__defined_typename("MAUS::UnknownArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnknownArrayElement",2265,G__MausDataStructure_464_0_23, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLUnknown), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnknownArraySize",1962,G__MausDataStructure_464_0_24, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUnknownArray",1563,G__MausDataStructure_464_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::Unknown*,allocator<MAUS::Unknown*> >' 'MAUS::UnknownArray' 0 - unknown", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKLArray",950,G__MausDataStructure_464_0_26, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR), G__defined_typename("MAUS::KLArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKLArrayElement",1664,G__MausDataStructure_464_0_27, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLDaq), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKLArraySize",1361,G__MausDataStructure_464_0_28, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKLArray",962,G__MausDataStructure_464_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::KLDaq*,allocator<MAUS::KLDaq*> >' 'MAUS::KLArray' 0 - kl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTagArray",1083,G__MausDataStructure_464_0_30, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR), G__defined_typename("MAUS::TagArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTagArrayElement",1797,G__MausDataStructure_464_0_31, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTag), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTagArraySize",1494,G__MausDataStructure_464_0_32, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTagArray",1095,G__MausDataStructure_464_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::Tag*,allocator<MAUS::Tag*> >' 'MAUS::TagArray' 0 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0DaqArray",1358,G__MausDataStructure_464_0_34, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR), G__defined_typename("MAUS::TOF0DaqArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0DaqArrayElement",2072,G__MausDataStructure_464_0_35, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDaq), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0DaqArraySize",1769,G__MausDataStructure_464_0_36, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF0DaqArray",1370,G__MausDataStructure_464_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFDaq*,allocator<MAUS::TOFDaq*> >' 'MAUS::TOF0DaqArray' 0 - tof0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerArray",1523,G__MausDataStructure_464_0_38, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR), G__defined_typename("MAUS::TriggerArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerArrayElement",2237,G__MausDataStructure_464_0_39, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrigger), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerArraySize",1934,G__MausDataStructure_464_0_40, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerArray",1535,G__MausDataStructure_464_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::Trigger*,allocator<MAUS::Trigger*> >' 'MAUS::TriggerArray' 0 - trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_464_0_42, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::DAQData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_464_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::DAQData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_464_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::DAQData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_464_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::DAQData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_464_0_46, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_464_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_464_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_464_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_464_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::DAQData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_464_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::DAQData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_464_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::DAQData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_464_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::DAQData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DAQData", 718, G__MausDataStructure_464_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLEMRSpillData(void) {
   /* MAUS::EMRSpillData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData));
   G__memfunc_setup("EMRSpillData",1122,G__MausDataStructure_465_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EMRSpillData",1122,G__MausDataStructure_465_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData), -1, 0, 1, 1, 1, 0, "u 'MAUS::EMRSpillData' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_465_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData), -1, 1, 1, 1, 1, 0, "u 'MAUS::EMRSpillData' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_465_0_4, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::EMRSpillData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_465_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::EMRSpillData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_465_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::EMRSpillData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_465_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::EMRSpillData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_465_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_465_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_465_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_465_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_465_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::EMRSpillData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_465_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::EMRSpillData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_465_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::EMRSpillData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_465_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::EMRSpillData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EMRSpillData", 1248, G__MausDataStructure_465_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLScalars(void) {
   /* MAUS::Scalars */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars));
   G__memfunc_setup("Scalars",713,G__MausDataStructure_466_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Scalars",713,G__MausDataStructure_466_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars), -1, 0, 1, 1, 1, 0, "u 'MAUS::Scalars' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_466_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars), -1, 1, 1, 1, 1, 0, "u 'MAUS::Scalars' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_466_0_4, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Scalars::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_466_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Scalars::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_466_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Scalars::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_466_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Scalars::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_466_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_466_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_466_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_466_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_466_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Scalars::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_466_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Scalars::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_466_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Scalars::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_466_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Scalars::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Scalars", 839, G__MausDataStructure_466_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFChannelId(void) {
   /* MAUS::TOFChannelId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId));
   G__memfunc_setup("TOFChannelId",1103,G__MausDataStructure_467_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFChannelId",1103,G__MausDataStructure_467_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFChannelId' - 11 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_467_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFChannelId' - 11 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlab",674,G__MausDataStructure_467_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlab",686,G__MausDataStructure_467_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - slab", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlane",784,G__MausDataStructure_467_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlane",796,G__MausDataStructure_467_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStation",1026,G__MausDataStructure_467_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStation",1038,G__MausDataStructure_467_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_467_0_10, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFChannelId::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_467_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFChannelId::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_467_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFChannelId::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_467_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFChannelId::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_467_0_14, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_467_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_467_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_467_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_467_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFChannelId::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_467_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFChannelId::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_467_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFChannelId::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_467_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFChannelId::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFChannelId", 1229, G__MausDataStructure_467_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLSciFiChannelId(void) {
   /* MAUS::SciFiChannelId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId));
   G__memfunc_setup("SciFiChannelId",1332,G__MausDataStructure_468_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SciFiChannelId",1332,G__MausDataStructure_468_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId), -1, 0, 1, 1, 1, 0, "u 'MAUS::SciFiChannelId' - 11 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_468_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId), -1, 1, 1, 1, 1, 0, "u 'MAUS::SciFiChannelId' - 11 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFiberNumber",1393,G__MausDataStructure_468_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFiberNumber",1405,G__MausDataStructure_468_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fiber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStationNumber",1643,G__MausDataStructure_468_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStationNumber",1655,G__MausDataStructure_468_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackerNumber",1621,G__MausDataStructure_468_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackerNumber",1633,G__MausDataStructure_468_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tracker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneNumber",1401,G__MausDataStructure_468_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlaneNumber",1413,G__MausDataStructure_468_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_468_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::SciFiChannelId::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_468_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SciFiChannelId::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_468_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::SciFiChannelId::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_468_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::SciFiChannelId::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_468_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_468_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_468_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_468_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_468_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SciFiChannelId::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_468_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::SciFiChannelId::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_468_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::SciFiChannelId::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_468_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::SciFiChannelId::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SciFiChannelId", 1458, G__MausDataStructure_468_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLHitlEMAUScLcLSciFiChannelIdgR(void) {
   /* MAUS::Hit<MAUS::SciFiChannelId> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR));
   G__memfunc_setup("Hit<MAUS::SciFiChannelId>",2173,G__MausDataStructure_469_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hit<MAUS::SciFiChannelId>",2173,G__MausDataStructure_469_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR), -1, 0, 1, 1, 1, 0, "u 'MAUS::Hit<MAUS::SciFiChannelId>' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_469_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR), -1, 1, 1, 1, 1, 0, "u 'MAUS::Hit<MAUS::SciFiChannelId>' - 11 - md", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrackId",962,G__MausDataStructure_469_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackId",974,G__MausDataStructure_469_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleId",1281,G__MausDataStructure_469_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleId",1293,G__MausDataStructure_469_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,G__MausDataStructure_469_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergy",918,G__MausDataStructure_469_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__MausDataStructure_469_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCharge",886,G__MausDataStructure_469_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_469_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_469_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyDeposited",1835,G__MausDataStructure_469_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyDeposited",1847,G__MausDataStructure_469_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - edep", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__MausDataStructure_469_0_16, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__MausDataStructure_469_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__MausDataStructure_469_0_18, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__MausDataStructure_469_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChannelId",1158,G__MausDataStructure_469_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiChannelId), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChannelId",1170,G__MausDataStructure_469_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::SciFiChannelId' - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MausDataStructure_469_0_22, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Hit<MAUS::SciFiChannelId>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_469_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::SciFiChannelId>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_469_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Hit<MAUS::SciFiChannelId>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_469_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Hit<MAUS::SciFiChannelId>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_469_0_26, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_469_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_469_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_469_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_469_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::SciFiChannelId>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_469_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Hit<MAUS::SciFiChannelId>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_469_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::SciFiChannelId>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_469_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Hit<MAUS::SciFiChannelId>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Hit<MAUS::SciFiChannelId>", 2299, G__MausDataStructure_469_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLHitlEMAUScLcLTOFChannelIdgR(void) {
   /* MAUS::Hit<MAUS::TOFChannelId> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR));
   G__memfunc_setup("Hit<MAUS::TOFChannelId>",1944,G__MausDataStructure_470_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hit<MAUS::TOFChannelId>",1944,G__MausDataStructure_470_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR), -1, 0, 1, 1, 1, 0, "u 'MAUS::Hit<MAUS::TOFChannelId>' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_470_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR), -1, 1, 1, 1, 1, 0, "u 'MAUS::Hit<MAUS::TOFChannelId>' - 11 - md", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrackId",962,G__MausDataStructure_470_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackId",974,G__MausDataStructure_470_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleId",1281,G__MausDataStructure_470_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleId",1293,G__MausDataStructure_470_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,G__MausDataStructure_470_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergy",918,G__MausDataStructure_470_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__MausDataStructure_470_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCharge",886,G__MausDataStructure_470_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_470_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_470_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyDeposited",1835,G__MausDataStructure_470_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyDeposited",1847,G__MausDataStructure_470_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - edep", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__MausDataStructure_470_0_16, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__MausDataStructure_470_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__MausDataStructure_470_0_18, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__MausDataStructure_470_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChannelId",1158,G__MausDataStructure_470_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFChannelId), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChannelId",1170,G__MausDataStructure_470_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::TOFChannelId' - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MausDataStructure_470_0_22, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Hit<MAUS::TOFChannelId>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_470_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::TOFChannelId>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_470_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Hit<MAUS::TOFChannelId>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_470_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Hit<MAUS::TOFChannelId>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_470_0_26, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_470_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_470_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_470_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_470_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::TOFChannelId>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_470_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Hit<MAUS::TOFChannelId>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_470_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::TOFChannelId>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_470_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Hit<MAUS::TOFChannelId>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Hit<MAUS::TOFChannelId>", 2070, G__MausDataStructure_470_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR(void) {
   /* MAUS::Hit<MAUS::SpecialVirtualChannelId> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR));
   G__memfunc_setup("Hit<MAUS::SpecialVirtualChannelId>",3159,G__MausDataStructure_471_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hit<MAUS::SpecialVirtualChannelId>",3159,G__MausDataStructure_471_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR), -1, 0, 1, 1, 1, 0, "u 'MAUS::Hit<MAUS::SpecialVirtualChannelId>' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_471_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR), -1, 1, 1, 1, 1, 0, "u 'MAUS::Hit<MAUS::SpecialVirtualChannelId>' - 11 - md", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrackId",962,G__MausDataStructure_471_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackId",974,G__MausDataStructure_471_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleId",1281,G__MausDataStructure_471_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleId",1293,G__MausDataStructure_471_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,G__MausDataStructure_471_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergy",918,G__MausDataStructure_471_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__MausDataStructure_471_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCharge",886,G__MausDataStructure_471_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_471_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_471_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyDeposited",1835,G__MausDataStructure_471_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyDeposited",1847,G__MausDataStructure_471_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - edep", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__MausDataStructure_471_0_16, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__MausDataStructure_471_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__MausDataStructure_471_0_18, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__MausDataStructure_471_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChannelId",1158,G__MausDataStructure_471_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChannelId",1170,G__MausDataStructure_471_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::SpecialVirtualChannelId' - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MausDataStructure_471_0_22, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_471_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_471_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Hit<MAUS::SpecialVirtualChannelId>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_471_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Hit<MAUS::SpecialVirtualChannelId>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_471_0_26, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_471_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_471_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_471_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_471_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::SpecialVirtualChannelId>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_471_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Hit<MAUS::SpecialVirtualChannelId>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_471_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Hit<MAUS::SpecialVirtualChannelId>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_471_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Hit<MAUS::SpecialVirtualChannelId>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Hit<MAUS::SpecialVirtualChannelId>", 3285, G__MausDataStructure_471_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTrack(void) {
   /* MAUS::Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrack));
   G__memfunc_setup("Track",501,G__MausDataStructure_472_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Track",501,G__MausDataStructure_472_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrack), -1, 0, 1, 1, 1, 0, "u 'MAUS::Track' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_472_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTrack), -1, 1, 1, 1, 1, 0, "u 'MAUS::Track' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialPosition",1855,G__MausDataStructure_472_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialPosition",1867,G__MausDataStructure_472_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialMomentum",1852,G__MausDataStructure_472_0_6, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialMomentum",1864,G__MausDataStructure_472_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFinalPosition",1631,G__MausDataStructure_472_0_8, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFinalPosition",1643,G__MausDataStructure_472_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFinalMomentum",1628,G__MausDataStructure_472_0_10, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFinalMomentum",1640,G__MausDataStructure_472_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleId",1281,G__MausDataStructure_472_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleId",1293,G__MausDataStructure_472_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackId",962,G__MausDataStructure_472_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackId",974,G__MausDataStructure_472_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentTrackId",1580,G__MausDataStructure_472_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParentTrackId",1592,G__MausDataStructure_472_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSteps",815,G__MausDataStructure_472_0_18, 85, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR), G__defined_typename("MAUS::StepArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSteps",827,G__MausDataStructure_472_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<MAUS::Step,allocator<MAUS::Step> >' 'MAUS::StepArray' 0 - steps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_472_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_472_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_472_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_472_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_472_0_24, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_472_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_472_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_472_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_472_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_472_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_472_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_472_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Track::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Track", 627, G__MausDataStructure_472_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLVirtualHit(void) {
   /* MAUS::VirtualHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLVirtualHit));
   G__memfunc_setup("VirtualHit",1036,G__MausDataStructure_473_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLVirtualHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VirtualHit",1036,G__MausDataStructure_473_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLVirtualHit), -1, 0, 1, 1, 1, 0, "u 'MAUS::VirtualHit' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_473_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLVirtualHit), -1, 1, 1, 1, 1, 0, "u 'MAUS::VirtualHit' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStationId",1199,G__MausDataStructure_473_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStationId",1211,G__MausDataStructure_473_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleId",1281,G__MausDataStructure_473_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleId",1293,G__MausDataStructure_473_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackId",962,G__MausDataStructure_473_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackId",974,G__MausDataStructure_473_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_473_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_473_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__MausDataStructure_473_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__MausDataStructure_473_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__MausDataStructure_473_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__MausDataStructure_473_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProperTime",1319,G__MausDataStructure_473_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProperTime",1331,G__MausDataStructure_473_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - proper_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPathLength",1295,G__MausDataStructure_473_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPathLength",1307,G__MausDataStructure_473_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - path_length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__MausDataStructure_473_0_20, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__MausDataStructure_473_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__MausDataStructure_473_0_22, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__MausDataStructure_473_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBField",838,G__MausDataStructure_473_0_24, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBField",850,G__MausDataStructure_473_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - b_field", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEField",841,G__MausDataStructure_473_0_26, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEField",853,G__MausDataStructure_473_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - e_field", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_473_0_28, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::VirtualHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_473_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::VirtualHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_473_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::VirtualHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_473_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::VirtualHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_473_0_32, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_473_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_473_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_473_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_473_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::VirtualHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_473_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::VirtualHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_473_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::VirtualHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_473_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::VirtualHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~VirtualHit", 1162, G__MausDataStructure_473_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLMCEvent(void) {
   /* MAUS::MCEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLMCEvent));
   G__memfunc_setup("MCEvent",658,G__MausDataStructure_494_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLMCEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCEvent",658,G__MausDataStructure_494_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLMCEvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::MCEvent' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_494_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLMCEvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::MCEvent' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracks",904,G__MausDataStructure_494_0_4, 85, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR), G__defined_typename("MAUS::TrackArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTracks",916,G__MausDataStructure_494_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<MAUS::Track,allocator<MAUS::Track> >' 'MAUS::TrackArray' 0 - tracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVirtualHits",1439,G__MausDataStructure_494_0_6, 85, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR), G__defined_typename("MAUS::VirtualHitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVirtualHits",1451,G__MausDataStructure_494_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<MAUS::VirtualHit,allocator<MAUS::VirtualHit> >' 'MAUS::VirtualHitArray' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAVirtualHit",1389,G__MausDataStructure_494_0_8, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLVirtualHit), -1, 1, 1, 1, 1, 8, "k - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVirtualHitsSize",1850,G__MausDataStructure_494_0_9, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSciFiHits",1158,G__MausDataStructure_494_0_10, 85, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR), G__defined_typename("MAUS::SciFiHitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSciFiHits",1170,G__MausDataStructure_494_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<MAUS::Hit<MAUS::SciFiChannelId>,allocator<MAUS::Hit<MAUS::SciFiChannelId> > >' 'MAUS::SciFiHitArray' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFHits",929,G__MausDataStructure_494_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR), G__defined_typename("MAUS::TOFHitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFHits",941,G__MausDataStructure_494_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<MAUS::Hit<MAUS::TOFChannelId>,allocator<MAUS::Hit<MAUS::TOFChannelId> > >' 'MAUS::TOFHitArray' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpecialVirtualHits",2144,G__MausDataStructure_494_0_14, 85, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR), G__defined_typename("MAUS::SpecialVirtualHitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpecialVirtualHits",2156,G__MausDataStructure_494_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<MAUS::Hit<MAUS::SpecialVirtualChannelId>,allocator<MAUS::Hit<MAUS::SpecialVirtualChannelId> > >' 'MAUS::SpecialVirtualHitArray' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrimary",1028,G__MausDataStructure_494_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPrimary), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrimary",1040,G__MausDataStructure_494_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::Primary' - 0 - primary", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_494_0_18, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::MCEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_494_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::MCEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_494_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::MCEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_494_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::MCEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_494_0_22, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_494_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_494_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_494_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_494_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::MCEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_494_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::MCEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_494_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::MCEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_494_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::MCEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MCEvent", 784, G__MausDataStructure_494_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFDigit(void) {
   /* MAUS::TOFDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit));
   G__memfunc_setup("TOFDigit",730,G__MausDataStructure_495_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFDigit",730,G__MausDataStructure_495_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFDigit' - 11 - _tofdigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_495_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFDigit' - 11 - _tofdigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPmt",593,G__MausDataStructure_495_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPmt",605,G__MausDataStructure_495_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerLeadingTime",2103,G__MausDataStructure_495_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerLeadingTime",2115,G__MausDataStructure_495_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_leading_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerRequestLeadingTime",2848,G__MausDataStructure_495_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerRequestLeadingTime",2860,G__MausDataStructure_495_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_request_leading_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerTrailingTime",2237,G__MausDataStructure_495_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerTrailingTime",2249,G__MausDataStructure_495_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_trailing_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerRequestTrailingTime",2982,G__MausDataStructure_495_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerRequestTrailingTime",2994,G__MausDataStructure_495_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_request_trailing_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeMm",1060,G__MausDataStructure_495_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargeMm",1072,G__MausDataStructure_495_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge_mm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrailingTime",1513,G__MausDataStructure_495_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrailingTime",1525,G__MausDataStructure_495_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trailing_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlane",784,G__MausDataStructure_495_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlane",796,G__MausDataStructure_495_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargePm",1063,G__MausDataStructure_495_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargePm",1075,G__MausDataStructure_495_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge_pm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysEventNumber",1839,G__MausDataStructure_495_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhysEventNumber",1851,G__MausDataStructure_495_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - phys_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStation",1026,G__MausDataStructure_495_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStation",1038,G__MausDataStructure_495_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeadingTime",1379,G__MausDataStructure_495_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLeadingTime",1391,G__MausDataStructure_495_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - leading_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeStamp",1204,G__MausDataStructure_495_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeStamp",1216,G__MausDataStructure_495_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - time_stamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTofKey",882,G__MausDataStructure_495_0_30, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTofKey",894,G__MausDataStructure_495_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - tof_key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerTimeTag",1695,G__MausDataStructure_495_0_32, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerTimeTag",1707,G__MausDataStructure_495_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_time_tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_495_0_34, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_495_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - part_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlab",674,G__MausDataStructure_495_0_36, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlab",686,G__MausDataStructure_495_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - slab", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_495_0_38, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_495_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_495_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_495_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_495_0_42, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_495_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_495_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_495_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_495_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_495_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_495_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_495_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFDigit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFDigit", 856, G__MausDataStructure_495_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFEventDigit(void) {
   /* MAUS::TOFEventDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit));
   G__memfunc_setup("TOFEventDigit",1244,G__MausDataStructure_500_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFEventDigit",1244,G__MausDataStructure_500_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFEventDigit' - 11 - _tofeventdigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_500_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFEventDigit' - 11 - _tofeventdigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1DigitArray",1578,G__MausDataStructure_500_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR), G__defined_typename("MAUS::TOF1DigitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1DigitArrayElement",2292,G__MausDataStructure_500_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1DigitArraySize",1989,G__MausDataStructure_500_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF1DigitArray",1590,G__MausDataStructure_500_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFDigit,allocator<MAUS::TOFDigit> >' 'MAUS::TOF1DigitArray' 0 - tof1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0DigitArray",1577,G__MausDataStructure_500_0_8, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR), G__defined_typename("MAUS::TOF0DigitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0DigitArrayElement",2291,G__MausDataStructure_500_0_9, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0DigitArraySize",1988,G__MausDataStructure_500_0_10, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF0DigitArray",1589,G__MausDataStructure_500_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFDigit,allocator<MAUS::TOFDigit> >' 'MAUS::TOF0DigitArray' 0 - tof0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2DigitArray",1579,G__MausDataStructure_500_0_12, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR), G__defined_typename("MAUS::TOF2DigitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2DigitArrayElement",2293,G__MausDataStructure_500_0_13, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFDigit), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2DigitArraySize",1990,G__MausDataStructure_500_0_14, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF2DigitArray",1591,G__MausDataStructure_500_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFDigit,allocator<MAUS::TOFDigit> >' 'MAUS::TOF2DigitArray' 0 - tof2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_500_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFEventDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_500_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_500_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFEventDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_500_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFEventDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_500_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_500_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_500_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_500_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_500_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_500_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFEventDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_500_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_500_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFEventDigit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFEventDigit", 1370, G__MausDataStructure_500_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLPmt1(void) {
   /* MAUS::Pmt1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1));
   G__memfunc_setup("Pmt1",354,G__MausDataStructure_501_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pmt1",354,G__MausDataStructure_501_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1), -1, 0, 1, 1, 1, 0, "u 'MAUS::Pmt1' - 11 - _pmt1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_501_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1), -1, 1, 1, 1, 1, 0, "u 'MAUS::Pmt1' - 11 - _pmt1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTime",985,G__MausDataStructure_501_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawTime",997,G__MausDataStructure_501_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - raw_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__MausDataStructure_501_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__MausDataStructure_501_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeadingTime",1379,G__MausDataStructure_501_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLeadingTime",1391,G__MausDataStructure_501_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - leading_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_501_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_501_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTofKey",882,G__MausDataStructure_501_0_12, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTofKey",894,G__MausDataStructure_501_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - tof_key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerRequestLeadingTime",2848,G__MausDataStructure_501_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerRequestLeadingTime",2860,G__MausDataStructure_501_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger_request_leading_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_501_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Pmt1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_501_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Pmt1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_501_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Pmt1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_501_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Pmt1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_501_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_501_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_501_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_501_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_501_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Pmt1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_501_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Pmt1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_501_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Pmt1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_501_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Pmt1::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Pmt1", 480, G__MausDataStructure_501_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFSlabHit(void) {
   /* MAUS::TOFSlabHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit));
   G__memfunc_setup("TOFSlabHit",912,G__MausDataStructure_502_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFSlabHit",912,G__MausDataStructure_502_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFSlabHit' - 11 - _tofslabhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_502_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFSlabHit' - 11 - _tofslabhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlab",674,G__MausDataStructure_502_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlab",686,G__MausDataStructure_502_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - slab", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysEventNumber",1839,G__MausDataStructure_502_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhysEventNumber",1851,G__MausDataStructure_502_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - phys_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTime",985,G__MausDataStructure_502_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawTime",997,G__MausDataStructure_502_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - raw_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__MausDataStructure_502_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__MausDataStructure_502_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlane",784,G__MausDataStructure_502_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlane",796,G__MausDataStructure_502_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeProduct",1611,G__MausDataStructure_502_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargeProduct",1623,G__MausDataStructure_502_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge_product", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_502_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_502_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStation",1026,G__MausDataStructure_502_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStation",1038,G__MausDataStructure_502_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__MausDataStructure_502_0_20, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__MausDataStructure_502_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_502_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_502_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - part_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPmt1",642,G__MausDataStructure_502_0_24, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt1), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPmt1",654,G__MausDataStructure_502_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::Pmt1' - 0 - pmt1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPmt0",641,G__MausDataStructure_502_0_26, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLPmt0), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPmt0",653,G__MausDataStructure_502_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::Pmt0' - 0 - pmt0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_502_0_28, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFSlabHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_502_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFSlabHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_502_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFSlabHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_502_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFSlabHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_502_0_32, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_502_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_502_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_502_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_502_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFSlabHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_502_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFSlabHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_502_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFSlabHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_502_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFSlabHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFSlabHit", 1038, G__MausDataStructure_502_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFEventSlabHit(void) {
   /* MAUS::TOFEventSlabHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit));
   G__memfunc_setup("TOFEventSlabHit",1426,G__MausDataStructure_507_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFEventSlabHit",1426,G__MausDataStructure_507_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFEventSlabHit' - 11 - _tofeventslabhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_507_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFEventSlabHit' - 11 - _tofeventslabhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1SlabHitArray",1760,G__MausDataStructure_507_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR), G__defined_typename("MAUS::TOF1SlabHitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1SlabHitArrayElement",2474,G__MausDataStructure_507_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1SlabHitArraySize",2171,G__MausDataStructure_507_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF1SlabHitArray",1772,G__MausDataStructure_507_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFSlabHit,allocator<MAUS::TOFSlabHit> >' 'MAUS::TOF1SlabHitArray' 0 - tof1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0SlabHitArray",1759,G__MausDataStructure_507_0_8, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR), G__defined_typename("MAUS::TOF0SlabHitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0SlabHitArrayElement",2473,G__MausDataStructure_507_0_9, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0SlabHitArraySize",2170,G__MausDataStructure_507_0_10, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF0SlabHitArray",1771,G__MausDataStructure_507_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFSlabHit,allocator<MAUS::TOFSlabHit> >' 'MAUS::TOF0SlabHitArray' 0 - tof0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2SlabHitArray",1761,G__MausDataStructure_507_0_12, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR), G__defined_typename("MAUS::TOF2SlabHitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2SlabHitArrayElement",2475,G__MausDataStructure_507_0_13, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSlabHit), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2SlabHitArraySize",2172,G__MausDataStructure_507_0_14, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF2SlabHitArray",1773,G__MausDataStructure_507_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFSlabHit,allocator<MAUS::TOFSlabHit> >' 'MAUS::TOF2SlabHitArray' 0 - tof2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_507_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFEventSlabHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_507_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventSlabHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_507_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFEventSlabHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_507_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFEventSlabHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_507_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_507_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_507_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_507_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_507_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventSlabHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_507_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFEventSlabHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_507_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventSlabHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_507_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFEventSlabHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFEventSlabHit", 1552, G__MausDataStructure_507_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFSpacePoint(void) {
   /* MAUS::TOFSpacePoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint));
   G__memfunc_setup("TOFSpacePoint",1247,G__MausDataStructure_508_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFSpacePoint",1247,G__MausDataStructure_508_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFSpacePoint' - 11 - _tofspacepoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_508_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFSpacePoint' - 11 - _tofspacepoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysEventNumber",1839,G__MausDataStructure_508_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhysEventNumber",1851,G__MausDataStructure_508_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - phys_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPixelKey",1099,G__MausDataStructure_508_0_6, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPixelKey",1111,G__MausDataStructure_508_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - pixel_key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__MausDataStructure_508_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__MausDataStructure_508_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStation",1026,G__MausDataStructure_508_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStation",1038,G__MausDataStructure_508_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlaby",795,G__MausDataStructure_508_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlaby",807,G__MausDataStructure_508_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - slabY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlabx",794,G__MausDataStructure_508_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlabx",806,G__MausDataStructure_508_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - slabX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeProduct",1611,G__MausDataStructure_508_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargeProduct",1623,G__MausDataStructure_508_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - charge_product", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_508_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_508_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__MausDataStructure_508_0_20, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__MausDataStructure_508_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_508_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_508_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - part_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDt",472,G__MausDataStructure_508_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDt",484,G__MausDataStructure_508_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_508_0_26, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFSpacePoint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_508_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFSpacePoint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_508_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFSpacePoint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_508_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFSpacePoint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_508_0_30, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_508_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_508_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_508_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_508_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFSpacePoint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_508_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFSpacePoint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_508_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFSpacePoint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_508_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFSpacePoint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFSpacePoint", 1373, G__MausDataStructure_508_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFEventSpacePoint(void) {
   /* MAUS::TOFEventSpacePoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint));
   G__memfunc_setup("TOFEventSpacePoint",1761,G__MausDataStructure_513_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFEventSpacePoint",1761,G__MausDataStructure_513_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFEventSpacePoint' - 11 - _tofeventspacepoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_513_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFEventSpacePoint' - 11 - _tofeventspacepoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0SpacePointArray",2094,G__MausDataStructure_513_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR), G__defined_typename("MAUS::TOF0SpacePointArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0SpacePointArrayElement",2808,G__MausDataStructure_513_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF0SpacePointArraySize",2505,G__MausDataStructure_513_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF0SpacePointArray",2106,G__MausDataStructure_513_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFSpacePoint,allocator<MAUS::TOFSpacePoint> >' 'MAUS::TOF1SpacePointArray' 0 - tof1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1SpacePointArray",2095,G__MausDataStructure_513_0_8, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR), G__defined_typename("MAUS::TOF1SpacePointArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1SpacePointArrayElement",2809,G__MausDataStructure_513_0_9, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF1SpacePointArraySize",2506,G__MausDataStructure_513_0_10, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF1SpacePointArray",2107,G__MausDataStructure_513_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFSpacePoint,allocator<MAUS::TOFSpacePoint> >' 'MAUS::TOF1SpacePointArray' 0 - tof1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2SpacePointArray",2096,G__MausDataStructure_513_0_12, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR), G__defined_typename("MAUS::TOF2SpacePointArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2SpacePointArrayElement",2810,G__MausDataStructure_513_0_13, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF2SpacePointArraySize",2507,G__MausDataStructure_513_0_14, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF2SpacePointArray",2108,G__MausDataStructure_513_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::TOFSpacePoint,allocator<MAUS::TOFSpacePoint> >' 'MAUS::TOF2SpacePointArray' 0 - tof2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_513_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFEventSpacePoint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_513_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventSpacePoint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_513_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFEventSpacePoint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_513_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFEventSpacePoint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_513_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_513_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_513_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_513_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_513_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventSpacePoint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_513_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFEventSpacePoint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_513_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEventSpacePoint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_513_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFEventSpacePoint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFEventSpacePoint", 1887, G__MausDataStructure_513_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTOFEvent(void) {
   /* MAUS::TOFEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent));
   G__memfunc_setup("TOFEvent",747,G__MausDataStructure_514_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFEvent",747,G__MausDataStructure_514_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFEvent' - 11 - _tofevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_514_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::TOFEvent' - 11 - _tofevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFEventSlabHit",1714,G__MausDataStructure_514_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFEventSlabHit",1726,G__MausDataStructure_514_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFEventSlabHit' - 0 - tof_slab_hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFEventSpacePoint",2049,G__MausDataStructure_514_0_6, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFEventSpacePoint",2061,G__MausDataStructure_514_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFEventSpacePoint' - 0 - tof_space_points", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFEventDigit",1532,G__MausDataStructure_514_0_8, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEventDigit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFEventDigit",1544,G__MausDataStructure_514_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::TOFEventDigit' - 0 - tof_digits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_514_0_10, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TOFEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_514_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_514_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TOFEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_514_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TOFEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_514_0_14, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_514_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_514_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_514_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_514_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_514_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_514_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TOFEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_514_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TOFEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOFEvent", 873, G__MausDataStructure_514_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLCkovA(void) {
   /* MAUS::CkovA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA));
   G__memfunc_setup("CkovA",468,G__MausDataStructure_515_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CkovA",468,G__MausDataStructure_515_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA), -1, 0, 1, 1, 1, 0, "u 'MAUS::CkovA' - 11 - _ckova", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_515_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA), -1, 1, 1, 1, 1, 0, "u 'MAUS::CkovA' - 11 - _ckova", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin0",1481,G__MausDataStructure_515_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin0",1493,G__MausDataStructure_515_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min_0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime2",1458,G__MausDataStructure_515_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime2",1470,G__MausDataStructure_515_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime3",1459,G__MausDataStructure_515_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime3",1471,G__MausDataStructure_515_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time_3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime0",1456,G__MausDataStructure_515_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime0",1468,G__MausDataStructure_515_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time_0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime1",1457,G__MausDataStructure_515_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime1",1469,G__MausDataStructure_515_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulse1",858,G__MausDataStructure_515_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse1",870,G__MausDataStructure_515_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulse0",857,G__MausDataStructure_515_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse0",869,G__MausDataStructure_515_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulse3",860,G__MausDataStructure_515_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse3",872,G__MausDataStructure_515_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulse2",859,G__MausDataStructure_515_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse2",871,G__MausDataStructure_515_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoincidences",1511,G__MausDataStructure_515_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoincidences",1523,G__MausDataStructure_515_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - coincidences", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin2",1483,G__MausDataStructure_515_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin2",1495,G__MausDataStructure_515_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin3",1484,G__MausDataStructure_515_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin3",1496,G__MausDataStructure_515_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min_3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCharge",1390,G__MausDataStructure_515_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalCharge",1402,G__MausDataStructure_515_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - total_charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin1",1482,G__MausDataStructure_515_0_30, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin1",1494,G__MausDataStructure_515_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_515_0_32, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_515_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - part_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfPes",1382,G__MausDataStructure_515_0_34, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfPes",1394,G__MausDataStructure_515_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - number_of_pes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_515_0_36, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::CkovA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_515_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_515_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::CkovA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_515_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::CkovA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_515_0_40, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_515_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_515_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_515_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_515_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_515_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_515_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_515_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovA::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CkovA", 594, G__MausDataStructure_515_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLCkovB(void) {
   /* MAUS::CkovB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB));
   G__memfunc_setup("CkovB",469,G__MausDataStructure_516_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CkovB",469,G__MausDataStructure_516_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB), -1, 0, 1, 1, 1, 0, "u 'MAUS::CkovB' - 11 - _ckovb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_516_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB), -1, 1, 1, 1, 1, 0, "u 'MAUS::CkovB' - 11 - _ckovb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime6",1462,G__MausDataStructure_516_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime6",1474,G__MausDataStructure_516_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time_6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime7",1463,G__MausDataStructure_516_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime7",1475,G__MausDataStructure_516_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time_7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime4",1460,G__MausDataStructure_516_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime4",1472,G__MausDataStructure_516_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time_4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrivalTime5",1461,G__MausDataStructure_516_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrivalTime5",1473,G__MausDataStructure_516_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - arrival_time_5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulse5",862,G__MausDataStructure_516_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse5",874,G__MausDataStructure_516_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulse4",861,G__MausDataStructure_516_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse4",873,G__MausDataStructure_516_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulse7",864,G__MausDataStructure_516_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse7",876,G__MausDataStructure_516_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulse6",863,G__MausDataStructure_516_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse6",875,G__MausDataStructure_516_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pulse_6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin6",1487,G__MausDataStructure_516_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin6",1499,G__MausDataStructure_516_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min_6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoincidences",1511,G__MausDataStructure_516_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoincidences",1523,G__MausDataStructure_516_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - coincidences", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCharge",1390,G__MausDataStructure_516_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalCharge",1402,G__MausDataStructure_516_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - total_charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_516_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_516_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - part_event_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin7",1488,G__MausDataStructure_516_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin7",1500,G__MausDataStructure_516_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min_7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfPes",1382,G__MausDataStructure_516_0_30, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfPes",1394,G__MausDataStructure_516_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - number_of_pes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin5",1486,G__MausDataStructure_516_0_32, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin5",1498,G__MausDataStructure_516_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min_5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionMin4",1485,G__MausDataStructure_516_0_34, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionMin4",1497,G__MausDataStructure_516_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - position_min_4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_516_0_36, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::CkovB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_516_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_516_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::CkovB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_516_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::CkovB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_516_0_40, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_516_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_516_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_516_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_516_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_516_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_516_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_516_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CkovB", 595, G__MausDataStructure_516_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLCkovDigit(void) {
   /* MAUS::CkovDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDigit));
   G__memfunc_setup("CkovDigit",900,G__MausDataStructure_517_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CkovDigit",900,G__MausDataStructure_517_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDigit), -1, 0, 1, 1, 1, 0, "u 'MAUS::CkovDigit' - 11 - _ckovdigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_517_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDigit), -1, 1, 1, 1, 1, 0, "u 'MAUS::CkovDigit' - 11 - _ckovdigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovA",756,G__MausDataStructure_517_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovA), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCkovA",768,G__MausDataStructure_517_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::CkovA' - 0 - A", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovB",757,G__MausDataStructure_517_0_6, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovB), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCkovB",769,G__MausDataStructure_517_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MAUS::CkovB' - 0 - B", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_517_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::CkovDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_517_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_517_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::CkovDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_517_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::CkovDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_517_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_517_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_517_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_517_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_517_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_517_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_517_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_517_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovDigit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CkovDigit", 1026, G__MausDataStructure_517_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLCkovEvent(void) {
   /* MAUS::CkovEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent));
   G__memfunc_setup("CkovEvent",917,G__MausDataStructure_522_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CkovEvent",917,G__MausDataStructure_522_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::CkovEvent' - 11 - _ckovevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_522_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::CkovEvent' - 11 - _ckovevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovDigitArray",1699,G__MausDataStructure_522_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR), G__defined_typename("MAUS::CkovDigitArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovDigitArrayElement",2413,G__MausDataStructure_522_0_5, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovDigit), -1, 0, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovDigitArraySize",2110,G__MausDataStructure_522_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCkovDigitArray",1711,G__MausDataStructure_522_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MAUS::CkovDigit,allocator<MAUS::CkovDigit> >' 'MAUS::CkovDigitArray' 0 - ckov_digits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_522_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::CkovEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_522_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_522_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::CkovEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_522_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::CkovEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_522_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_522_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_522_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_522_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_522_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_522_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_522_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::CkovEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_522_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::CkovEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CkovEvent", 1043, G__MausDataStructure_522_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLKLEvent(void) {
   /* MAUS::KLEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent));
   G__memfunc_setup("KLEvent",665,G__MausDataStructure_523_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KLEvent",665,G__MausDataStructure_523_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::KLEvent' - 11 - _klevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_523_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::KLEvent' - 11 - _klevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_523_0_4, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::KLEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_523_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::KLEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_523_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::KLEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_523_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::KLEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_523_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_523_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_523_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_523_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_523_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::KLEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_523_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::KLEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_523_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::KLEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_523_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::KLEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KLEvent", 791, G__MausDataStructure_523_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLEMREvent(void) {
   /* MAUS::EMREvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent));
   G__memfunc_setup("EMREvent",742,G__MausDataStructure_524_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EMREvent",742,G__MausDataStructure_524_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::EMREvent' - 11 - _emrevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_524_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::EMREvent' - 11 - _emrevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_524_0_4, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::EMREvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_524_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::EMREvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_524_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::EMREvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_524_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::EMREvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_524_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_524_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_524_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_524_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_524_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::EMREvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_524_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::EMREvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_524_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::EMREvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_524_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::EMREvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EMREvent", 868, G__MausDataStructure_524_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLTriggerEvent(void) {
   /* MAUS::TriggerEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent));
   G__memfunc_setup("TriggerEvent",1238,G__MausDataStructure_525_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TriggerEvent",1238,G__MausDataStructure_525_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::TriggerEvent' - 11 - _triggerevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_525_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::TriggerEvent' - 11 - _triggerevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_525_0_4, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::TriggerEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_525_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TriggerEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_525_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::TriggerEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_525_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::TriggerEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_525_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_525_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_525_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_525_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_525_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TriggerEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_525_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TriggerEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_525_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::TriggerEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_525_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::TriggerEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TriggerEvent", 1364, G__MausDataStructure_525_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLGlobalEvent(void) {
   /* MAUS::GlobalEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent));
   G__memfunc_setup("GlobalEvent",1107,G__MausDataStructure_526_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GlobalEvent",1107,G__MausDataStructure_526_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::GlobalEvent' - 11 - _globalevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_526_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::GlobalEvent' - 11 - _globalevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_526_0_4, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::GlobalEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_526_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::GlobalEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_526_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::GlobalEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_526_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::GlobalEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_526_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_526_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_526_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_526_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_526_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::GlobalEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_526_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::GlobalEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_526_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::GlobalEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_526_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::GlobalEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GlobalEvent", 1233, G__MausDataStructure_526_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLReconEvent(void) {
   /* MAUS::ReconEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLReconEvent));
   G__memfunc_setup("ReconEvent",1017,G__MausDataStructure_527_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLReconEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconEvent",1017,G__MausDataStructure_527_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLReconEvent), -1, 0, 1, 1, 1, 0, "u 'MAUS::ReconEvent' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_527_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLReconEvent), -1, 1, 1, 1, 1, 0, "u 'MAUS::ReconEvent' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartEventNumber",1826,G__MausDataStructure_527_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartEventNumber",1838,G__MausDataStructure_527_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFEvent",1035,G__MausDataStructure_527_0_6, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTOFEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFEvent",1047,G__MausDataStructure_527_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::TOFEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSciFiEvent",1264,G__MausDataStructure_527_0_8, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSciFiEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSciFiEvent",1276,G__MausDataStructure_527_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::SciFiEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCkovEvent",1205,G__MausDataStructure_527_0_10, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLCkovEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCkovEvent",1217,G__MausDataStructure_527_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::CkovEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKLEvent",953,G__MausDataStructure_527_0_12, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLKLEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKLEvent",965,G__MausDataStructure_527_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::KLEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEMREvent",1030,G__MausDataStructure_527_0_14, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMREvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEMREvent",1042,G__MausDataStructure_527_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::EMREvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerEvent",1526,G__MausDataStructure_527_0_16, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLTriggerEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerEvent",1538,G__MausDataStructure_527_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::TriggerEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalEvent",1395,G__MausDataStructure_527_0_18, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLGlobalEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGlobalEvent",1407,G__MausDataStructure_527_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::GlobalEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_527_0_20, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::ReconEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_527_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::ReconEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_527_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::ReconEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_527_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::ReconEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_527_0_24, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_527_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_527_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_527_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_527_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::ReconEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_527_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::ReconEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_527_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::ReconEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_527_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::ReconEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ReconEvent", 1143, G__MausDataStructure_527_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLSpill(void) {
   /* MAUS::Spill */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill));
   G__memfunc_setup("Spill",516,G__MausDataStructure_543_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spill",516,G__MausDataStructure_543_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill), -1, 0, 1, 1, 1, 0, "u 'MAUS::Spill' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_543_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill), -1, 1, 1, 1, 1, 0, "u 'MAUS::Spill' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScalars",1013,G__MausDataStructure_543_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::Scalars' - 0 - scalars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalars",1001,G__MausDataStructure_543_0_5, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLScalars), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEMRSpillData",1422,G__MausDataStructure_543_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::EMRSpillData' - 0 - emr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEMRSpillData",1410,G__MausDataStructure_543_0_7, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLEMRSpillData), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDAQData",892,G__MausDataStructure_543_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::DAQData' - 0 - daq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDAQData",880,G__MausDataStructure_543_0_9, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLDAQData), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCEvents",1073,G__MausDataStructure_543_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<MAUS::MCEvent*,allocator<MAUS::MCEvent*> >' 'MAUS::MCEventArray' 0 - events", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCEvents",1061,G__MausDataStructure_543_0_11, 85, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR), G__defined_typename("MAUS::MCEventArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnMCEvent",1121,G__MausDataStructure_543_0_12, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLMCEvent), -1, 1, 1, 1, 1, 8, "k - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCEventSize",1357,G__MausDataStructure_543_0_13, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconEvents",1432,G__MausDataStructure_543_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<MAUS::ReconEvent*,allocator<MAUS::ReconEvent*> >' 'MAUS::ReconEventArray' 0 - ReconEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReconEvents",1420,G__MausDataStructure_543_0_15, 85, G__get_linked_tagnum(&G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR), G__defined_typename("MAUS::ReconEventArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAReconEvent",1370,G__MausDataStructure_543_0_16, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLReconEvent), -1, 1, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReconEventSize",1716,G__MausDataStructure_543_0_17, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpillNumber",1433,G__MausDataStructure_543_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - spill", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpillNumber",1421,G__MausDataStructure_543_0_19, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDaqEventType",1510,G__MausDataStructure_543_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaqEventType",1498,G__MausDataStructure_543_0_21, 117, G__get_linked_tagnum(&G__MausDataStructureLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunNumber",1226,G__MausDataStructure_543_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNumber",1214,G__MausDataStructure_543_0_23, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErrors",937,G__MausDataStructure_543_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' 'MAUS::ErrorsMap' 0 - errors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErrors",925,G__MausDataStructure_543_0_25, 117, G__get_linked_tagnum(&G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), G__defined_typename("MAUS::ErrorsMap"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_543_0_26, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Spill::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_543_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Spill::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_543_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Spill::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_543_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Spill::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_543_0_30, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_543_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_543_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_543_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_543_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Spill::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_543_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Spill::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_543_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Spill::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_543_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Spill::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Spill", 642, G__MausDataStructure_543_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLData(void) {
   /* MAUS::Data */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLData));
   G__memfunc_setup("Data",378,G__MausDataStructure_544_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Data",378,G__MausDataStructure_544_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLData), -1, 0, 1, 1, 1, 0, "u 'MAUS::Data' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_544_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLData), -1, 1, 1, 1, 1, 0, "u 'MAUS::Data' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpill",816,G__MausDataStructure_544_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MAUS::Spill' - 0 - spill", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpill",804,G__MausDataStructure_544_0_5, 85, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLSpill), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("my_sizeof",981,G__MausDataStructure_544_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_544_0_7, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Data::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_544_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Data::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_544_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Data::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_544_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Data::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_544_0_11, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_544_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_544_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_544_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_544_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Data::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_544_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Data::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_544_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Data::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_544_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Data::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Data", 504, G__MausDataStructure_544_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAUScLcLStep(void) {
   /* MAUS::Step */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLStep));
   G__memfunc_setup("Step",412,G__MausDataStructure_545_0_1, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLStep), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Step",412,G__MausDataStructure_545_0_2, 105, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLStep), -1, 0, 1, 1, 1, 0, "u 'MAUS::Step' - 11 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__MausDataStructure_545_0_3, 117, G__get_linked_tagnum(&G__MausDataStructureLN_MAUScLcLStep), -1, 1, 1, 1, 1, 0, "u 'MAUS::Step' - 11 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__MausDataStructure_545_0_4, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__MausDataStructure_545_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__MausDataStructure_545_0_6, 117, G__get_linked_tagnum(&G__MausDataStructureLN_CLHEPcLcLHep3Vector), G__defined_typename("MAUS::ThreeVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__MausDataStructure_545_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CLHEP::Hep3Vector' 'MAUS::ThreeVector' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProperTime",1319,G__MausDataStructure_545_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProperTime",1331,G__MausDataStructure_545_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tau", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPathLength",1295,G__MausDataStructure_545_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPathLength",1307,G__MausDataStructure_545_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__MausDataStructure_545_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__MausDataStructure_545_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__MausDataStructure_545_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__MausDataStructure_545_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyDeposited",1835,G__MausDataStructure_545_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyDeposited",1847,G__MausDataStructure_545_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - edep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MausDataStructure_545_0_18, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAUS::Step::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MausDataStructure_545_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Step::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MausDataStructure_545_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAUS::Step::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MausDataStructure_545_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAUS::Step::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MausDataStructure_545_0_22, 85, G__get_linked_tagnum(&G__MausDataStructureLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MausDataStructure_545_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MausDataStructure_545_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MausDataStructure_545_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MausDataStructure_545_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Step::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MausDataStructure_545_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Step::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MausDataStructure_545_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAUS::Step::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MausDataStructure_545_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAUS::Step::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Step", 538, G__MausDataStructure_545_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMausDataStructure() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMausDataStructure() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMausDataStructure() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MausDataStructureLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_CLHEP = { "CLHEP" , 110 , -1 };
G__linked_taginfo G__MausDataStructureLN_CLHEPcLcLHepRotation = { "CLHEP::HepRotation" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_CLHEPcLcLHepEulerAngles = { "CLHEP::HepEulerAngles" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_CLHEPcLcLHepAxisAngle = { "CLHEP::HepAxisAngle" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_CLHEPcLcLHep3Vector = { "CLHEP::Hep3Vector" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA = { "CLHEP::Hep3Vector::$" , 101 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUS = { "MAUS" , 110 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLPrimary = { "MAUS::Primary" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLSciFiEvent = { "MAUS::SciFiEvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLPmt0 = { "MAUS::Pmt0" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId = { "MAUS::SpecialVirtualChannelId" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLV1724 = { "MAUS::V1724" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR = { "vector<MAUS::V1724,allocator<MAUS::V1724> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::V1724,allocator<MAUS::V1724> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLKLDaq = { "MAUS::KLDaq" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLV1290 = { "MAUS::V1290" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR = { "vector<MAUS::V1290,allocator<MAUS::V1290> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::V1290,allocator<MAUS::V1290> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTrigger = { "MAUS::Trigger" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFDaq = { "MAUS::TOFDaq" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLChannels = { "MAUS::Channels" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLV830 = { "MAUS::V830" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLV1731 = { "MAUS::V1731" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR = { "vector<MAUS::V1731,allocator<MAUS::V1731> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::V1731,allocator<MAUS::V1731> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLCkovDaq = { "MAUS::CkovDaq" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLUnknown = { "MAUS::Unknown" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTriggerRequest = { "MAUS::TriggerRequest" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTag = { "MAUS::Tag" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR = { "vector<MAUS::KLDaq*,allocator<MAUS::KLDaq*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::KLDaq*,allocator<MAUS::KLDaq*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR = { "vector<MAUS::CkovDaq*,allocator<MAUS::CkovDaq*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::CkovDaq*,allocator<MAUS::CkovDaq*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR = { "vector<MAUS::TOFDaq*,allocator<MAUS::TOFDaq*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::TOFDaq*,allocator<MAUS::TOFDaq*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR = { "vector<MAUS::Trigger*,allocator<MAUS::Trigger*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::Trigger*,allocator<MAUS::Trigger*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR = { "vector<MAUS::TriggerRequest*,allocator<MAUS::TriggerRequest*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::TriggerRequest*,allocator<MAUS::TriggerRequest*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR = { "vector<MAUS::Unknown*,allocator<MAUS::Unknown*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::Unknown*,allocator<MAUS::Unknown*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR = { "vector<MAUS::Tag*,allocator<MAUS::Tag*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::Tag*,allocator<MAUS::Tag*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLDAQData = { "MAUS::DAQData" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLEMRSpillData = { "MAUS::EMRSpillData" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLScalars = { "MAUS::Scalars" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFChannelId = { "MAUS::TOFChannelId" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLSciFiChannelId = { "MAUS::SciFiChannelId" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR = { "MAUS::Hit<MAUS::SciFiChannelId>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR = { "MAUS::Hit<MAUS::TOFChannelId>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR = { "MAUS::Hit<MAUS::SpecialVirtualChannelId>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTrack = { "MAUS::Track" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLVirtualHit = { "MAUS::VirtualHit" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR = { "vector<MAUS::Track,allocator<MAUS::Track> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::Track,allocator<MAUS::Track> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR = { "vector<MAUS::VirtualHit,allocator<MAUS::VirtualHit> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::VirtualHit,allocator<MAUS::VirtualHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR = { "vector<MAUS::Hit<MAUS::SciFiChannelId>,allocator<MAUS::Hit<MAUS::SciFiChannelId> > >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::Hit<MAUS::SciFiChannelId>,allocator<MAUS::Hit<MAUS::SciFiChannelId> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR = { "vector<MAUS::Hit<MAUS::TOFChannelId>,allocator<MAUS::Hit<MAUS::TOFChannelId> > >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::Hit<MAUS::TOFChannelId>,allocator<MAUS::Hit<MAUS::TOFChannelId> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR = { "vector<MAUS::Hit<MAUS::SpecialVirtualChannelId>,allocator<MAUS::Hit<MAUS::SpecialVirtualChannelId> > >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::Hit<MAUS::SpecialVirtualChannelId>,allocator<MAUS::Hit<MAUS::SpecialVirtualChannelId> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLMCEvent = { "MAUS::MCEvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFDigit = { "MAUS::TOFDigit" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR = { "vector<MAUS::TOFDigit,allocator<MAUS::TOFDigit> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::TOFDigit,allocator<MAUS::TOFDigit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFEventDigit = { "MAUS::TOFEventDigit" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLPmt1 = { "MAUS::Pmt1" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFSlabHit = { "MAUS::TOFSlabHit" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR = { "vector<MAUS::TOFSlabHit,allocator<MAUS::TOFSlabHit> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::TOFSlabHit,allocator<MAUS::TOFSlabHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFEventSlabHit = { "MAUS::TOFEventSlabHit" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFSpacePoint = { "MAUS::TOFSpacePoint" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR = { "vector<MAUS::TOFSpacePoint,allocator<MAUS::TOFSpacePoint> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::TOFSpacePoint,allocator<MAUS::TOFSpacePoint> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint = { "MAUS::TOFEventSpacePoint" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTOFEvent = { "MAUS::TOFEvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLCkovA = { "MAUS::CkovA" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLCkovB = { "MAUS::CkovB" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLCkovDigit = { "MAUS::CkovDigit" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR = { "vector<MAUS::CkovDigit,allocator<MAUS::CkovDigit> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::CkovDigit,allocator<MAUS::CkovDigit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLCkovEvent = { "MAUS::CkovEvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLKLEvent = { "MAUS::KLEvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLEMREvent = { "MAUS::EMREvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLTriggerEvent = { "MAUS::TriggerEvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLGlobalEvent = { "MAUS::GlobalEvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLReconEvent = { "MAUS::ReconEvent" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR = { "vector<MAUS::ReconEvent*,allocator<MAUS::ReconEvent*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::ReconEvent*,allocator<MAUS::ReconEvent*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR = { "vector<MAUS::MCEvent*,allocator<MAUS::MCEvent*> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::MCEvent*,allocator<MAUS::MCEvent*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLSpill = { "MAUS::Spill" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLData = { "MAUS::Data" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_MAUScLcLStep = { "MAUS::Step" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR = { "vector<MAUS::Step,allocator<MAUS::Step> >" , 99 , -1 };
G__linked_taginfo G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MAUS::Step,allocator<MAUS::Step> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMausDataStructure() {
  G__MausDataStructureLN_TClass.tagnum = -1 ;
  G__MausDataStructureLN_TBuffer.tagnum = -1 ;
  G__MausDataStructureLN_TMemberInspector.tagnum = -1 ;
  G__MausDataStructureLN_string.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_CLHEP.tagnum = -1 ;
  G__MausDataStructureLN_CLHEPcLcLHepRotation.tagnum = -1 ;
  G__MausDataStructureLN_CLHEPcLcLHepEulerAngles.tagnum = -1 ;
  G__MausDataStructureLN_CLHEPcLcLHepAxisAngle.tagnum = -1 ;
  G__MausDataStructureLN_CLHEPcLcLHep3Vector.tagnum = -1 ;
  G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA.tagnum = -1 ;
  G__MausDataStructureLN_MAUS.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLPrimary.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLSciFiEvent.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLPmt0.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLV1724.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLKLDaq.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLV1290.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTrigger.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFDaq.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLChannels.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLV830.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLV1731.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLCkovDaq.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLUnknown.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTriggerRequest.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTag.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLDAQData.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLEMRSpillData.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLScalars.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFChannelId.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLSciFiChannelId.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTrack.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLVirtualHit.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLMCEvent.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFDigit.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFEventDigit.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLPmt1.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFSlabHit.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFEventSlabHit.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFSpacePoint.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTOFEvent.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLCkovA.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLCkovB.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLCkovDigit.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLCkovEvent.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLKLEvent.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLEMREvent.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLTriggerEvent.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLGlobalEvent.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLReconEvent.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLSpill.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLData.tagnum = -1 ;
  G__MausDataStructureLN_MAUScLcLStep.tagnum = -1 ;
  G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR.tagnum = -1 ;
  G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMausDataStructure() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_TClass);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_string);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_CLHEP);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_CLHEPcLcLHepRotation);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_CLHEPcLcLHepEulerAngles);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_CLHEPcLcLHepAxisAngle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_CLHEPcLcLHep3Vector),sizeof(CLHEP::Hep3Vector),-1,298752,(char*)NULL,G__setup_memvarCLHEPcLcLHep3Vector,G__setup_memfuncCLHEPcLcLHep3Vector);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_CLHEPcLcLHep3VectorcLcLdA);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLPrimary),sizeof(MAUS::Primary),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLPrimary,G__setup_memfuncMAUScLcLPrimary);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLSciFiEvent),sizeof(MAUS::SciFiEvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLSciFiEvent,G__setup_memfuncMAUScLcLSciFiEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLPmt0),sizeof(MAUS::Pmt0),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLPmt0,G__setup_memfuncMAUScLcLPmt0);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLSpecialVirtualChannelId),sizeof(MAUS::SpecialVirtualChannelId),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLSpecialVirtualChannelId,G__setup_memfuncMAUScLcLSpecialVirtualChannelId);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLV1724),sizeof(MAUS::V1724),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLV1724,G__setup_memfuncMAUScLcLV1724);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1724cOallocatorlEMAUScLcLV1724gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLKLDaq),sizeof(MAUS::KLDaq),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLKLDaq,G__setup_memfuncMAUScLcLKLDaq);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLV1290),sizeof(MAUS::V1290),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLV1290,G__setup_memfuncMAUScLcLV1290);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1290cOallocatorlEMAUScLcLV1290gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTrigger),sizeof(MAUS::Trigger),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTrigger,G__setup_memfuncMAUScLcLTrigger);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFDaq),sizeof(MAUS::TOFDaq),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFDaq,G__setup_memfuncMAUScLcLTOFDaq);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLChannels),sizeof(MAUS::Channels),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLChannels,G__setup_memfuncMAUScLcLChannels);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLV830),sizeof(MAUS::V830),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLV830,G__setup_memfuncMAUScLcLV830);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLV1731),sizeof(MAUS::V1731),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLV1731,G__setup_memfuncMAUScLcLV1731);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLV1731cOallocatorlEMAUScLcLV1731gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLCkovDaq),sizeof(MAUS::CkovDaq),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLCkovDaq,G__setup_memfuncMAUScLcLCkovDaq);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLUnknown),sizeof(MAUS::Unknown),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLUnknown,G__setup_memfuncMAUScLcLUnknown);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTriggerRequest),sizeof(MAUS::TriggerRequest),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTriggerRequest,G__setup_memfuncMAUScLcLTriggerRequest);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTag),sizeof(MAUS::Tag),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTag,G__setup_memfuncMAUScLcLTag);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLKLDaqmUcOallocatorlEMAUScLcLKLDaqmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDaqmUcOallocatorlEMAUScLcLCkovDaqmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDaqmUcOallocatorlEMAUScLcLTOFDaqmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggermUcOallocatorlEMAUScLcLTriggermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTriggerRequestmUcOallocatorlEMAUScLcLTriggerRequestmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLUnknownmUcOallocatorlEMAUScLcLUnknownmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTagmUcOallocatorlEMAUScLcLTagmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLDAQData),sizeof(MAUS::DAQData),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLDAQData,G__setup_memfuncMAUScLcLDAQData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLEMRSpillData),sizeof(MAUS::EMRSpillData),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLEMRSpillData,G__setup_memfuncMAUScLcLEMRSpillData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLScalars),sizeof(MAUS::Scalars),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLScalars,G__setup_memfuncMAUScLcLScalars);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFChannelId),sizeof(MAUS::TOFChannelId),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFChannelId,G__setup_memfuncMAUScLcLTOFChannelId);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLSciFiChannelId),sizeof(MAUS::SciFiChannelId),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLSciFiChannelId,G__setup_memfuncMAUScLcLSciFiChannelId);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSciFiChannelIdgR),sizeof(MAUS::Hit<MAUS::SciFiChannelId>),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLHitlEMAUScLcLSciFiChannelIdgR,G__setup_memfuncMAUScLcLHitlEMAUScLcLSciFiChannelIdgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLTOFChannelIdgR),sizeof(MAUS::Hit<MAUS::TOFChannelId>),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLHitlEMAUScLcLTOFChannelIdgR,G__setup_memfuncMAUScLcLHitlEMAUScLcLTOFChannelIdgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR),sizeof(MAUS::Hit<MAUS::SpecialVirtualChannelId>),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR,G__setup_memfuncMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTrack),sizeof(MAUS::Track),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTrack,G__setup_memfuncMAUScLcLTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLVirtualHit),sizeof(MAUS::VirtualHit),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLVirtualHit,G__setup_memfuncMAUScLcLVirtualHit);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTrackcOallocatorlEMAUScLcLTrackgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLVirtualHitcOallocatorlEMAUScLcLVirtualHitgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSciFiChannelIdgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLTOFChannelIdgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRcOallocatorlEMAUScLcLHitlEMAUScLcLSpecialVirtualChannelIdgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLMCEvent),sizeof(MAUS::MCEvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLMCEvent,G__setup_memfuncMAUScLcLMCEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFDigit),sizeof(MAUS::TOFDigit),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFDigit,G__setup_memfuncMAUScLcLTOFDigit);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFDigitcOallocatorlEMAUScLcLTOFDigitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFEventDigit),sizeof(MAUS::TOFEventDigit),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFEventDigit,G__setup_memfuncMAUScLcLTOFEventDigit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLPmt1),sizeof(MAUS::Pmt1),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLPmt1,G__setup_memfuncMAUScLcLPmt1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFSlabHit),sizeof(MAUS::TOFSlabHit),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFSlabHit,G__setup_memfuncMAUScLcLTOFSlabHit);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSlabHitcOallocatorlEMAUScLcLTOFSlabHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFEventSlabHit),sizeof(MAUS::TOFEventSlabHit),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFEventSlabHit,G__setup_memfuncMAUScLcLTOFEventSlabHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFSpacePoint),sizeof(MAUS::TOFSpacePoint),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFSpacePoint,G__setup_memfuncMAUScLcLTOFSpacePoint);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLTOFSpacePointcOallocatorlEMAUScLcLTOFSpacePointgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFEventSpacePoint),sizeof(MAUS::TOFEventSpacePoint),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFEventSpacePoint,G__setup_memfuncMAUScLcLTOFEventSpacePoint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTOFEvent),sizeof(MAUS::TOFEvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTOFEvent,G__setup_memfuncMAUScLcLTOFEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLCkovA),sizeof(MAUS::CkovA),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLCkovA,G__setup_memfuncMAUScLcLCkovA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLCkovB),sizeof(MAUS::CkovB),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLCkovB,G__setup_memfuncMAUScLcLCkovB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLCkovDigit),sizeof(MAUS::CkovDigit),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLCkovDigit,G__setup_memfuncMAUScLcLCkovDigit);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLCkovDigitcOallocatorlEMAUScLcLCkovDigitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLCkovEvent),sizeof(MAUS::CkovEvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLCkovEvent,G__setup_memfuncMAUScLcLCkovEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLKLEvent),sizeof(MAUS::KLEvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLKLEvent,G__setup_memfuncMAUScLcLKLEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLEMREvent),sizeof(MAUS::EMREvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLEMREvent,G__setup_memfuncMAUScLcLEMREvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLTriggerEvent),sizeof(MAUS::TriggerEvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLTriggerEvent,G__setup_memfuncMAUScLcLTriggerEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLGlobalEvent),sizeof(MAUS::GlobalEvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLGlobalEvent,G__setup_memfuncMAUScLcLGlobalEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLReconEvent),sizeof(MAUS::ReconEvent),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLReconEvent,G__setup_memfuncMAUScLcLReconEvent);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLReconEventmUcOallocatorlEMAUScLcLReconEventmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLMCEventmUcOallocatorlEMAUScLcLMCEventmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLSpill),sizeof(MAUS::Spill),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLSpill,G__setup_memfuncMAUScLcLSpill);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLData),sizeof(MAUS::Data),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLData,G__setup_memfuncMAUScLcLData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MausDataStructureLN_MAUScLcLStep),sizeof(MAUS::Step),-1,265984,(char*)NULL,G__setup_memvarMAUScLcLStep,G__setup_memfuncMAUScLcLStep);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_vectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgR);
   G__get_linked_tagnum_fwd(&G__MausDataStructureLN_reverse_iteratorlEvectorlEMAUScLcLStepcOallocatorlEMAUScLcLStepgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupMausDataStructure(void) {
  G__check_setup_version(30051515,"G__cpp_setupMausDataStructure()");
  G__set_cpp_environmentMausDataStructure();
  G__cpp_setup_tagtableMausDataStructure();

  G__cpp_setup_inheritanceMausDataStructure();

  G__cpp_setup_typetableMausDataStructure();

  G__cpp_setup_memvarMausDataStructure();

  G__cpp_setup_memfuncMausDataStructure();
  G__cpp_setup_globalMausDataStructure();
  G__cpp_setup_funcMausDataStructure();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMausDataStructure();
  return;
}
class G__cpp_setup_initMausDataStructure {
  public:
    G__cpp_setup_initMausDataStructure() { G__add_setup_func("MausDataStructure",(G__incsetup)(&G__cpp_setupMausDataStructure)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMausDataStructure() { G__remove_setup_func("MausDataStructure"); }
};
G__cpp_setup_initMausDataStructure G__cpp_setup_initializerMausDataStructure;

