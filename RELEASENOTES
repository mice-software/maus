This file contains a brief overview of the changes made in each release. A
detailed description of changes is available at:

http://micewww.pp.rl.ac.uk/projects/maus/roadmap

Release Notes
=============
MAUS-v0.4.3
  The following functionality was added:
    - TOF Monte Carlo digitisation now produces more realistic TOF digits
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/51xboa.bash

MAUS-v0.4.2
  The following functionality was added:
    - TOF calibration and cabling information is now indexed in the
      configuration database

MAUS-v0.4.1
  The following functionality was added:
    - JSON output format now supports references (internal links within JSON
      documents)
    - An API has been added for global (cross-detector) reconstruction routines.

MAUS-v0.4.0
  The following functionality was added:
    - The API was updated to facilitate adding new modules to MAUS. New modules
      should inherit from base classes in the src/common_cpp/API directory
    - Additional metadata was added to the data structure detailing job and run
      information
    - A new utility to access information on beamline data available on the
      Configuration Database was added
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/45beamline_fieldmaps.bash

MAUS-v0.3.3
  The following functionality was added:
    - xboa accelerator physics library was updated to use the ROOT datastructure
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/51xboa.bash

MAUS-v0.3.2
  The following functionality was added:
    - Code now optionally builds against Geant4.9.5.p01. Use script in
      third_party/install_build_test_geant4.9.5.p01.bash (a bit experimental)
    - New datacards were added enabling cuts on particle type and energy at
      production
    - The default geometry was changed from Stage6.dat to Test.dat 
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/31geant4.bash   
    - third_party/bash/40python_extras.bash   
    - third_party/bash/44cdb.bash   

MAUS-v0.3.1
  The following functionality was added:
    - An example script to get the field at one or more points was added. In
      the example, the field on-axis for MICE stage VI is plotted.

MAUS-v0.3.0
  The following functionality was added:
    - Documentation for MiceModules was included in the main documentation
    - The code now builds in gcc 4.7.1

MAUS-v0.2.5
  The following functionality was added:
    - A new example for json analysis was added
    - The CDB version was update to 0.3.0
    - The documentation was extended and is now available from the MAUS wiki
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/44cdb.bash   

MAUS-v0.2.4
  The following functionality was added:
    - Visualisation options were added to select colour of different particle
      species and to accumulate tracks into one file
    - A new utility was added to find a list of valid geometries within a
      specified time period.

MAUS-v0.2.3
  The following functionality was added:
    - The default data format is now ROOT. For further information on handling
      this data format, please see the instructions in the MAUS user guide
      (doc/maus_user_guide.pdf) 
    - MAUS now builds on Ubuntu 11.10 (tested against Linux Mint 12)
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/21root.bash
    - third_party/bash/51xboa.bash

MAUS-v0.2.2
  The following functionality was added:
    - Production version of the distributed processing framework and online
      histogramming
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/40python_extras.bash   

MAUS-v0.2.1
  The following functionality was added:
    - Fixed a bug preventing the code from building on some machines

MAUS-v0.2.0
  The following functionality was added:
    - Ckov reconstruction to digits
    - First TOF digitisation
    - Documentation was added for Monte Carlo Simulation 
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/44cdb.bash

MAUS-v0.1.4
  The following functionality was added:
    - Tracker reconstruction to space points
  If upgrading from the previous version, the following third party library
  scripts need to be rerun:
    - third_party/bash/01python.bash
    - third_party/bash/21root.bash
    - third_party/bash/40python_extras.bash
    - third_party/bash/60recpack.bash

MAUS-v0.1.3
  The following functionality was added:
    - A python interface to ROOT for online histogramming has been introduced
    - TOF calibration for the december run is now available

MAUS-v0.1.2
  The following functionality was added:
    - Input beams can now be read from maus, ICOOL and G4Beamline formatted
      files

MAUS-v0.1.1
  The following functionality was added:
    - Prototype functionality to run MAUS online added
  If upgrading from the previous version, the following third party libraries
  need to be rerun:
    - third_party/bash/40python_extras.bash
    - third_party/bash/51xboas.bash
    - third_party/bash/53unpacking.bash
  Additionally the configure script needs to be rerun and env.sh re-sourced.

MAUS-v0.1.0
  The following functionality was added:
    - Functionality to import geometries direct from GDML files into GEANT4
      added

MAUS-v0.0.9
  The following functionality was added:
    - TOF reconstruction to space points added
    - Controls for geant4 physics processes added
    - Generalised histogramming functionality for online data quality added
    - Skeleton documentation outline added
    - Tracker geant4 modelling code was added
    - Tracker digitization code was added
    - TOF digitization code was removed as it did not meet required quality#
      checks
  The following third party libraries need to be rerun:
    - 40python_extras.bash

MAUS-v0.0.8
  - Merged DAQ unpacking code
  - Refactor of execution framework to prepare for multiprocessing and online
    reconstruction
  - Documentation skeleton introduced
  - Executable (bin/utilities/json_browser.py) to browse formatted json output
    in more human readable form 

MAUS-v0.0.7
  - New functions to generate input beam
    -- Multivariate gaussian in x, px, y, py, time, energy
    -- Additionally sawtooth or uniform distribution in time
    -- Either fixed number of particles or selected from binomial distribution
       per spill
    -- Multiple distributions can be generated with difference particle types,
       etc
  - simulate_mice run control is now entirely through datacards
    -- Number of spills input and output filenames can all be selected in
       datacards
  - datacards can be specified on the command line or in an external file
    -- -configuration_file <file> specifies the python file to use for
       datacards

MAUS-v0.0.6
  - Added calls to geant4 inline visualisation

MAUS-v0.0.5
  - Added some new compile flags to control C++ optimisation, profiling,
    debugging, code coverage
  - Added documentation for the Monte Carlo data structure
    (doc/run_control/spill.pdf)
  - Better testing and speed optimisation in Simulation

MAUS-v0.0.4
  - Added SpecialVirtual detectors
  - Updated to xboa-0.11.0

MAUS-v0.0.3:
  - Added RF cavity phasing routine
  - Added a test to check for python style
  - Streamlined the routines for handling errors between python and C++

MAUS-v0.0.2:
  - Added BeamMaker prototype

MAUS-v0.0.1:
  - Initial version
  - Core map-reduce infrastructure
  - Partial implementaton of monte carlo tracking simulation at application level
    -- Port of geometry, fields, geant4 set-up, virtual planes algorithm 
  - Abiity to analyze low-level DAQ data
  - Build system of all dependencies that is tested on a wide range of systems
  - Partial port, testing, and clean up of legacy code
  - Configuration database interface


