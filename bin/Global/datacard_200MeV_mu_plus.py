"""
Datacard to run with simulation of 200MeV/c muons
"""
# pylint: disable=C0103, W0611

import os

output_json_file_name = "200MeV_mu_plus_hypothesis.json"
output_json_file_type = "text"

# Used by MapPyRemoveTracks.
keep_only_muon_tracks = False

# Used by MapCppSimulation
keep_tracks = True # set to true to keep start and end point of every track
keep_steps = False # set to true to keep start and end point of every track and
                   # every step point
simulation_geometry_filename = "Stage4.dat" # geometry used by simulation
maximum_number_of_steps = 10000
simulation_reference_particle = {
    "position":{"x":0.0, "y":-0.0, "z":0.0},
    "momentum":{"x":0.0, "y":0.0, "z":1.0},
    "particle_id":-13, "energy":226.2, "time":0.0, "random_seed":10
}


# used by InputPySpillGenerator to determine the number of empty spills that
# will be generated by the simulation
spill_generator_number_of_spills = 10000
# used by MapPyBeamMaker to generate input particle data
# This is a sample beam distribution based on guesses by Chris Rogers of what
# an optimised beam might look like
beam = {
    "particle_generator":"binomial", # routine for generating empty primaries
    "binomial_n":1, # number of coin tosses
    "binomial_p":1.0, # probability of making a particle on each toss
    "random_seed":5, # random seed for beam generation; controls also how the MC
                     # seeds are generated
    "definitions":[
    {
       "reference":simulation_reference_particle, # reference particle
       "random_seed_algorithm":"incrementing_random", # algorithm for seeding MC
       "weight":100., # probability of generating a particle
       "transverse":{"transverse_mode":"pencil"},
       "longitudinal":{"longitudinal_mode":"pencil", # longitudinal distribution
                                                     # sawtooth in time
                       "momentum_variable":"p"}, # end time of sawtooth
       "coupling":{"coupling_mode":"none"} # no dispersion
    }]
}

particle_decay = False
